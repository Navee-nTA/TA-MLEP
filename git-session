Script started on 2024-06-27 11:14:09+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="47" LINES="41"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git =[K[K-v[K[K --version
[?2004lgit version 2.34.1
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git --version[Kgit --version
[?2004lgit version 2.34.1
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --list --show-origin
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --list --show-origin
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --list --show-origin
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --global user.name "Naveen -nTA"
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --global user.name "Naveen-nTA"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "Naveen-n[1PTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "Naveen-nT[1PA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "Naveen-nTA[1P"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "Naveen-nTA"[K[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce "Naveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm "Naveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca "Naveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci "Naveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl "Naveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CCNaveen-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Caveen[1P-nTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Caveen-[1PnTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cveen-n[1PTA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceen-nT[1PA"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn-nTA[1P"[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn-nTA"[K[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-nTA" [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1PnTA"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1PTA"[1PA"[1P"n"a"v"e" [A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce"n"."a"n"t"o"n"y"@"t"i"g"e"r"a"n"a"l"y"t"i"c"s"."c"o"m"
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --global core.editor emacs [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ks
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --global init.defaultbranc [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[KBranc hws main
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --global init.defaultBranchws main[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[1P main[C[C[1P main[C
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --list
[?2004l[?1h=user.name=Naveen-nTA[m
user.email=naveen.antony@tigeranalytics.com[m
core.editor=emacs[m
init.defaultbranchws=main[m
init.defaultbranch=main[m
[K[?1l>[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config user.name
[?2004lNaveen-nTA
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git on[K[Kconfig --show-origin rerere.autoU pdate
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --show-origin rerere.autoUpdate[C[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config --show-origin rerere.autoUpdate[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[Kuser.name
[?2004lfile:/home/naveen/.gitconfig	Naveen-nTA
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git help config
[?2004l[?1049h[22;0;0t[?1h=GIT-CONFIG(1)       Git Manual      GIT-CONFIG(1)[m
[m
[1mNAME[0m[m
       git-config - Get and set repository or[m
       global options[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m --fixed-value] [--show-origin] [--show-scope] [-z|-[m -null] name [value [value-pattern]][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] -[m -add name value[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m --fixed-value] --replace-all name value [value-patt[m ern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m --show-origin] [--show-scope] [-z|--null] [--fixed-[m value] --get name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m --show-origin] [--show-scope] [-z|--null] [--fixed-[m value] --get-all name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m --show-origin] [--show-scope] [-z|--null] [--fixed-[m value] [--name-only] --get-regexp name_regex [value[m -pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m -z|--null] --get-urlmatch name URL[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] -[m -unset name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] -[m -unset-all name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] --rename-section [m old_name new_name[m
       [4mgit[24m [4mconfig[24m [<file-option>] --remove-section [m name[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--show-origin] [[m --show-scope] [-z|--null] [--name-only] -l | --list[m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-color name [m [default][m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-colorbool n[m ame [stdout-is-tty][m
       [4mgit[24m [4mconfig[24m [<file-option>] -e | --edit[m
[m
[1mDESCRIPTION[0m[m
[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K       You can query/set/replace/unset options[m
       with this command. The name is actually[m
       the section and the key separated by a[m
       dot, and the value will be escaped.[m
[m
       Multiple lines can be added to an option[m
       by using the [1m--add[0m option. If you want to[m
       update or unset an option which can occur[m
       on multiple lines, a [1mvalue-pattern[0m (which[m
       is an extended regular expression, unless[m
       the [1m--fixed-value[0m option is given) needs[m
       to be given. Only the existing values that[m
       match the pattern are updated or unset. If[m
       you want to handle the lines that do [1mnot[0m[m
       match the pattern, just prepend a single[m
       exclamation mark in front (see also the[m
       section called “EXAMPLES”), but note that[m
       this only works when the [1m--fixed-value[0m[m
       option is not in use.[m
[m
       The [1m--type=<type>[0m option instructs [4mgit[24m[m
       [4mconfig[24m to ensure that incoming and[m
       outgoing values are canonicalize-able[m
       under the given <type>. If no[m
       [1m--type=<type>[0m is given, no[m
       canonicalization will be performed.[m
       Callers may unset an existing [1m--type[0m[m
       specifier with [1m--no-type[0m.[m
[m
       When reading, the values are read from the[m
       system, global and repository local[m
       configuration files by default, and[m
       options [1m--system[0m, [1m--global[0m, [1m--local[0m,[m
       [1m--worktree[0m and [1m--file[0m [1m<filename>[0m can be[m
       used to tell the command to read from only[m
       that location (see the section called[m
       “FILES”).[m
[m
       When writing, the new value is written to[m
       the repository local configuration file by[m
       default, and options [1m--system[0m, [1m--global[0m,[m
       [1m--worktree[0m, [1m--file[0m [1m<filename>[0m can be used[m
       to tell the command to write to that[m
       location (you can say [1m--local[0m but that is[m
[7mconfig(1) line 25 (press h for help or q to quit)[27m[K[K       the default).[m
[m
       This command will fail with non-zero[m
       status upon error. Some exit codes are:[m
[m
       •   The section or key is invalid (ret=1),[m
[m
       •   no section or name was provided[m
           (ret=2),[m
[m
       •   the config file is invalid (ret=3),[m
[m
       •   the config file cannot be written[m
           (ret=4),[m
[m
       •   you try to unset an option which does[m
           not exist (ret=5),[m
[m
       •   you try to unset/set an option for[m
           which multiple lines match (ret=5), or[m
[m
       •   you try to use an invalid regexp[m
           (ret=6).[m
[m
       On success, the command returns the exit[m
       code 0.[m
[m
       A list of all available configuration[m
       variables can be obtained using the [1mgit[0m[m
       [1mhelp[0m [1m--config[0m command.[m
[m
[1mOPTIONS[0m[m
       --replace-all[m
           Default behavior is to replace at most[m
           one line. This replaces all lines[m
           matching the key (and optionally the[m
           [1mvalue-pattern[0m).[m
[m
       --add[m
           Adds a new line to the option without[m
           altering any existing values. This is[m
           the same as providing [4m^$[24m as the[m
           [1mvalue-pattern[0m in [1m--replace-all[0m.[m
[m
[7mconfig(1) line 69 (press h for help or q to quit)[27m[K[K       --get[m
           Get the value for a given key[m
           (optionally filtered by a regex[m
           matching the value). Returns error[m
           code 1 if the key was not found and[m
           the last value if multiple key values[m
           were found.[m
[m
       --get-all[m
           Like get, but returns all values for a[m
           multi-valued key.[m
[m
       --get-regexp[m
           Like --get-all, but interprets the[m
           name as a regular expression and[m
           writes out the key names. Regular[m
           expression matching is currently[m
           case-sensitive and done against a[m
           canonicalized version of the key in[m
           which section and variable names are[m
           lowercased, but subsection names are[m
           not.[m
[m
       --get-urlmatch name URL[m
           When given a two-part name[m
           section.key, the value for[m
           section.<url>.key whose <url> part[m
           matches the best to the given URL is[m
           returned (if no such key exists, the[m
           value for section.key is used as a[m
           fallback). When given just the section[m
           as name, do so for all the keys in the[m
           section and list them. Returns error[m
           code 1 if no value is found.[m
[m
       --global[m
           For writing options: write to global[m
           [1m~/.gitconfig[0m file rather than the[m
           repository [1m.git/config[0m, write to[m
           [1m$XDG_CONFIG_HOME/git/config[0m file if[m
           this file exists and the [1m~/.gitconfig[0m[m
           file doesn’t.[m
[m
           For reading options: read only from[m
[7monfig(1) line 113 (press h for help or q to quit)[27m[K[K           global [1m~/.gitconfig[0m and from[m
           [1m$XDG_CONFIG_HOME/git/config[0m rather[m
           than from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --system[m
           For writing options: write to[m
           system-wide [1m$(prefix)/etc/gitconfig[0m[m
           rather than the repository[m
           [1m.git/config[0m.[m
[m
           For reading options: read only from[m
           system-wide [1m$(prefix)/etc/gitconfig[0m[m
           rather than from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --local[m
           For writing options: write to the[m
           repository [1m.git/config[0m file. This is[m
           the default behavior.[m
[m
           For reading options: read only from[m
           the repository [1m.git/config[0m rather than[m
           from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --worktree[m
           Similar to [1m--local[0m except that[m
           [1m.git/config.worktree[0m is read from or[m
           written to if[m
           [1mextensions.worktreeConfig[0m is present.[m
           If not it’s the same as [1m--local[0m.[m
[m
       -f config-file, --file config-file[m
           For writing options: write to the[m
           specified file rather than the[m
           repository [1m.git/config[0m.[m
[m
           For reading options: read only from[m
           the specified file rather than from[m
           all available files.[m
[7monfig(1) line 157 (press h for help or q to quit)[27m[K[K[m
           See also the section called “FILES”.[m
[m
       --blob blob[m
           Similar to [1m--file[0m but use the given[m
           blob instead of a file. E.g. you can[m
           use [4mmaster:.gitmodules[24m to read values[m
           from the file [4m.gitmodules[24m in the[m
           master branch. See "SPECIFYING[m
           REVISIONS" section in [1mgitrevisions[0m(7)[m
           for a more complete list of ways to[m
           spell blob names.[m
[m
       --remove-section[m
           Remove the given section from the[m
           configuration file.[m
[m
       --rename-section[m
           Rename the given section to a new[m
           name.[m
[m
       --unset[m
           Remove the line matching the key from[m
           config file.[m
[m
       --unset-all[m
           Remove all lines matching the key from[m
           config file.[m
[m
       -l, --list[m
           List all variables set in config file,[m
           along with their values.[m
[m
       --fixed-value[m
           When used with the [1mvalue-pattern[0m[m
           argument, treat [1mvalue-pattern[0m as an[m
           exact string instead of a regular[m
           expression. This will restrict the[m
           name/value pairs that are matched to[m
           only those where the value is exactly[m
           equal to the [1mvalue-pattern[0m.[m
[m
       --type <type>[m
           [4mgit[24m [4mconfig[24m will ensure that any input[m
[7monfig(1) line 201 (press h for help or q to quit)[27m[K[K[HM           all available files.[m
[HM           the specified file rather than from[m
[HM           For reading options: read only from[m
[HM[m
[HM           repository [1m.git/config[0m.[m
[HM           specified file rather than the[m
[HM           For writing options: write to the[m
[HM       -f config-file, --file config-file[m
[HM[m
[HM           If not it’s the same as [1m--local[0m.[m
[HM           [1mextensions.worktreeConfig[0m is present.[m
[HM           written to if[m
[HM           [1m.git/config.worktree[0m is read from or[m
[HM           Similar to [1m--local[0m except that[m
[HM       --worktree[m
[HM[m
[HM           See also the section called “FILES”.[m
[HM[m
[HM           from all available files.[m
[HM           the repository [1m.git/config[0m rather than[m
[HM           For reading options: read only from[m
[HM[m
[HM           the default behavior.[m
[HM           repository [1m.git/config[0m file. This is[m
[HM           For writing options: write to the[m
[HM       --local[m
[HM[m
[HM           See also the section called “FILES”.[m
[HM[m
[HM           rather than from all available files.[m
[HM           system-wide [1m$(prefix)/etc/gitconfig[0m[m
[HM           For reading options: read only from[m
[HM[m
[HM           [1m.git/config[0m.[m
[HM           rather than the repository[m
[HM           system-wide [1m$(prefix)/etc/gitconfig[0m[m
[HM           For writing options: write to[m
[HM       --system[m
[HM[m
[HM           See also the section called “FILES”.[m
[HM[m
[HM           than from all available files.[m
[HM           [1m$XDG_CONFIG_HOME/git/config[0m rather[m
[HM           global [1m~/.gitconfig[0m and from[m
[45;1H[K[7monfig(1) line 157 (press h for help or q to quit)[27m[K[K[HM           For reading options: read only from[m
[HM[m
[HM           file doesn’t.[m
[HM           this file exists and the [1m~/.gitconfig[0m[m
[HM           [1m$XDG_CONFIG_HOME/git/config[0m file if[m
[HM           repository [1m.git/config[0m, write to[m
[HM           [1m~/.gitconfig[0m file rather than the[m
[HM           For writing options: write to global[m
[HM       --global[m
[HM[m
[HM           code 1 if no value is found.[m
[HM           section and list them. Returns error[m
[HM           as name, do so for all the keys in the[m
[HM           fallback). When given just the section[m
[HM           value for section.key is used as a[m
[HM           returned (if no such key exists, the[m
[HM           matches the best to the given URL is[m
[HM           section.<url>.key whose <url> part[m
[HM           section.key, the value for[m
[HM           When given a two-part name[m
[HM       --get-urlmatch name URL[m
[HM[m
[HM           not.[m
[HM           lowercased, but subsection names are[m
[HM           which section and variable names are[m
[HM           canonicalized version of the key in[m
[HM           case-sensitive and done against a[m
[HM           expression matching is currently[m
[HM           writes out the key names. Regular[m
[HM           name as a regular expression and[m
[HM           Like --get-all, but interprets the[m
[HM       --get-regexp[m
[HM[m
[HM           multi-valued key.[m
[HM           Like get, but returns all values for a[m
[HM       --get-all[m
[HM[m
[HM           were found.[m
[HM           the last value if multiple key values[m
[HM           code 1 if the key was not found and[m
[HM           matching the value). Returns error[m
[HM           (optionally filtered by a regex[m
[HM           Get the value for a given key[m
[HM       --get[m
[45;1H[K[7monfig(1) line 113 (press h for help or q to quit)[27m[K[K[HM[m
[HM           [1mvalue-pattern[0m in [1m--replace-all[0m.[m
[HM           the same as providing [4m^$[24m as the[m
[HM           altering any existing values. This is[m
[HM           Adds a new line to the option without[m
[HM       --add[m
[HM[m
[HM           [1mvalue-pattern[0m).[m
[HM           matching the key (and optionally the[m
[HM           one line. This replaces all lines[m
[HM           Default behavior is to replace at most[m
[HM       --replace-all[m
[HM[1mOPTIONS[0m[m
[HM[m
[HM       [1mhelp[0m [1m--config[0m command.[m
[HM       variables can be obtained using the [1mgit[0m[m
[HM       A list of all available configuration[m
[HM[m
[HM       code 0.[m
[HM       On success, the command returns the exit[m
[HM[m
[HM           (ret=6).[m
[HM       •   you try to use an invalid regexp[m
[HM[m
[HM           which multiple lines match (ret=5), or[m
[HM       •   you try to unset/set an option for[m
[HM[m
[HM           not exist (ret=5),[m
[HM       •   you try to unset an option which does[m
[HM[m
[HM           (ret=4),[m
[HM       •   the config file cannot be written[m
[HM[m
[HM       •   the config file is invalid (ret=3),[m
[HM[m
[HM           (ret=2),[m
[HM       •   no section or name was provided[m
[HM[m
[HM       •   The section or key is invalid (ret=1),[m
[HM[m
[HM       status upon error. Some exit codes are:[m
[HM       This command will fail with non-zero[m
[HM[m
[HM       the default).[m
[45;1H[K[7mconfig(1) line 69 (press h for help or q to quit)[27m[K[K[HM       location (you can say [1m--local[0m but that is[m
[HM       to tell the command to write to that[m
[HM       [1m--worktree[0m, [1m--file[0m [1m<filename>[0m can be used[m
[HM       default, and options [1m--system[0m, [1m--global[0m,[m
[HM       the repository local configuration file by[m
[HM       When writing, the new value is written to[m
[HM[m
[HM       “FILES”).[m
[HM       that location (see the section called[m
[HM       used to tell the command to read from only[m
[HM       [1m--worktree[0m and [1m--file[0m [1m<filename>[0m can be[m
[HM       options [1m--system[0m, [1m--global[0m, [1m--local[0m,[m
[HM       configuration files by default, and[m
[HM       system, global and repository local[m
[HM       When reading, the values are read from the[m
[HM[m
[HM       specifier with [1m--no-type[0m.[m
[HM       Callers may unset an existing [1m--type[0m[m
[HM       canonicalization will be performed.[m
[HM       [1m--type=<type>[0m is given, no[m
[HM       under the given <type>. If no[m
[HM       outgoing values are canonicalize-able[m
[HM       [4mconfig[24m to ensure that incoming and[m
[HM       The [1m--type=<type>[0m option instructs [4mgit[24m[m
[HM[m
[HM       option is not in use.[m
[HM       this only works when the [1m--fixed-value[0m[m
[HM       section called “EXAMPLES”), but note that[m
[HM       exclamation mark in front (see also the[m
[HM       match the pattern, just prepend a single[m
[HM       you want to handle the lines that do [1mnot[0m[m
[HM       match the pattern are updated or unset. If[m
[HM       to be given. Only the existing values that[m
[HM       the [1m--fixed-value[0m option is given) needs[m
[HM       is an extended regular expression, unless[m
[HM       on multiple lines, a [1mvalue-pattern[0m (which[m
[HM       update or unset an option which can occur[m
[HM       by using the [1m--add[0m option. If you want to[m
[HM       Multiple lines can be added to an option[m
[HM[m
[HM       dot, and the value will be escaped.[m
[HM       the section and the key separated by a[m
[HM       with this command. The name is actually[m
[HM       You can query/set/replace/unset options[m
[45;1H[K[7mconfig(1) line 25 (press h for help or q to quit)[27m[K[K[HM[1mDESCRIPTION[0m[m
[HM[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] -e | --edit[m
[HMame [stdout-is-tty][m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] --get-colorbool n[m[HM[default][m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] --get-color name [m[HM--show-scope] [-z|--null] [--name-only] -l | --list[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--show-origin] [[m[HMname[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] --remove-section [m[HMold_name new_name[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] --rename-section [m[HM-unset-all name [value-pattern][m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] -[m[HM-unset name [value-pattern][m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] -[m[HM-z|--null] --get-urlmatch name URL[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HM-pattern][m
[HMvalue] [--name-only] --get-regexp name_regex [value[m[HM--show-origin] [--show-scope] [-z|--null] [--fixed-[m[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HMvalue] --get-all name [value-pattern][m
[HM--show-origin] [--show-scope] [-z|--null] [--fixed-[m[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HMvalue] --get name [value-pattern][m
[HM--show-origin] [--show-scope] [-z|--null] [--fixed-[m[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HMern][m
[HM--fixed-value] --replace-all name value [value-patt[m[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HM-add name value[m
[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] -[m[HM-null] name [value [value-pattern]][m
[HM--fixed-value] [--show-origin] [--show-scope] [-z|-[m[HM       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [[m[HM[1mSYNOPSIS[0m[m
[HM[m
[HM       global options[m
[HM       git-config - Get and set repository or[m
[HM[1mNAME[0m[m
[HM[m
[HMGIT-CONFIG(1)       Git Manual      GIT-CONFIG(1)[m
[45;1H[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m-config(1) line 1 (press h for help or q to quit)[27m[K[K       You can query/set/replace/unset options[m
       with this command. The name is actually[m
       the section and the key separated by a[m
       dot, and the value will be escaped.[m
[m
       Multiple lines can be added to an option[m
       by using the [1m--add[0m option. If you want to[m
       update or unset an option which can occur[m
       on multiple lines, a [1mvalue-pattern[0m (which[m
       is an extended regular expression, unless[m
       the [1m--fixed-value[0m option is given) needs[m
       to be given. Only the existing values that[m
       match the pattern are updated or unset. If[m
       you want to handle the lines that do [1mnot[0m[m
       match the pattern, just prepend a single[m
       exclamation mark in front (see also the[m
       section called “EXAMPLES”), but note that[m
       this only works when the [1m--fixed-value[0m[m
       option is not in use.[m
[m
       The [1m--type=<type>[0m option instructs [4mgit[24m[m
       [4mconfig[24m to ensure that incoming and[m
       outgoing values are canonicalize-able[m
       under the given <type>. If no[m
       [1m--type=<type>[0m is given, no[m
       canonicalization will be performed.[m
       Callers may unset an existing [1m--type[0m[m
       specifier with [1m--no-type[0m.[m
[m
       When reading, the values are read from the[m
       system, global and repository local[m
       configuration files by default, and[m
       options [1m--system[0m, [1m--global[0m, [1m--local[0m,[m
       [1m--worktree[0m and [1m--file[0m [1m<filename>[0m can be[m
       used to tell the command to read from only[m
       that location (see the section called[m
       “FILES”).[m
[m
       When writing, the new value is written to[m
       the repository local configuration file by[m
       default, and options [1m--system[0m, [1m--global[0m,[m
       [1m--worktree[0m, [1m--file[0m [1m<filename>[0m can be used[m
       to tell the command to write to that[m
       location (you can say [1m--local[0m but that is[m
[7mconfig(1) line 25 (press h for help or q to quit)[27m[K[K       the default).[m
[m
       This command will fail with non-zero[m
       status upon error. Some exit codes are:[m
[m
       •   The section or key is invalid (ret=1),[m
[m
       •   no section or name was provided[m
           (ret=2),[m
[m
       •   the config file is invalid (ret=3),[m
[m
       •   the config file cannot be written[m
           (ret=4),[m
[m
       •   you try to unset an option which does[m
           not exist (ret=5),[m
[m
       •   you try to unset/set an option for[m
           which multiple lines match (ret=5), or[m
[m
       •   you try to use an invalid regexp[m
           (ret=6).[m
[m
       On success, the command returns the exit[m
       code 0.[m
[m
       A list of all available configuration[m
       variables can be obtained using the [1mgit[0m[m
       [1mhelp[0m [1m--config[0m command.[m
[m
[1mOPTIONS[0m[m
       --replace-all[m
           Default behavior is to replace at most[m
           one line. This replaces all lines[m
           matching the key (and optionally the[m
           [1mvalue-pattern[0m).[m
[m
       --add[m
           Adds a new line to the option without[m
           altering any existing values. This is[m
           the same as providing [4m^$[24m as the[m
           [1mvalue-pattern[0m in [1m--replace-all[0m.[m
[m
[7mconfig(1) line 69 (press h for help or q to quit)[27m[K[K       --get[m
           Get the value for a given key[m
           (optionally filtered by a regex[m
           matching the value). Returns error[m
           code 1 if the key was not found and[m
           the last value if multiple key values[m
           were found.[m
[m
       --get-all[m
           Like get, but returns all values for a[m
           multi-valued key.[m
[m
       --get-regexp[m
           Like --get-all, but interprets the[m
           name as a regular expression and[m
           writes out the key names. Regular[m
           expression matching is currently[m
           case-sensitive and done against a[m
           canonicalized version of the key in[m
           which section and variable names are[m
           lowercased, but subsection names are[m
           not.[m
[m
       --get-urlmatch name URL[m
           When given a two-part name[m
           section.key, the value for[m
           section.<url>.key whose <url> part[m
           matches the best to the given URL is[m
           returned (if no such key exists, the[m
           value for section.key is used as a[m
           fallback). When given just the section[m
           as name, do so for all the keys in the[m
           section and list them. Returns error[m
           code 1 if no value is found.[m
[m
       --global[m
           For writing options: write to global[m
           [1m~/.gitconfig[0m file rather than the[m
           repository [1m.git/config[0m, write to[m
           [1m$XDG_CONFIG_HOME/git/config[0m file if[m
           this file exists and the [1m~/.gitconfig[0m[m
           file doesn’t.[m
[m
           For reading options: read only from[m
[7monfig(1) line 113 (press h for help or q to quit)[27m[K[K           global [1m~/.gitconfig[0m and from[m
           [1m$XDG_CONFIG_HOME/git/config[0m rather[m
           than from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --system[m
           For writing options: write to[m
           system-wide [1m$(prefix)/etc/gitconfig[0m[m
           rather than the repository[m
           [1m.git/config[0m.[m
[m
           For reading options: read only from[m
           system-wide [1m$(prefix)/etc/gitconfig[0m[m
           rather than from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --local[m
           For writing options: write to the[m
           repository [1m.git/config[0m file. This is[m
           the default behavior.[m
[m
           For reading options: read only from[m
           the repository [1m.git/config[0m rather than[m
           from all available files.[m
[m
           See also the section called “FILES”.[m
[m
       --worktree[m
           Similar to [1m--local[0m except that[m
           [1m.git/config.worktree[0m is read from or[m
           written to if[m
           [1mextensions.worktreeConfig[0m is present.[m
           If not it’s the same as [1m--local[0m.[m
[m
       -f config-file, --file config-file[m
           For writing options: write to the[m
           specified file rather than the[m
           repository [1m.git/config[0m.[m
[m
           For reading options: read only from[m
           the specified file rather than from[m
           all available files.[m
[7monfig(1) line 157 (press h for help or q to quit)[27m[K[K[m
           See also the section called “FILES”.[m
[m
       --blob blob[m
           Similar to [1m--file[0m but use the given[m
           blob instead of a file. E.g. you can[m
           use [4mmaster:.gitmodules[24m to read values[m
           from the file [4m.gitmodules[24m in the[m
           master branch. See "SPECIFYING[m
           REVISIONS" section in [1mgitrevisions[0m(7)[m
           for a more complete list of ways to[m
           spell blob names.[m
[m
       --remove-section[m
           Remove the given section from the[m
           configuration file.[m
[m
       --rename-section[m
           Rename the given section to a new[m
           name.[m
[m
       --unset[m
           Remove the line matching the key from[m
           config file.[m
[m
       --unset-all[m
           Remove all lines matching the key from[m
           config file.[m
[m
       -l, --list[m
           List all variables set in config file,[m
           along with their values.[m
[m
       --fixed-value[m
           When used with the [1mvalue-pattern[0m[m
           argument, treat [1mvalue-pattern[0m as an[m
           exact string instead of a regular[m
           expression. This will restrict the[m
           name/value pairs that are matched to[m
           only those where the value is exactly[m
           equal to the [1mvalue-pattern[0m.[m
[m
       --type <type>[m
           [4mgit[24m [4mconfig[24m will ensure that any input[m
[7monfig(1) line 201 (press h for help or q to quit)[27m[K[K           or output is valid under the given[m
           type constraint(s), and will[m
           canonicalize outgoing values in[m
           [1m<type>[0m's canonical form.[m
[m
           Valid [1m<type>[0m's include:[m
[m
           •   [4mbool[24m: canonicalize values as[m
               either "true" or "false".[m
[m
           •   [4mint[24m: canonicalize values as simple[m
               decimal numbers. An optional[m
               suffix of [4mk[24m, [4mm[24m, or [4mg[24m will cause[m
               the value to be multiplied by[m
               1024, 1048576, or 1073741824 upon[m
               input.[m
[m
           •   [4mbool-or-int[24m: canonicalize[m
               according to either [4mbool[24m or [4mint[24m,[m
               as described above.[m
[m
           •   [4mpath[24m: canonicalize by adding a[m
               leading [1m~[0m to the value of [1m$HOME[0m[m
               and [1m~user[0m to the home directory[m
               for the specified user. This[m
               specifier has no effect when[m
               setting the value (but you can use[m
               [1mgit[0m [1mconfig[0m [1msection.variable[0m [1m~/[0m[m
               from the command line to let your[m
               shell do the expansion.)[m
[m
           •   [4mexpiry-date[24m: canonicalize by[m
               converting from a fixed or[m
               relative date-string to a[m
               timestamp. This specifier has no[m
               effect when setting the value.[m
[m
           •   [4mcolor[24m: When getting a value,[m
               canonicalize by converting to an[m
               ANSI color escape sequence. When[m
               setting a value, a sanity-check is[m
               performed to ensure that the given[m
               value is canonicalize-able as an[m
               ANSI color, but it is written[m
[7monfig(1) line 245 (press h for help or q to quit)[27m[K[K               as-is.[m
[m
       --bool, --int, --bool-or-int, --path,[m
       --expiry-date[m
           Historical options for selecting a[m
           type specifier. Prefer instead [1m--type[0m[m
           (see above).[m
[m
       --no-type[m
           Un-sets the previously set type[m
           specifier (if one was previously set).[m
           This option requests that [4mgit[24m [4mconfig[24m[m
           not canonicalize the retrieved[m
           variable.  [1m--no-type[0m has no effect[m
           without [1m--type=<type>[0m or [1m--<type>[0m.[m
[m
       -z, --null[m
           For all options that output values[m
           and/or keys, always end values with[m
           the null character (instead of a[m
           newline). Use newline instead as a[m
           delimiter between key and value. This[m
           allows for secure parsing of the[m
           output without getting confused e.g.[m
           by values that contain line breaks.[m
[m
       --name-only[m
           Output only the names of config[m
           variables for [1m--list[0m or [1m--get-regexp[0m.[m
[m
       --show-origin[m
           Augment the output of all queried[m
           config options with the origin type[m
           (file, standard input, blob, command[m
           line) and the actual origin (config[m
           file path, ref, or blob id if[m
           applicable).[m
[m
       --show-scope[m
           Similar to [1m--show-origin[0m in that it[m
           augments the output of all queried[m
           config options with the scope of that[m
           value (local, global, system,[m
           command).[m
[7monfig(1) line 289 (press h for help or q to quit)[27m[K[K[m
       --get-colorbool name [stdout-is-tty][m
           Find the color setting for [1mname[0m (e.g.[m
           [1mcolor.diff[0m) and output "true" or[m
           "false".  [1mstdout-is-tty[0m should be[m
           either "true" or "false", and is taken[m
           into account when configuration says[m
           "auto". If [1mstdout-is-tty[0m is missing,[m
           then checks the standard output of the[m
           command itself, and exits with status[m
           0 if color is to be used, or exits[m
           with status 1 otherwise. When the[m
           color setting for [1mname[0m is undefined,[m
           the command uses [1mcolor.ui[0m as fallback.[m
[m
       --get-color name [default][m
           Find the color configured for [1mname[0m[m
           (e.g.  [1mcolor.diff.new[0m) and output it[m
           as the ANSI color escape sequence to[m
           the standard output. The optional[m
           [1mdefault[0m parameter is used instead, if[m
           there is no color configured for [1mname[0m.[m
[m
           [1m--type=color[0m [1m[--default=<default>][0m is[m
           preferred over [1m--get-color[0m (but note[m
           that [1m--get-color[0m will omit the[m
           trailing newline printed by[m
           [1m--type=color[0m).[m
[m
       -e, --edit[m
           Opens an editor to modify the[m
           specified config file; either[m
           [1m--system[0m, [1m--global[0m, or repository[m
           (default).[m
[m
       --[no-]includes[m
           Respect [1minclude.*[0m  directives in[m
           config files when looking up values.[m
           Defaults to [1moff[0m when a specific file[m
           is given (e.g., using [1m--file[0m,[m
           [1m--global[0m, etc) and [1mon[0m when searching[m
           all config files.[m
[m
       --default <value>[m
[7monfig(1) line 333 (press h for help or q to quit)[27m[K[K           When using [1m--get[0m, and the requested[m
           variable is not found, behave as if[m
           <value> were the value assigned to the[m
           that variable.[m
[m
[1mCONFIGURATION[0m[m
       [1mpager.config[0m is only respected when[m
       listing configuration, i.e., when using[m
       [1m--list[0m or any of the [1m--get-*[0m which may[m
       return multiple results. The default is to[m
       use a pager.[m
[m
[1mFILES[0m[m
       If not set explicitly with [1m--file[0m, there[m
       are four files where [4mgit[24m [4mconfig[24m will[m
       search for configuration options:[m
[m
       $(prefix)/etc/gitconfig[m
           System-wide configuration file.[m
[m
       $XDG_CONFIG_HOME/git/config[m
           Second user-specific configuration[m
           file. If $XDG_CONFIG_HOME is not set[m
           or empty, [1m$HOME/.config/git/config[0m[m
           will be used. Any single-valued[m
           variable set in this file will be[m
           overwritten by whatever is in[m
           [1m~/.gitconfig[0m. It is a good idea not to[m
           create this file if you sometimes use[m
           older versions of Git, as support for[m
           this file was added fairly recently.[m
[m
       ~/.gitconfig[m
           User-specific configuration file. Also[m
           called "global" configuration file.[m
[m
       $GIT_DIR/config[m
           Repository specific configuration[m
           file.[m
[m
       $GIT_DIR/config.worktree[m
           This is optional and is only searched[m
           when [1mextensions.worktreeConfig[0m is[m
           present in $GIT_DIR/config.[m
[7monfig(1) line 377 (press h for help or q to quit)[27m[K[K[m
       If no further options are given, all[m
       reading options will read all of these[m
       files that are available. If the global or[m
       the system-wide configuration file are not[m
       available they will be ignored. If the[m
       repository configuration file is not[m
       available or readable, [4mgit[24m [4mconfig[24m will[m
       exit with a non-zero error code. However,[m
       in neither case will an error message be[m
       issued.[m
[m
       The files are read in the order given[m
       above, with last value found taking[m
       precedence over values read earlier. When[m
       multiple values are taken then all values[m
       of a key from all files will be used.[m
[m
       You may override individual configuration[m
       parameters when running any git command by[m
       using the [1m-c[0m option. See [1mgit[0m(1) for[m
       details.[m
[m
       All writing options will per default write[m
       to the repository specific configuration[m
       file. Note that this also affects options[m
       like [1m--replace-all[0m and [1m--unset[0m. [4mgit[24m [4mconfig[24m[m
       [1mwill[0m [1monly[0m [1mever[0m [1mchange[0m [1mone[0m [1mfile[0m [1mat[0m [1ma[0m [1mtime[0m.[m
[m
       You can override these rules using the[m
       [1m--global[0m, [1m--system[0m, [1m--local[0m, [1m--worktree[0m,[m
       and [1m--file[0m command-line options; see the[m
       section called “OPTIONS” above.[m
[m
[1mENVIRONMENT[0m[m
       GIT_CONFIG_GLOBAL, GIT_CONFIG_SYSTEM[m
           Take the configuration from the given[m
           files instead from global or[m
           system-level configuration. See [1mgit[0m(1)[m
           for details.[m
[m
       GIT_CONFIG_NOSYSTEM[m
           Whether to skip reading settings from[m
           the system-wide[m
[7monfig(1) line 421 (press h for help or q to quit)[27m[K[K           $(prefix)/etc/gitconfig file. See[m
           [1mgit[0m(1) for details.[m
[m
       See also the section called “FILES”.[m
[m
       GIT_CONFIG_COUNT, GIT_CONFIG_KEY_<n>,[m
       GIT_CONFIG_VALUE_<n>[m
           If GIT_CONFIG_COUNT is set to a[m
           positive number, all environment pairs[m
           GIT_CONFIG_KEY_<n> and[m
           GIT_CONFIG_VALUE_<n> up to that number[m
           will be added to the process’s runtime[m
           configuration. The config pairs are[m
           zero-indexed. Any missing key or value[m
           is treated as an error. An empty[m
           GIT_CONFIG_COUNT is treated the same[m
           as GIT_CONFIG_COUNT=0, namely no pairs[m
           are processed. These environment[m
           variables will override values in[m
           configuration files, but will be[m
           overridden by any explicit options[m
           passed via [1mgit[0m [1m-c[0m.[m
[m
           This is useful for cases where you[m
           want to spawn multiple git commands[m
           with a common configuration but cannot[m
           depend on a configuration file, for[m
           example when writing scripts.[m
[m
       GIT_CONFIG[m
           If no [1m--file[0m option is provided to [1mgit[0m[m
           [1mconfig[0m, use the file given by[m
           [1mGIT_CONFIG[0m as if it were provided via[m
           [1m--file[0m. This variable has no effect on[m
           other Git commands, and is mostly for[m
           historical compatibility; there is[m
           generally no reason to use it instead[m
           of the [1m--file[0m option.[m
[m
[1mEXAMPLES[0m[m
       Given a .git/config like this:[m
[m
           #[m
           # This is the config file, and[m
[7monfig(1) line 465 (press h for help or q to quit)[27m[K[K           # a '#' or ';' character indicates[m
           # a comment[m
           #[m
[m
           ; core variables[m
           [core][m
                   ; Don't trust file modes[m
                   filemode = false[m
[m
           ; Our diff algorithm[m
           [diff][m
                   external = /usr/local/bin/diff-w[m rapper[m
                   renames = true[m
[m
           ; Proxy settings[m
           [core][m
                   gitproxy=proxy-command for kerne[m l.org[m
                   gitproxy=default-proxy ; for all[m  the rest[m
[m
           ; HTTP[m
           [http][m
                   sslVerify[m
           [http "https://weak.example.com"][m
                   sslVerify = false[m
                   cookieFile = /tmp/cookie.txt[m
[m
       you can set the filemode to true with[m
[m
           % git config core.filemode true[m
[m
       The hypothetical proxy command entries[m
       actually have a postfix to discern what[m
       URL they apply to. Here is how to change[m
       the entry for kernel.org to "ssh".[m
[m
           % git config core.gitproxy '"ssh" for ke[m rnel.org' 'for kernel.org$'[m
[m
       This makes sure that only the key/value[m
       pair for kernel.org is replaced.[m
[m
[7monfig(1) line 509 (press h for help or q to quit)[27m[K[K       To delete the entry for renames, do[m
[m
           % git config --unset diff.renames[m
[m
       If you want to delete an entry for a[m
       multivar (like core.gitproxy above), you[m
       have to provide a regex matching the value[m
       of exactly one line.[m
[m
       To query the value for a given key, do[m
[m
           % git config --get core.filemode[m
[m
       or[m
[m
           % git config core.filemode[m
[m
       or, to query a multivar:[m
[m
           % git config --get core.gitproxy "for ke[m rnel.org$"[m
[m
       If you want to know all the values for a[m
       multivar, do:[m
[m
           % git config --get-all core.gitproxy[m
[m
       If you like to live dangerously, you can[m
       replace [1mall[0m core.gitproxy by a new one[m
       with[m
[m
           % git config --replace-all core.gitproxy[m  ssh[m
[m
       However, if you really only want to[m
       replace the line for the default proxy,[m
       i.e. the one without a "for ..." postfix,[m
       do something like this:[m
[m
           % git config core.gitproxy ssh '! for '[m
[m
       To actually match only values with an[m
       exclamation mark, you have to[m
[m
[7monfig(1) line 549 (press h for help or q to quit)[27m[K[K           % git config section.key value '[!]'[m
[m
       To add a new proxy, without altering any[m
       of the existing ones, use[m
[m
           % git config --add core.gitproxy '"proxy[m -command" for example.com'[m
[m
       An example to use customized color from[m
       the configuration in your script:[m
[m
           #!/bin/sh[m
           WS=$(git config --get-color color.diff.w[m hitespace "blue reverse")[m
           RESET=$(git config --get-color "" "reset[m ")[m
           echo "${WS}your whitespace color or blue[m  reverse${RESET}"[m
[m
       For URLs in [1mhttps://weak.example.com[0m,[m
       [1mhttp.sslVerify[0m is set to false, while it[m
       is set to [1mtrue[0m for all others:[m
[m
           % git config --type=bool --get-urlmatch [m http.sslverify https://good.example.com[m
           true[m
           % git config --type=bool --get-urlmatch [m http.sslverify https://weak.example.com[m
           false[m
           % git config --get-urlmatch http https:/[m /weak.example.com[m
           http.cookieFile /tmp/cookie.txt[m
           http.sslverify false[m
[m
[1mCONFIGURATION[0m [1mFILE[0m[m
       The Git configuration file contains a[m
       number of variables that affect the Git[m
       commands' behavior. The files [1m.git/config[0m[m
       and optionally [1mconfig.worktree[0m (see the[m
       "CONFIGURATION FILE" section of [1mgit-[0m[m
       [1mworktree[0m(1)) in each repository are used[m
       to store the configuration for that[m
       repository, and [1m$HOME/.gitconfig[0m is used[m
       to store a per-user configuration as[m
[7monfig(1) line 591 (press h for help or q to quit)[27m[K[K       fallback values for the [1m.git/config[0m file.[m
       The file [1m/etc/gitconfig[0m can be used to[m
       store a system-wide default configuration.[m
[m
       The configuration variables are used by[m
       both the Git plumbing and the porcelains.[m
       The variables are divided into sections,[m
       wherein the fully qualified variable name[m
       of the variable itself is the last[m
       dot-separated segment and the section name[m
       is everything before the last dot. The[m
       variable names are case-insensitive, allow[m
       only alphanumeric characters and [1m-[0m, and[m
       must start with an alphabetic character.[m
       Some variables may appear multiple times;[m
       we say then that the variable is[m
       multivalued.[m
[m
   [1mSyntax[0m[m
       The syntax is fairly flexible and[m
       permissive; whitespaces are mostly[m
       ignored. The [4m#[24m and [4m;[24m characters begin[m
       comments to the end of line, blank lines[m
       are ignored.[m
[m
       The file consists of sections and[m
       variables. A section begins with the name[m
       of the section in square brackets and[m
       continues until the next section begins.[m
       Section names are case-insensitive. Only[m
       alphanumeric characters, [1m-[0m and [1m.[0m are[m
       allowed in section names. Each variable[m
       must belong to some section, which means[m
       that there must be a section header before[m
       the first setting of a variable.[m
[m
       Sections can be further divided into[m
       subsections. To begin a subsection put its[m
       name in double quotes, separated by space[m
       from the section name, in the section[m
       header, like in the example below:[m
[m
                   [section "subsection"][m
[m
[7monfig(1) line 628 (press h for help or q to quit)[27m[K[K       Subsection names are case sensitive and[m
       can contain any characters except newline[m
       and the null byte. Doublequote [1m"[0m and[m
       backslash can be included by escaping them[m
       as [1m\"[0m and [1m\\[0m, respectively. Backslashes[m
       preceding other characters are dropped[m
       when reading; for example, [1m\t[0m is read as [1mt[0m[m
       and [1m\0[0m is read as [1m0[0m. Section headers[m
       cannot span multiple lines. Variables may[m
       belong directly to a section or to a given[m
       subsection. You can have [1m[section][0m if you[m
       have [1m[section[0m [1m"subsection"][0m, but you don’t[m
       need to.[m
[m
       There is also a deprecated[m
       [1m[section.subsection][0m syntax. With this[m
       syntax, the subsection name is converted[m
       to lower-case and is also compared case[m
       sensitively. These subsection names follow[m
       the same restrictions as section names.[m
[m
       All the other lines (and the remainder of[m
       the line after the section header) are[m
       recognized as setting variables, in the[m
       form [4mname[24m [4m=[24m [4mvalue[24m (or just [4mname[24m, which is[m
       a short-hand to say that the variable is[m
       the boolean "true"). The variable names[m
       are case-insensitive, allow only[m
       alphanumeric characters and [1m-[0m, and must[m
       start with an alphabetic character.[m
[m
       A line that defines a value can be[m
       continued to the next line by ending it[m
       with a [1m\[0m; the backslash and the[m
       end-of-line are stripped. Leading[m
       whitespaces after [4mname[24m [4m=[24m, the remainder of[m
       the line after the first comment character[m
       [4m#[24m or [4m;[24m, and trailing whitespaces of the[m
       line are discarded unless they are[m
       enclosed in double quotes. Internal[m
       whitespaces within the value are retained[m
       verbatim.[m
[m
       Inside double quotes, double quote [1m"[0m and[m
[7monfig(1) line 672 (press h for help or q to quit)[27m[K[K       backslash [1m\[0m characters must be escaped:[m
       use [1m\"[0m for [1m"[0m and [1m\\[0m for [1m\[0m.[m
[m
       The following escape sequences (beside [1m\"[0m[m
       and [1m\\[0m) are recognized: [1m\n[0m for newline[m
       character (NL), [1m\t[0m for horizontal[m
       tabulation (HT, TAB) and [1m\b[0m for backspace[m
       (BS). Other char escape sequences[m
       (including octal escape sequences) are[m
       invalid.[m
[m
   [1mIncludes[0m[m
       The [1minclude[0m and [1mincludeIf[0m sections allow[m
       you to include config directives from[m
       another source. These sections behave[m
       identically to each other with the[m
       exception that [1mincludeIf[0m sections may be[m
       ignored if their condition does not[m
       evaluate to true; see "Conditional[m
       includes" below.[m
[m
       You can include a config file from another[m
       by setting the special [1minclude.path[0m (or[m
       [1mincludeIf.*.path[0m) variable to the name of[m
       the file to be included. The variable[m
       takes a pathname as its value, and is[m
       subject to tilde expansion. These[m
       variables can be given multiple times.[m
[m
       The contents of the included file are[m
       inserted immediately, as if they had been[m
       found at the location of the include[m
       directive. If the value of the variable is[m
       a relative path, the path is considered to[m
       be relative to the configuration file in[m
       which the include directive was found. See[m
       below for examples.[m
[m
   [1mConditional[0m [1mincludes[0m[m
       You can include a config file from another[m
       conditionally by setting a[m
       [1mincludeIf.<condition>.path[0m variable to the[m
       name of the file to be included.[m
[m
[7monfig(1) line 716 (press h for help or q to quit)[27m[K[K       The condition starts with a keyword[m
       followed by a colon and some data whose[m
       format and meaning depends on the keyword.[m
       Supported keywords are:[m
[m
       [1mgitdir[0m[m
           The data that follows the keyword[m
           [1mgitdir:[0m is used as a glob pattern. If[m
           the location of the .git directory[m
           matches the pattern, the include[m
           condition is met.[m
[m
           The .git location may be[m
           auto-discovered, or come from [1m$GIT_DIR[0m[m
           environment variable. If the[m
           repository is auto discovered via a[m
           .git file (e.g. from submodules, or a[m
           linked worktree), the .git location[m
           would be the final location where the[m
           .git directory is, not where the .git[m
           file is.[m
[m
           The pattern can contain standard[m
           globbing wildcards and two additional[m
           ones, [1m**/[0m and [1m/**[0m, that can match[m
           multiple path components. Please refer[m
           to [1mgitignore[0m(5) for details. For[m
           convenience:[m
[m
           •   If the pattern starts with [1m~/[0m, [1m~[0m[m
               will be substituted with the[m
               content of the environment[m
               variable [1mHOME[0m.[m
[m
           •   If the pattern starts with [1m./[0m, it[m
               is replaced with the directory[m
               containing the current config[m
               file.[m
[m
           •   If the pattern does not start with[m
               either [1m~/[0m, [1m./[0m or [1m/[0m, [1m**/[0m will be[m
               automatically prepended. For[m
               example, the pattern [1mfoo/bar[0m[m
               becomes [1m**/foo/bar[0m and would match[m
[7monfig(1) line 760 (press h for help or q to quit)[27m[K[K               [1m/any/path/to/foo/bar[0m.[m
[m
           •   If the pattern ends with [1m/[0m, [1m**[0m[m
               will be automatically added. For[m
               example, the pattern [1mfoo/[0m becomes[m
               [1mfoo/**[0m. In other words, it matches[m
               "foo" and everything inside,[m
               recursively.[m
[m
       [1mgitdir/i[0m[m
           This is the same as [1mgitdir[0m except that[m
           matching is done case-insensitively[m
           (e.g. on case-insensitive file[m
           systems)[m
[m
       [1monbranch[0m[m
           The data that follows the keyword[m
           [1monbranch:[0m is taken to be a pattern[m
           with standard globbing wildcards and[m
           two additional ones, [1m**/[0m and [1m/**[0m, that[m
           can match multiple path components. If[m
           we are in a worktree where the name of[m
           the branch that is currently checked[m
           out matches the pattern, the include[m
           condition is met.[m
[m
           If the pattern ends with [1m/[0m, [1m**[0m will be[m
           automatically added. For example, the[m
           pattern [1mfoo/[0m becomes [1mfoo/**[0m. In other[m
           words, it matches all branches that[m
           begin with [1mfoo/[0m. This is useful if[m
           your branches are organized[m
           hierarchically and you would like to[m
           apply a configuration to all the[m
           branches in that hierarchy.[m
[m
       A few more notes on matching via [1mgitdir[0m[m
       and [1mgitdir/i[0m:[m
[m
       •   Symlinks in [1m$GIT_DIR[0m are not resolved[m
           before matching.[m
[m
       •   Both the symlink & realpath versions[m
           of paths will be matched outside of[m
[7monfig(1) line 804 (press h for help or q to quit)[27m[K[K           [1m$GIT_DIR[0m. E.g. if ~/git is a symlink[m
           to /mnt/storage/git, both [1mgitdir:~/git[0m[m
           and [1mgitdir:/mnt/storage/git[0m will[m
           match.[m
[m
           This was not the case in the initial[m
           release of this feature in v2.13.0,[m
           which only matched the realpath[m
           version. Configuration that wants to[m
           be compatible with the initial release[m
           of this feature needs to either[m
           specify only the realpath version, or[m
           both versions.[m
[m
       •   Note that "../" is not special and[m
           will match literally, which is[m
           unlikely what you want.[m
[m
   [1mExample[0m[m
           # Core variables[m
           [core][m
                   ; Don't trust file modes[m
                   filemode = false[m
[m
           # Our diff algorithm[m
           [diff][m
                   external = /usr/local/bin/diff-w[m rapper[m
                   renames = true[m
[m
           [branch "devel"][m
                   remote = origin[m
                   merge = refs/heads/devel[m
[m
           # Proxy settings[m
           [core][m
                   gitProxy="ssh" for "kernel.org"[m
                   gitProxy=default-proxy ; for the[m  rest[m
[m
           [include][m
                   path = /path/to/foo.inc ; includ[m e by absolute path[m
                   path = foo.inc ; find "foo.inc" [m [7monfig(1) line 848 (press h for help or q to quit)[27m[K[Krelative to the current file[m
                   path = ~/foo.inc ; find "foo.inc[m " in your `$HOME` directory[m
[m
           ; include if $GIT_DIR is /path/to/foo/.g[m it[m
           [includeIf "gitdir:/path/to/foo/.git"][m
                   path = /path/to/foo.inc[m
[m
           ; include for all repositories inside /p[m ath/to/group[m
           [includeIf "gitdir:/path/to/group/"][m
                   path = /path/to/foo.inc[m
[m
           ; include for all repositories inside $H[m OME/to/group[m
           [includeIf "gitdir:~/to/group/"][m
                   path = /path/to/foo.inc[m
[m
           ; relative paths are always relative to [m the including[m
           ; file (if the condition is true); their[m  location is not[m
           ; affected by the condition[m
           [includeIf "gitdir:/path/to/group/"][m
                   path = foo.inc[m
[m
           ; include only if we are in a worktree w[m here foo-branch is[m
           ; currently checked out[m
           [includeIf "onbranch:foo-branch"][m
                   path = foo.inc[m
[m
   [1mValues[0m[m
       Values of many variables are treated as a[m
       simple string, but there are variables[m
       that take values of specific types and[m
       there are rules as to how to spell them.[m
[m
       boolean[m
           When a variable is said to take a[m
           boolean value, many synonyms are[m
           accepted for [4mtrue[24m and [4mfalse[24m; these are[m
           all case-insensitive.[m
[7monfig(1) line 888 (press h for help or q to quit)[27m[K[K[m
           true[m
               Boolean true literals are [1myes[0m, [1mon[0m,[m
               [1mtrue[0m, and [1m1[0m. Also, a variable[m
               defined without [1m=[0m [1m<value>[0m is taken[m
               as true.[m
[m
           false[m
               Boolean false literals are [1mno[0m,[m
               [1moff[0m, [1mfalse[0m, [1m0[0m and the empty[m
               string.[m
[m
               When converting a value to its[m
               canonical form using the[m
               [1m--type=bool[0m type specifier, [4mgit[24m[m
               [4mconfig[24m will ensure that the output[m
               is "true" or "false" (spelled in[m
               lowercase).[m
[m
       integer[m
           The value for many variables that[m
           specify various sizes can be suffixed[m
           with [1mk[0m, [1mM[0m,... to mean "scale the[m
           number by 1024", "by 1024x1024", etc.[m
[m
       color[m
           The value for a variable that takes a[m
           color is a list of colors (at most[m
           two, one for foreground and one for[m
           background) and attributes (as many as[m
           you want), separated by spaces.[m
[m
           The basic colors accepted are [1mnormal[0m,[m
           [1mblack[0m, [1mred[0m, [1mgreen[0m, [1myellow[0m, [1mblue[0m,[m
           [1mmagenta[0m, [1mcyan[0m and [1mwhite[0m. The first[m
           color given is the foreground; the[m
           second is the background. All the[m
           basic colors except [1mnormal[0m have a[m
           bright variant that can be specified[m
           by prefixing the color with [1mbright[0m,[m
           like [1mbrightred[0m.[m
[m
           Colors may also be given as numbers[m
           between 0 and 255; these use ANSI[m
[7monfig(1) line 925 (press h for help or q to quit)[27m[K[K           256-color mode (but note that not all[m
           terminals may support this). If your[m
           terminal supports it, you may also[m
           specify 24-bit RGB values as hex, like[m
           [1m#ff0ab3[0m.[m
[m
           The accepted attributes are [1mbold[0m, [1mdim[0m,[m
           [1mul[0m, [1mblink[0m, [1mreverse[0m, [1mitalic[0m, and [1mstrike[0m[m
           (for crossed-out or "strikethrough"[m
           letters). The position of any[m
           attributes with respect to the colors[m
           (before, after, or in between),[m
           doesn’t matter. Specific attributes[m
           may be turned off by prefixing them[m
           with [1mno[0m or [1mno-[0m (e.g., [1mnoreverse[0m,[m
           [1mno-ul[0m, etc).[m
[m
           An empty color string produces no[m
           color effect at all. This can be used[m
           to avoid coloring specific elements[m
           without disabling color entirely.[m
[m
           For git’s pre-defined color slots, the[m
           attributes are meant to be reset at[m
           the beginning of each item in the[m
           colored output. So setting[m
           [1mcolor.decorate.branch[0m to [1mblack[0m will[m
           paint that branch name in a plain[m
           [1mblack[0m, even if the previous thing on[m
           the same output line (e.g. opening[m
           parenthesis before the list of branch[m
           names in [1mlog[0m [1m--decorate[0m output) is set[m
           to be painted with [1mbold[0m or some other[m
           attribute. However, custom log formats[m
           may do more complicated and layered[m
           coloring, and the negated forms may be[m
           useful there.[m
[m
       pathname[m
           A variable that takes a pathname value[m
           can be given a string that begins with[m
           "[1m~/[0m" or "[1m~user/[0m", and the usual tilde[m
           expansion happens to such a string: [1m~/[0m[m
           is expanded to the value of [1m$HOME[0m, and[m
[7monfig(1) line 969 (press h for help or q to quit)[27m[K[K           [1m~user/[0m to the specified user’s home[m
           directory.[m
[m
           If a path starts with [1m%(prefix)/[0m, the[m
           remainder is interpreted as a path[m
           relative to Git’s "runtime prefix",[m
           i.e. relative to the location where[m
           Git itself was installed. For example,[m
           [1m%(prefix)/bin/[0m refers to the directory[m
           in which the Git executable itself[m
           lives. If Git was compiled without[m
           runtime prefix support, the[m
           compiled-in prefix will be substituted[m
           instead. In the unlikely event that a[m
           literal path needs to be specified[m
           that should [4mnot[24m be expanded, it needs[m
           to be prefixed by [1m./[0m, like so:[m
           [1m./%(prefix)/bin[0m.[m
[m
   [1mVariables[0m[m
       Note that this list is non-comprehensive[m
       and not necessarily complete. For[m
       command-specific variables, you will find[m
       a more detailed description in the[m
       appropriate manual page.[m
[m
       Other git-related tools may and do use[m
       their own variables. When inventing new[m
       variables for use in your own tool, make[m
       sure their names do not conflict with[m
       those that are used by Git itself and[m
       other popular tools, and describe them in[m
       your documentation.[m
[m
       advice.*[m
           These variables control various[m
           optional help messages designed to aid[m
           new users. All [4madvice.*[24m  variables[m
           default to [4mtrue[24m, and you can tell Git[m
           that you do not need help by setting[m
           these to [4mfalse[24m:[m
[m
           fetchShowForcedUpdates[m
               Advice shown when [1mgit-fetch[0m(1)[m
[7mnfig(1) line 1013 (press h for help or q to quit)[27m[K[K               takes a long time to calculate[m
               forced updates after ref updates,[m
               or to warn that the check is[m
               disabled.[m
[m
           pushUpdateRejected[m
               Set this variable to [4mfalse[24m if you[m
               want to disable [4mpushNonFFCurrent[24m,[m
               [4mpushNonFFMatching[24m,[m
               [4mpushAlreadyExists[24m, [4mpushFetchFirst[24m,[m
               [4mpushNeedsForce[24m, and[m
               [4mpushRefNeedsUpdate[24m simultaneously.[m
[m
           pushNonFFCurrent[m
               Advice shown when [1mgit-push[0m(1)[m
               fails due to a non-fast-forward[m
               update to the current branch.[m
[m
           pushNonFFMatching[m
               Advice shown when you ran [1mgit-[0m[m
               [1mpush[0m(1) and pushed [4mmatching[24m [4mrefs[24m[m
               explicitly (i.e. you used [4m:[24m, or[m
               specified a refspec that isn’t[m
               your current branch) and it[m
               resulted in a non-fast-forward[m
               error.[m
[m
           pushAlreadyExists[m
               Shown when [1mgit-push[0m(1) rejects an[m
               update that does not qualify for[m
               fast-forwarding (e.g., a tag.)[m
[m
           pushFetchFirst[m
               Shown when [1mgit-push[0m(1) rejects an[m
               update that tries to overwrite a[m
               remote ref that points at an[m
               object we do not have.[m
[m
           pushNeedsForce[m
               Shown when [1mgit-push[0m(1) rejects an[m
               update that tries to overwrite a[m
               remote ref that points at an[m
               object that is not a commit-ish,[m
               or make the remote ref point at an[m
[7mnfig(1) line 1057 (press h for help or q to quit)[27m[K[K               object that is not a commit-ish.[m
[m
           pushUnqualifiedRefname[m
               Shown when [1mgit-push[0m(1) gives up[m
               trying to guess based on the[m
               source and destination refs what[m
               remote ref namespace the source[m
               belongs in, but where we can still[m
               suggest that the user push to[m
               either refs/heads/* or refs/tags/*[m
               based on the type of the source[m
               object.[m
[m
           pushRefNeedsUpdate[m
               Shown when [1mgit-push[0m(1) rejects a[m
               forced update of a branch when its[m
               remote-tracking ref has updates[m
               that we do not have locally.[m
[m
           skippedCherryPicks[m
               Shown when [1mgit-rebase[0m(1) skips a[m
               commit that has already been[m
               cherry-picked onto the upstream[m
               branch.[m
[m
           statusAheadBehind[m
               Shown when [1mgit-status[0m(1) computes[m
               the ahead/behind counts for a[m
               local ref compared to its remote[m
               tracking ref, and that calculation[m
               takes longer than expected. Will[m
               not appear if [1mstatus.aheadBehind[0m[m
               is false or the option[m
               [1m--no-ahead-behind[0m is given.[m
[m
           statusHints[m
               Show directions on how to proceed[m
               from the current state in the[m
               output of [1mgit-status[0m(1), in the[m
               template shown when writing commit[m
               messages in [1mgit-commit[0m(1), and in[m
               the help message shown by [1mgit-[0m[m
               [1mswitch[0m(1) or [1mgit-checkout[0m(1) when[m
               switching branch.[m
[7mnfig(1) line 1101 (press h for help or q to quit)[27m[K[K[m
           statusUoption[m
               Advise to consider using the [1m-u[0m[m
               option to [1mgit-status[0m(1) when the[m
               command takes more than 2 seconds[m
               to enumerate untracked files.[m
[m
           commitBeforeMerge[m
               Advice shown when [1mgit-merge[0m(1)[m
               refuses to merge to avoid[m
               overwriting local changes.[m
[m
           resetQuiet[m
               Advice to consider using the[m
               [1m--quiet[0m option to [1mgit-reset[0m(1)[m
               when the command takes more than 2[m
               seconds to enumerate unstaged[m
               changes after reset.[m
[m
           resolveConflict[m
               Advice shown by various commands[m
               when conflicts prevent the[m
               operation from being performed.[m
[m
           sequencerInUse[m
               Advice shown when a sequencer[m
               command is already in progress.[m
[m
           implicitIdentity[m
               Advice on how to set your identity[m
               configuration when your[m
               information is guessed from the[m
               system username and domain name.[m
[m
           detachedHead[m
               Advice shown when you used [1mgit-[0m[m
               [1mswitch[0m(1) or [1mgit-checkout[0m(1) to[m
               move to the detach HEAD state, to[m
               instruct how to create a local[m
               branch after the fact.[m
[m
           checkoutAmbiguousRemoteBranchName[m
               Advice shown when the argument to[m
               [1mgit-checkout[0m(1) and [1mgit-switch[0m(1)[m
[7mnfig(1) line 1145 (press h for help or q to quit)[27m[K[K               ambiguously resolves to a remote[m
               tracking branch on more than one[m
               remote in situations where an[m
               unambiguous argument would have[m
               otherwise caused a remote-tracking[m
               branch to be checked out. See the[m
               [1mcheckout.defaultRemote[0m[m
               configuration variable for how to[m
               set a given remote to used by[m
               default in some situations where[m
               this advice would be printed.[m
[m
           amWorkDir[m
               Advice that shows the location of[m
               the patch file when [1mgit-am[0m(1)[m
               fails to apply it.[m
[m
           rmHints[m
               In case of failure in the output[m
               of [1mgit-rm[0m(1), show directions on[m
               how to proceed from the current[m
               state.[m
[m
           addEmbeddedRepo[m
               Advice on what to do when you’ve[m
               accidentally added one git repo[m
               inside of another.[m
[m
           ignoredHook[m
               Advice shown if a hook is ignored[m
               because the hook is not set as[m
               executable.[m
[m
           waitingForEditor[m
               Print a message to the terminal[m
               whenever Git is waiting for editor[m
               input from the user.[m
[m
           nestedTag[m
               Advice shown if a user attempts to[m
               recursively tag a tag object.[m
[m
           submoduleAlternateErrorStrategyDie[m
               Advice shown when a[m
[7mnfig(1) line 1189 (press h for help or q to quit)[27m[K[K               submodule.alternateErrorStrategy[m
               option configured to "die" causes[m
               a fatal error.[m
[m
           addIgnoredFile[m
               Advice shown if a user attempts to[m
               add an ignored file to the index.[m
[m
           addEmptyPathspec[m
               Advice shown if a user runs the[m
               add command without providing the[m
               pathspec parameter.[m
[m
           updateSparsePath[m
               Advice shown when either [1mgit-[0m[m
               [1madd[0m(1) or [1mgit-rm[0m(1) is asked to[m
               update index entries outside the[m
               current sparse checkout.[m
[m
       core.fileMode[m
           Tells Git if the executable bit of[m
           files in the working tree is to be[m
           honored.[m
[m
           Some filesystems lose the executable[m
           bit when a file that is marked as[m
           executable is checked out, or checks[m
           out a non-executable file with[m
           executable bit on.  [1mgit-clone[0m(1) or[m
           [1mgit-init[0m(1) probe the filesystem to[m
           see if it handles the executable bit[m
           correctly and this variable is[m
           automatically set as necessary.[m
[m
           A repository, however, may be on a[m
           filesystem that handles the filemode[m
           correctly, and this variable is set to[m
           [4mtrue[24m when created, but later may be[m
           made accessible from another[m
           environment that loses the filemode[m
           (e.g. exporting ext4 via CIFS mount,[m
           visiting a Cygwin created repository[m
           with Git for Windows or Eclipse). In[m
           such a case it may be necessary to set[m
[7mnfig(1) line 1233 (press h for help or q to quit)[27m[K[K           this variable to [4mfalse[24m. See [1mgit-[0m[m
           [1mupdate-index[0m(1).[m
[m
           The default is true (when[m
           core.filemode is not specified in the[m
           config file).[m
[m
       core.hideDotFiles[m
           (Windows-only) If true, mark[m
           newly-created directories and files[m
           whose name starts with a dot as[m
           hidden. If [4mdotGitOnly[24m, only the [1m.git/[0m[m
           directory is hidden, but no other[m
           files starting with a dot. The default[m
           mode is [4mdotGitOnly[24m.[m
[m
       core.ignoreCase[m
           Internal variable which enables[m
           various workarounds to enable Git to[m
           work better on filesystems that are[m
           not case sensitive, like APFS, HFS+,[m
           FAT, NTFS, etc. For example, if a[m
           directory listing finds "makefile"[m
           when Git expects "Makefile", Git will[m
           assume it is really the same file, and[m
           continue to remember it as "Makefile".[m
[m
           The default is false, except [1mgit-[0m[m
           [1mclone[0m(1) or [1mgit-init[0m(1) will probe and[m
           set core.ignoreCase true if[m
           appropriate when the repository is[m
           created.[m
[m
           Git relies on the proper configuration[m
           of this variable for your operating[m
           and file system. Modifying this value[m
           may result in unexpected behavior.[m
[m
       core.precomposeUnicode[m
           This option is only used by Mac OS[m
           implementation of Git. When[m
           core.precomposeUnicode=true, Git[m
           reverts the unicode decomposition of[m
           filenames done by Mac OS. This is[m
[7mnfig(1) line 1277 (press h for help or q to quit)[27m[K[K           useful when sharing a repository[m
           between Mac OS and Linux or Windows.[m
           (Git for Windows 1.7.10 or higher is[m
           needed, or Git under cygwin 1.7). When[m
           false, file names are handled fully[m
           transparent by Git, which is backward[m
           compatible with older versions of Git.[m
[m
       core.protectHFS[m
           If set to true, do not allow checkout[m
           of paths that would be considered[m
           equivalent to [1m.git[0m on an HFS+[m
           filesystem. Defaults to [1mtrue[0m on Mac[m
           OS, and [1mfalse[0m elsewhere.[m
[m
       core.protectNTFS[m
           If set to true, do not allow checkout[m
           of paths that would cause problems[m
           with the NTFS filesystem, e.g.[m
           conflict with 8.3 "short" names.[m
           Defaults to [1mtrue[0m on Windows, and [1mfalse[0m[m
           elsewhere.[m
[m
       core.fsmonitor[m
           If set, the value of this variable is[m
           used as a command which will identify[m
           all files that may have changed since[m
           the requested date/time. This[m
           information is used to speed up git by[m
           avoiding unnecessary processing of[m
           files that have not changed. See the[m
           "fsmonitor-watchman" section of[m
           [1mgithooks[0m(5).[m
[m
       core.fsmonitorHookVersion[m
           Sets the version of hook that is to be[m
           used when calling fsmonitor. There are[m
           currently versions 1 and 2. When this[m
           is not set, version 2 will be tried[m
           first and if it fails then version 1[m
           will be tried. Version 1 uses a[m
           timestamp as input to determine which[m
           files have changes since that time but[m
           some monitors like watchman have race[m
[7mnfig(1) line 1321 (press h for help or q to quit)[27m[K[K           conditions when used with a timestamp.[m
           Version 2 uses an opaque string so[m
           that the monitor can return something[m
           that can be used to determine what[m
           files have changed without race[m
           conditions.[m
[m
       core.trustctime[m
           If false, the ctime differences[m
           between the index and the working tree[m
           are ignored; useful when the inode[m
           change time is regularly modified by[m
           something outside Git (file system[m
           crawlers and some backup systems). See[m
           [1mgit-update-index[0m(1). True by default.[m
[m
       core.splitIndex[m
           If true, the split-index feature of[m
           the index will be used. See [1mgit-[0m[m
           [1mupdate-index[0m(1). False by default.[m
[m
       core.untrackedCache[m
           Determines what to do about the[m
           untracked cache feature of the index.[m
           It will be kept, if this variable is[m
           unset or set to [1mkeep[0m. It will[m
           automatically be added if set to [1mtrue[0m.[m
           And it will automatically be removed,[m
           if set to [1mfalse[0m. Before setting it to[m
           [1mtrue[0m, you should check that mtime is[m
           working properly on your system. See[m
           [1mgit-update-index[0m(1).  [1mkeep[0m by default,[m
           unless [1mfeature.manyFiles[0m is enabled[m
           which sets this setting to [1mtrue[0m by[m
           default.[m
[m
       core.checkStat[m
           When missing or is set to [1mdefault[0m,[m
           many fields in the stat structure are[m
           checked to detect if a file has been[m
           modified since Git looked at it. When[m
           this configuration variable is set to[m
           [1mminimal[0m, sub-second part of mtime and[m
           ctime, the uid and gid of the owner of[m
[7mnfig(1) line 1365 (press h for help or q to quit)[27m[K[K           the file, the inode number (and the[m
           device number, if Git was compiled to[m
           use it), are excluded from the check[m
           among these fields, leaving only the[m
           whole-second part of mtime (and ctime,[m
           if [1mcore.trustCtime[0m is set) and the[m
           filesize to be checked.[m
[m
           There are implementations of Git that[m
           do not leave usable values in some[m
           fields (e.g. JGit); by excluding these[m
           fields from the comparison, the[m
           [1mminimal[0m mode may help interoperability[m
           when the same repository is used by[m
           these other systems at the same time.[m
[m
       core.quotePath[m
           Commands that output paths (e.g.[m
           [4mls-files[24m, [4mdiff[24m), will quote "unusual"[m
           characters in the pathname by[m
           enclosing the pathname in[m
           double-quotes and escaping those[m
           characters with backslashes in the[m
           same way C escapes control characters[m
           (e.g.  [1m\t[0m for TAB, [1m\n[0m for LF, [1m\\[0m for[m
           backslash) or bytes with values larger[m
           than 0x80 (e.g. octal [1m\302\265[0m for[m
           "micro" in UTF-8). If this variable is[m
           set to false, bytes higher than 0x80[m
           are not considered "unusual" any more.[m
           Double-quotes, backslash and control[m
           characters are always escaped[m
           regardless of the setting of this[m
           variable. A simple space character is[m
           not considered "unusual". Many[m
           commands can output pathnames[m
           completely verbatim using the [1m-z[0m[m
           option. The default value is true.[m
[m
       core.eol[m
           Sets the line ending type to use in[m
           the working directory for files that[m
           are marked as text (either by having[m
           the [1mtext[0m attribute set, or by having[m
[7mnfig(1) line 1409 (press h for help or q to quit)[27m[K[K           [1mtext=auto[0m and Git auto-detecting the[m
           contents as text). Alternatives are[m
           [4mlf[24m, [4mcrlf[24m and [4mnative[24m, which uses the[m
           platform’s native line ending. The[m
           default value is [1mnative[0m. See[m
           [1mgitattributes[0m(5) for more information[m
           on end-of-line conversion. Note that[m
           this value is ignored if [1mcore.autocrlf[0m[m
           is set to [1mtrue[0m or [1minput[0m.[m
[m
       core.safecrlf[m
           If true, makes Git check if converting[m
           [1mCRLF[0m is reversible when end-of-line[m
           conversion is active. Git will verify[m
           if a command modifies a file in the[m
           work tree either directly or[m
           indirectly. For example, committing a[m
           file followed by checking out the same[m
           file should yield the original file in[m
           the work tree. If this is not the case[m
           for the current setting of[m
           [1mcore.autocrlf[0m, Git will reject the[m
           file. The variable can be set to[m
           "warn", in which case Git will only[m
           warn about an irreversible conversion[m
           but continue the operation.[m
[m
           CRLF conversion bears a slight chance[m
           of corrupting data. When it is[m
           enabled, Git will convert CRLF to LF[m
           during commit and LF to CRLF during[m
           checkout. A file that contains a[m
           mixture of LF and CRLF before the[m
           commit cannot be recreated by Git. For[m
           text files this is the right thing to[m
           do: it corrects line endings such that[m
           we have only LF line endings in the[m
           repository. But for binary files that[m
           are accidentally classified as text[m
           the conversion can corrupt data.[m
[m
           If you recognize such corruption early[m
           you can easily fix it by setting the[m
           conversion type explicitly in[m
[7mnfig(1) line 1453 (press h for help or q to quit)[27m[K[K           .gitattributes. Right after committing[m
           you still have the original file in[m
           your work tree and this file is not[m
           yet corrupted. You can explicitly tell[m
           Git that this file is binary and Git[m
           will handle the file appropriately.[m
[m
           Unfortunately, the desired effect of[m
           cleaning up text files with mixed line[m
           endings and the undesired effect of[m
           corrupting binary files cannot be[m
           distinguished. In both cases CRLFs are[m
           removed in an irreversible way. For[m
           text files this is the right thing to[m
           do because CRLFs are line endings,[m
           while for binary files converting[m
           CRLFs corrupts data.[m
[m
           Note, this safety check does not mean[m
           that a checkout will generate a file[m
           identical to the original file for a[m
           different setting of [1mcore.eol[0m and[m
           [1mcore.autocrlf[0m, but only for the[m
           current one. For example, a text file[m
           with [1mLF[0m would be accepted with[m
           [1mcore.eol=lf[0m and could later be checked[m
           out with [1mcore.eol=crlf[0m, in which case[m
           the resulting file would contain [1mCRLF[0m,[m
           although the original file contained[m
           [1mLF[0m. However, in both work trees the[m
           line endings would be consistent, that[m
           is either all [1mLF[0m or all [1mCRLF[0m, but[m
           never mixed. A file with mixed line[m
           endings would be reported by the[m
           [1mcore.safecrlf[0m mechanism.[m
[m
       core.autocrlf[m
           Setting this variable to "true" is the[m
           same as setting the [1mtext[0m attribute to[m
           "auto" on all files and core.eol to[m
           "crlf". Set to true if you want to[m
           have [1mCRLF[0m line endings in your working[m
           directory and the repository has LF[m
           line endings. This variable can be set[m
[7mnfig(1) line 1497 (press h for help or q to quit)[27m[K[K           to [4minput[24m, in which case no output[m
           conversion is performed.[m
[m
       core.checkRoundtripEncoding[m
           A comma and/or whitespace separated[m
           list of encodings that Git performs[m
           UTF-8 round trip checks on if they are[m
           used in an [1mworking-tree-encoding[0m[m
           attribute (see [1mgitattributes[0m(5)). The[m
           default value is [1mSHIFT-JIS[0m.[m
[m
       core.symlinks[m
           If false, symbolic links are checked[m
           out as small plain files that contain[m
           the link text.  [1mgit-update-index[0m(1)[m
           and [1mgit-add[0m(1) will not change the[m
           recorded type to regular file. Useful[m
           on filesystems like FAT that do not[m
           support symbolic links.[m
[m
           The default is true, except [1mgit-[0m[m
           [1mclone[0m(1) or [1mgit-init[0m(1) will probe and[m
           set core.symlinks false if appropriate[m
           when the repository is created.[m
[m
       core.gitProxy[m
           A "proxy command" to execute (as[m
           [4mcommand[24m [4mhost[24m [4mport[24m) instead of[m
           establishing direct connection to the[m
           remote server when using the Git[m
           protocol for fetching. If the variable[m
           value is in the "COMMAND for DOMAIN"[m
           format, the command is applied only on[m
           hostnames ending with the specified[m
           domain string. This variable may be[m
           set multiple times and is matched in[m
           the given order; the first match wins.[m
[m
           Can be overridden by the[m
           [1mGIT_PROXY_COMMAND[0m environment variable[m
           (which always applies universally,[m
           without the special "for" handling).[m
[m
           The special string [1mnone[0m can be used as[m
[7mnfig(1) line 1541 (press h for help or q to quit)[27m[K[K           the proxy command to specify that no[m
           proxy be used for a given domain[m
           pattern. This is useful for excluding[m
           servers inside a firewall from proxy[m
           use, while defaulting to a common[m
           proxy for external domains.[m
[m
       core.sshCommand[m
           If this variable is set, [1mgit[0m [1mfetch[0m and[m
           [1mgit[0m [1mpush[0m will use the specified[m
           command instead of [1mssh[0m when they need[m
           to connect to a remote system. The[m
           command is in the same form as the[m
           [1mGIT_SSH_COMMAND[0m environment variable[m
           and is overridden when the environment[m
           variable is set.[m
[m
       core.ignoreStat[m
           If true, Git will avoid using lstat()[m
           calls to detect if files have changed[m
           by setting the "assume-unchanged" bit[m
           for those tracked files which it has[m
           updated identically in both the index[m
           and working tree.[m
[m
           When files are modified outside of[m
           Git, the user will need to stage the[m
           modified files explicitly (e.g. see[m
           [4mExamples[24m section in [1mgit-update-[0m[m
           [1mindex[0m(1)). Git will not normally[m
           detect changes to those files.[m
[m
           This is useful on systems where[m
           lstat() calls are very slow, such as[m
           CIFS/Microsoft Windows.[m
[m
           False by default.[m
[m
       core.preferSymlinkRefs[m
           Instead of the default "symref" format[m
           for HEAD and other symbolic reference[m
           files, use symbolic links. This is[m
           sometimes needed to work with old[m
           scripts that expect HEAD to be a[m
[7mnfig(1) line 1585 (press h for help or q to quit)[27m[K[K           symbolic link.[m
[m
       core.alternateRefsCommand[m
           When advertising tips of available[m
           history from an alternate, use the[m
           shell to execute the specified command[m
           instead of [1mgit-for-each-ref[0m(1). The[m
           first argument is the absolute path of[m
           the alternate. Output must contain one[m
           hex object id per line (i.e., the same[m
           as produced by [1mgit[0m [1mfor-each-ref[0m[m
           [1m--format='%(objectname)'[0m).[m
[m
           Note that you cannot generally put [1mgit[0m[m
           [1mfor-each-ref[0m directly into the config[m
           value, as it does not take a[m
           repository path as an argument (but[m
           you can wrap the command above in a[m
           shell script).[m
[m
       core.alternateRefsPrefixes[m
           When listing references from an[m
           alternate, list only references that[m
           begin with the given prefix. Prefixes[m
           match as if they were given as[m
           arguments to [1mgit-for-each-ref[0m(1). To[m
           list multiple prefixes, separate them[m
           with whitespace. If[m
           [1mcore.alternateRefsCommand[0m is set,[m
           setting [1mcore.alternateRefsPrefixes[0m has[m
           no effect.[m
[m
       core.bare[m
           If true this repository is assumed to[m
           be [4mbare[24m and has no working directory[m
           associated with it. If this is the[m
           case a number of commands that require[m
           a working directory will be disabled,[m
           such as [1mgit-add[0m(1) or [1mgit-merge[0m(1).[m
[m
           This setting is automatically guessed[m
           by [1mgit-clone[0m(1) or [1mgit-init[0m(1) when[m
           the repository was created. By default[m
           a repository that ends in "/.git" is[m
[7mnfig(1) line 1629 (press h for help or q to quit)[27m[K[K           assumed to be not bare (bare = false),[m
           while all other repositories are[m
           assumed to be bare (bare = true).[m
[m
       core.worktree[m
           Set the path to the root of the[m
           working tree. If [1mGIT_COMMON_DIR[0m[m
           environment variable is set,[m
           core.worktree is ignored and not used[m
           for determining the root of working[m
           tree. This can be overridden by the[m
           [1mGIT_WORK_TREE[0m environment variable and[m
           the [1m--work-tree[0m command-line option.[m
           The value can be an absolute path or[m
           relative to the path to the .git[m
           directory, which is either specified[m
           by --git-dir or GIT_DIR, or[m
           automatically discovered. If --git-dir[m
           or GIT_DIR is specified but none of[m
           --work-tree, GIT_WORK_TREE and[m
           core.worktree is specified, the[m
           current working directory is regarded[m
           as the top level of your working tree.[m
[m
           Note that this variable is honored[m
           even when set in a configuration file[m
           in a ".git" subdirectory of a[m
           directory and its value differs from[m
           the latter directory (e.g.[m
           "/path/to/.git/config" has[m
           core.worktree set to[m
           "/different/path"), which is most[m
           likely a misconfiguration. Running Git[m
           commands in the "/path/to" directory[m
           will still use "/different/path" as[m
           the root of the work tree and can[m
           cause confusion unless you know what[m
           you are doing (e.g. you are creating a[m
           read-only snapshot of the same index[m
           to a location different from the[m
           repository’s usual working tree).[m
[m
       core.logAllRefUpdates[m
           Enable the reflog. Updates to a ref[m
[7mnfig(1) line 1673 (press h for help or q to quit)[27m[K[K           <ref> is logged to the file[m
           "[1m$GIT_DIR/logs/<ref>[0m", by appending[m
           the new and old SHA-1, the date/time[m
           and the reason of the update, but only[m
           when the file exists. If this[m
           configuration variable is set to [1mtrue[0m,[m
           missing "[1m$GIT_DIR/logs/<ref>[0m" file is[m
           automatically created for branch heads[m
           (i.e. under [1mrefs/heads/[0m), remote refs[m
           (i.e. under [1mrefs/remotes/[0m), note refs[m
           (i.e. under [1mrefs/notes/[0m), and the[m
           symbolic ref [1mHEAD[0m. If it is set to[m
           [1malways[0m, then a missing reflog is[m
           automatically created for any ref[m
           under [1mrefs/[0m.[m
[m
           This information can be used to[m
           determine what commit was the tip of a[m
           branch "2 days ago".[m
[m
           This value is true by default in a[m
           repository that has a working[m
           directory associated with it, and[m
           false by default in a bare repository.[m
[m
       core.repositoryFormatVersion[m
           Internal variable identifying the[m
           repository format and layout version.[m
[m
       core.sharedRepository[m
           When [4mgroup[24m (or [4mtrue[24m), the repository[m
           is made shareable between several[m
           users in a group (making sure all the[m
           files and objects are group-writable).[m
           When [4mall[24m (or [4mworld[24m or [4meverybody[24m), the[m
           repository will be readable by all[m
           users, additionally to being[m
           group-shareable. When [4mumask[24m (or[m
           [4mfalse[24m), Git will use permissions[m
           reported by umask(2). When [4m0xxx[24m, where[m
           [4m0xxx[24m is an octal number, files in the[m
           repository will have this mode value.[m
           [4m0xxx[24m will override user’s umask value[m
           (whereas the other options will only[m
[7mnfig(1) line 1717 (press h for help or q to quit)[27m[K[K           override requested parts of the user’s[m
           umask value). Examples: [4m0660[24m will make[m
           the repo read/write-able for the owner[m
           and group, but inaccessible to others[m
           (equivalent to [4mgroup[24m unless umask is[m
           e.g.  [4m0022[24m).  [4m0640[24m is a repository[m
           that is group-readable but not[m
           group-writable. See [1mgit-init[0m(1). False[m
           by default.[m
[m
       core.warnAmbiguousRefs[m
           If true, Git will warn you if the ref[m
           name you passed it is ambiguous and[m
           might match multiple refs in the[m
           repository. True by default.[m
[m
       core.compression[m
           An integer -1..9, indicating a default[m
           compression level. -1 is the zlib[m
           default. 0 means no compression, and[m
           1..9 are various speed/size tradeoffs,[m
           9 being slowest. If set, this provides[m
           a default to other compression[m
           variables, such as[m
           [1mcore.looseCompression[0m and[m
           [1mpack.compression[0m.[m
[m
       core.looseCompression[m
           An integer -1..9, indicating the[m
           compression level for objects that are[m
           not in a pack file. -1 is the zlib[m
           default. 0 means no compression, and[m
           1..9 are various speed/size tradeoffs,[m
           9 being slowest. If not set, defaults[m
           to core.compression. If that is not[m
           set, defaults to 1 (best speed).[m
[m
       core.packedGitWindowSize[m
           Number of bytes of a pack file to map[m
           into memory in a single mapping[m
           operation. Larger window sizes may[m
           allow your system to process a smaller[m
           number of large pack files more[m
           quickly. Smaller window sizes will[m
[7mnfig(1) line 1761 (press h for help or q to quit)[27m[K[K           negatively affect performance due to[m
           increased calls to the operating[m
           system’s memory manager, but may[m
           improve performance when accessing a[m
           large number of large pack files.[m
[m
           Default is 1 MiB if NO_MMAP was set at[m
           compile time, otherwise 32 MiB on 32[m
           bit platforms and 1 GiB on 64 bit[m
           platforms. This should be reasonable[m
           for all users/operating systems. You[m
           probably do not need to adjust this[m
           value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are[m
           supported.[m
[m
       core.packedGitLimit[m
           Maximum number of bytes to map[m
           simultaneously into memory from pack[m
           files. If Git needs to access more[m
           than this many bytes at once to[m
           complete an operation it will unmap[m
           existing regions to reclaim virtual[m
           address space within the process.[m
[m
           Default is 256 MiB on 32 bit platforms[m
           and 32 TiB (effectively unlimited) on[m
           64 bit platforms. This should be[m
           reasonable for all users/operating[m
           systems, except on the largest[m
           projects. You probably do not need to[m
           adjust this value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are[m
           supported.[m
[m
       core.deltaBaseCacheLimit[m
           Maximum number of bytes per thread to[m
           reserve for caching base objects that[m
           may be referenced by multiple[m
           deltified objects. By storing the[m
           entire decompressed base objects in a[m
           cache Git is able to avoid unpacking[m
[7mnfig(1) line 1805 (press h for help or q to quit)[27m[K[K           and decompressing frequently used base[m
           objects multiple times.[m
[m
           Default is 96 MiB on all platforms.[m
           This should be reasonable for all[m
           users/operating systems, except on the[m
           largest projects. You probably do not[m
           need to adjust this value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are[m
           supported.[m
[m
       core.bigFileThreshold[m
           Files larger than this size are stored[m
           deflated, without attempting delta[m
           compression. Storing large files[m
           without delta compression avoids[m
           excessive memory usage, at the slight[m
           expense of increased disk usage.[m
           Additionally files larger than this[m
           size are always treated as binary.[m
[m
           Default is 512 MiB on all platforms.[m
           This should be reasonable for most[m
           projects as source code and other text[m
           files can still be delta compressed,[m
           but larger binary media files won’t[m
           be.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are[m
           supported.[m
[m
       core.excludesFile[m
           Specifies the pathname to the file[m
           that contains patterns to describe[m
           paths that are not meant to be[m
           tracked, in addition to [1m.gitignore[0m[m
           (per-directory) and [1m.git/info/exclude[0m.[m
           Defaults to[m
           [1m$XDG_CONFIG_HOME/git/ignore[0m. If[m
           [1m$XDG_CONFIG_HOME[0m is either not set or[m
           empty, [1m$HOME/.config/git/ignore[0m is[m
           used instead. See [1mgitignore[0m(5).[m
[m
[7mnfig(1) line 1849 (press h for help or q to quit)[27m[K[K       core.askPass[m
           Some commands (e.g. svn and http[m
           interfaces) that interactively ask for[m
           a password can be told to use an[m
           external program given via the value[m
           of this variable. Can be overridden by[m
           the [1mGIT_ASKPASS[0m environment variable.[m
           If not set, fall back to the value of[m
           the [1mSSH_ASKPASS[0m environment variable[m
           or, failing that, a simple password[m
           prompt. The external program shall be[m
           given a suitable prompt as[m
           command-line argument and write the[m
           password on its STDOUT.[m
[m
       core.attributesFile[m
           In addition to [1m.gitattributes[0m[m
           (per-directory) and[m
           [1m.git/info/attributes[0m, Git looks into[m
           this file for attributes (see[m
           [1mgitattributes[0m(5)). Path expansions are[m
           made the same way as for[m
           [1mcore.excludesFile[0m. Its default value[m
           is [1m$XDG_CONFIG_HOME/git/attributes[0m. If[m
           [1m$XDG_CONFIG_HOME[0m is either not set or[m
           empty, [1m$HOME/.config/git/attributes[0m is[m
           used instead.[m
[m
       core.hooksPath[m
           By default Git will look for your[m
           hooks in the [1m$GIT_DIR/hooks[0m directory.[m
           Set this to different path, e.g.[m
           [1m/etc/git/hooks[0m, and Git will try to[m
           find your hooks in that directory,[m
           e.g.  [1m/etc/git/hooks/pre-receive[0m[m
           instead of in[m
           [1m$GIT_DIR/hooks/pre-receive[0m.[m
[m
           The path can be either absolute or[m
           relative. A relative path is taken as[m
           relative to the directory where the[m
           hooks are run (see the "DESCRIPTION"[m
           section of [1mgithooks[0m(5)).[m
[m
[7mnfig(1) line 1893 (press h for help or q to quit)[27m[K[K           This configuration variable is useful[m
           in cases where you’d like to centrally[m
           configure your Git hooks instead of[m
           configuring them on a per-repository[m
           basis, or as a more flexible and[m
           centralized alternative to having an[m
           [1minit.templateDir[0m where you’ve changed[m
           default hooks.[m
[m
       core.editor[m
           Commands such as [1mcommit[0m and [1mtag[0m that[m
           let you edit messages by launching an[m
           editor use the value of this variable[m
           when it is set, and the environment[m
           variable [1mGIT_EDITOR[0m is not set. See[m
           [1mgit-var[0m(1).[m
[m
       core.commentChar[m
           Commands such as [1mcommit[0m and [1mtag[0m that[m
           let you edit messages consider a line[m
           that begins with this character[m
           commented, and removes them after the[m
           editor returns (default [4m#[24m).[m
[m
           If set to "auto", [1mgit-commit[0m would[m
           select a character that is not the[m
           beginning character of any line in[m
           existing commit messages.[m
[m
       core.filesRefLockTimeout[m
           The length of time, in milliseconds,[m
           to retry when trying to lock an[m
           individual reference. Value 0 means[m
           not to retry at all; -1 means to try[m
           indefinitely. Default is 100 (i.e.,[m
           retry for 100ms).[m
[m
       core.packedRefsTimeout[m
           The length of time, in milliseconds,[m
           to retry when trying to lock the[m
           [1mpacked-refs[0m file. Value 0 means not to[m
           retry at all; -1 means to try[m
           indefinitely. Default is 1000 (i.e.,[m
           retry for 1 second).[m
[7mnfig(1) line 1937 (press h for help or q to quit)[27m[K[K[m
       core.pager[m
           Text viewer for use by Git commands[m
           (e.g., [4mless[24m). The value is meant to be[m
           interpreted by the shell. The order of[m
           preference is the [1m$GIT_PAGER[0m[m
           environment variable, then [1mcore.pager[0m[m
           configuration, then [1m$PAGER[0m, and then[m
           the default chosen at compile time[m
           (usually [4mless[24m).[m
[m
           When the [1mLESS[0m environment variable is[m
           unset, Git sets it to [1mFRX[0m (if [1mLESS[0m[m
           environment variable is set, Git does[m
           not change it at all). If you want to[m
           selectively override Git’s default[m
           setting for [1mLESS[0m, you can set[m
           [1mcore.pager[0m to e.g.  [1mless[0m [1m-S[0m. This will[m
           be passed to the shell by Git, which[m
           will translate the final command to[m
           [1mLESS=FRX[0m [1mless[0m [1m-S[0m. The environment does[m
           not set the [1mS[0m option but the command[m
           line does, instructing less to[m
           truncate long lines. Similarly,[m
           setting [1mcore.pager[0m to [1mless[0m [1m-+F[0m will[m
           deactivate the [1mF[0m option specified by[m
           the environment from the command-line,[m
           deactivating the "quit if one screen"[m
           behavior of [1mless[0m. One can specifically[m
           activate some flags for particular[m
           commands: for example, setting[m
           [1mpager.blame[0m to [1mless[0m [1m-S[0m enables line[m
           truncation only for [1mgit[0m [1mblame[0m.[m
[m
           Likewise, when the [1mLV[0m environment[m
           variable is unset, Git sets it to [1m-c[0m.[m
           You can override this setting by[m
           exporting [1mLV[0m with another value or[m
           setting [1mcore.pager[0m to [1mlv[0m [1m+c[0m.[m
[m
       core.whitespace[m
           A comma separated list of common[m
           whitespace problems to notice.  [4mgit[24m[m
           [4mdiff[24m will use [1mcolor.diff.whitespace[0m to[m
[7mnfig(1) line 1981 (press h for help or q to quit)[27m[K[K           highlight them, and [4mgit[24m [4mapply[24m[m
           [4m--whitespace=error[24m will consider them[m
           as errors. You can prefix [1m-[0m to disable[m
           any of them (e.g.  [1m-trailing-space[0m):[m
[m
           •   [1mblank-at-eol[0m treats trailing[m
               whitespaces at the end of the line[m
               as an error (enabled by default).[m
[m
           •   [1mspace-before-tab[0m treats a space[m
               character that appears immediately[m
               before a tab character in the[m
               initial indent part of the line as[m
               an error (enabled by default).[m
[m
           •   [1mindent-with-non-tab[0m treats a line[m
               that is indented with space[m
               characters instead of the[m
               equivalent tabs as an error (not[m
               enabled by default).[m
[m
           •   [1mtab-in-indent[0m treats a tab[m
               character in the initial indent[m
               part of the line as an error (not[m
               enabled by default).[m
[m
           •   [1mblank-at-eof[0m treats blank lines[m
               added at the end of file as an[m
               error (enabled by default).[m
[m
           •   [1mtrailing-space[0m is a short-hand to[m
               cover both [1mblank-at-eol[0m and[m
               [1mblank-at-eof[0m.[m
[m
           •   [1mcr-at-eol[0m treats a carriage-return[m
               at the end of line as part of the[m
               line terminator, i.e. with it,[m
               [1mtrailing-space[0m does not trigger if[m
               the character before such a[m
               carriage-return is not a[m
               whitespace (not enabled by[m
               default).[m
[m
           •   [1mtabwidth=<n>[0m tells how many[m
[7mnfig(1) line 2025 (press h for help or q to quit)[27m[K[K               character positions a tab[m
               occupies; this is relevant for[m
               [1mindent-with-non-tab[0m and when Git[m
               fixes [1mtab-in-indent[0m errors. The[m
               default tab width is 8. Allowed[m
               values are 1 to 63.[m
[m
       core.fsyncObjectFiles[m
           This boolean will enable [4mfsync()[24m when[m
           writing object files.[m
[m
           This is a total waste of time and[m
           effort on a filesystem that orders[m
           data writes properly, but can be[m
           useful for filesystems that do not use[m
           journalling (traditional UNIX[m
           filesystems) or that only journal[m
           metadata and not file contents (OS X’s[m
           HFS+, or Linux ext3 with[m
           "data=writeback").[m
[m
       core.preloadIndex[m
           Enable parallel index preload for[m
           operations like [4mgit[24m [4mdiff[24m[m
[m
           This can speed up operations like [4mgit[24m[m
           [4mdiff[24m and [4mgit[24m [4mstatus[24m especially on[m
           filesystems like NFS that have weak[m
           caching semantics and thus relatively[m
           high IO latencies. When enabled, Git[m
           will do the index comparison to the[m
           filesystem data in parallel, allowing[m
           overlapping IO’s. Defaults to true.[m
[m
       core.unsetenvvars[m
           Windows-only: comma-separated list of[m
           environment variables' names that need[m
           to be unset before spawning any other[m
           process. Defaults to [1mPERL5LIB[0m to[m
           account for the fact that Git for[m
           Windows insists on using its own Perl[m
           interpreter.[m
[m
       core.restrictinheritedhandles[m
[7mnfig(1) line 2069 (press h for help or q to quit)[27m[K[K           Windows-only: override whether spawned[m
           processes inherit only standard file[m
           handles ([1mstdin[0m, [1mstdout[0m and [1mstderr[0m) or[m
           all handles. Can be [1mauto[0m, [1mtrue[0m or[m
           [1mfalse[0m. Defaults to [1mauto[0m, which means[m
           [1mtrue[0m on Windows 7 and later, and [1mfalse[0m[m
           on older Windows versions.[m
[m
       core.createObject[m
           You can set this to [4mlink[24m, in which[m
           case a hardlink followed by a delete[m
           of the source are used to make sure[m
           that object creation will not[m
           overwrite existing objects.[m
[m
           On some file system/operating system[m
           combinations, this is unreliable. Set[m
           this config setting to [4mrename[24m there;[m
           However, This will remove the check[m
           that makes sure that existing object[m
           files will not get overwritten.[m
[m
       core.notesRef[m
           When showing commit messages, also[m
           show notes which are stored in the[m
           given ref. The ref must be fully[m
           qualified. If the given ref does not[m
           exist, it is not an error but means[m
           that no notes should be printed.[m
[m
           This setting defaults to[m
           "refs/notes/commits", and it can be[m
           overridden by the [1mGIT_NOTES_REF[0m[m
           environment variable. See [1mgit-[0m[m
           [1mnotes[0m(1).[m
[m
       core.commitGraph[m
           If true, then git will read the[m
           commit-graph file (if it exists) to[m
           parse the graph structure of commits.[m
           Defaults to true. See [1mgit-commit-[0m[m
           [1mgraph[0m(1) for more information.[m
[m
       core.useReplaceRefs[m
[7mnfig(1) line 2113 (press h for help or q to quit)[27m[K[K           If set to [1mfalse[0m, behave as if the[m
           [1m--no-replace-objects[0m option was given[m
           on the command line. See [1mgit[0m(1) and[m
           [1mgit-replace[0m(1) for more information.[m
[m
       core.multiPackIndex[m
           Use the multi-pack-index file to track[m
           multiple packfiles using a single[m
           index. See [1mgit-multi-pack-index[0m(1) for[m
           more information. Defaults to true.[m
[m
       core.sparseCheckout[m
           Enable "sparse checkout" feature. See[m
           [1mgit-sparse-checkout[0m(1) for more[m
           information.[m
[m
       core.sparseCheckoutCone[m
           Enables the "cone mode" of the sparse[m
           checkout feature. When the[m
           sparse-checkout file contains a[m
           limited set of patterns, then this[m
           mode provides significant performance[m
           advantages. See [1mgit-sparse-checkout[0m(1)[m
           for more information.[m
[m
       core.abbrev[m
           Set the length object names are[m
           abbreviated to. If unspecified or set[m
           to "auto", an appropriate value is[m
           computed based on the approximate[m
           number of packed objects in your[m
           repository, which hopefully is enough[m
           for abbreviated object names to stay[m
           unique for some time. If set to "no",[m
           no abbreviation is made and the object[m
           names are shown in their full length.[m
           The minimum length is 4.[m
[m
       add.ignoreErrors, add.ignore-errors[m
       (deprecated)[m
           Tells [4mgit[24m [4madd[24m to continue adding files[m
           when some files cannot be added due to[m
           indexing errors. Equivalent to the[m
           [1m--ignore-errors[0m option of [1mgit-add[0m(1).[m
[7mnfig(1) line 2157 (press h for help or q to quit)[27m[K[K           [1madd.ignore-errors[0m is deprecated, as it[m
           does not follow the usual naming[m
           convention for configuration[m
           variables.[m
[m
       add.interactive.useBuiltin[m
           [EXPERIMENTAL] Set to [1mtrue[0m to use the[m
           experimental built-in implementation[m
           of the interactive version of [1mgit-[0m[m
           [1madd[0m(1) instead of the Perl script[m
           version. Is [1mfalse[0m by default.[m
[m
       alias.*[m
           Command aliases for the [1mgit[0m(1) command[m
           wrapper - e.g. after defining[m
           [1malias.last[0m [1m=[0m [1mcat-file[0m [1mcommit[0m [1mHEAD[0m, the[m
           invocation [1mgit[0m [1mlast[0m is equivalent to[m
           [1mgit[0m [1mcat-file[0m [1mcommit[0m [1mHEAD[0m. To avoid[m
           confusion and troubles with script[m
           usage, aliases that hide existing Git[m
           commands are ignored. Arguments are[m
           split by spaces, the usual shell[m
           quoting and escaping is supported. A[m
           quote pair or a backslash can be used[m
           to quote them.[m
[m
           Note that the first word of an alias[m
           does not necessarily have to be a[m
           command. It can be a command-line[m
           option that will be passed into the[m
           invocation of [1mgit[0m. In particular, this[m
           is useful when used with [1m-c[0m to pass in[m
           one-time configurations or [1m-p[0m to force[m
           pagination. For example, [1mloud-rebase[0m [1m=[0m[m
           [1m-c[0m [1mcommit.verbose=true[0m [1mrebase[0m can be[m
           defined such that running [1mgit[0m[m
           [1mloud-rebase[0m would be equivalent to [1mgit[0m[m
           [1m-c[0m [1mcommit.verbose=true[0m [1mrebase[0m. Also,[m
           [1mps[0m [1m=[0m [1m-p[0m [1mstatus[0m would be a helpful[m
           alias since [1mgit[0m [1mps[0m would paginate the[m
           output of [1mgit[0m [1mstatus[0m where the[m
           original command does not.[m
[m
           If the alias expansion is prefixed[m
[7mnfig(1) line 2201 (press h for help or q to quit)[27m[K[K           with an exclamation point, it will be[m
           treated as a shell command. For[m
           example, defining [1malias.new[0m [1m=[0m [1m!gitk[0m[m
           [1m--all[0m [1m--not[0m [1mORIG_HEAD[0m, the invocation[m
           [1mgit[0m [1mnew[0m is equivalent to running the[m
           shell command [1mgitk[0m [1m--all[0m [1m--not[0m[m
           [1mORIG_HEAD[0m. Note that shell commands[m
           will be executed from the top-level[m
           directory of a repository, which may[m
           not necessarily be the current[m
           directory.  [1mGIT_PREFIX[0m is set as[m
           returned by running [1mgit[0m [1mrev-parse[0m[m
           [1m--show-prefix[0m from the original[m
           current directory. See [1mgit-rev-[0m[m
           [1mparse[0m(1).[m
[m
       am.keepcr[m
           If true, git-am will call[m
           git-mailsplit for patches in mbox[m
           format with parameter [1m--keep-cr[0m. In[m
           this case git-mailsplit will not[m
           remove [1m\r[0m from lines ending with [1m\r\n[0m.[m
           Can be overridden by giving[m
           [1m--no-keep-cr[0m from the command line.[m
           See [1mgit-am[0m(1), [1mgit-mailsplit[0m(1).[m
[m
       am.threeWay[m
           By default, [1mgit[0m [1mam[0m will fail if the[m
           patch does not apply cleanly. When set[m
           to true, this setting tells [1mgit[0m [1mam[0m to[m
           fall back on 3-way merge if the patch[m
           records the identity of blobs it is[m
           supposed to apply to and we have those[m
           blobs available locally (equivalent to[m
           giving the [1m--3way[0m option from the[m
           command line). Defaults to [1mfalse[0m. See[m
           [1mgit-am[0m(1).[m
[m
       apply.ignoreWhitespace[m
           When set to [4mchange[24m, tells [4mgit[24m [4mapply[24m to[m
           ignore changes in whitespace, in the[m
           same way as the [1m--ignore-space-change[0m[m
           option. When set to one of: no, none,[m
           never, false tells [4mgit[24m [4mapply[24m to[m
[7mnfig(1) line 2245 (press h for help or q to quit)[27m[K[K           respect all whitespace differences.[m
           See [1mgit-apply[0m(1).[m
[m
       apply.whitespace[m
           Tells [4mgit[24m [4mapply[24m how to handle[m
           whitespaces, in the same way as the[m
           [1m--whitespace[0m option. See [1mgit-apply[0m(1).[m
[m
       blame.blankBoundary[m
           Show blank commit object name for[m
           boundary commits in [1mgit-blame[0m(1). This[m
           option defaults to false.[m
[m
       blame.coloring[m
           This determines the coloring scheme to[m
           be applied to blame output. It can be[m
           [4mrepeatedLines[24m, [4mhighlightRecent[24m, or[m
           [4mnone[24m which is the default.[m
[m
       blame.date[m
           Specifies the format used to output[m
           dates in [1mgit-blame[0m(1). If unset the[m
           iso format is used. For supported[m
           values, see the discussion of the[m
           [1m--date[0m option at [1mgit-log[0m(1).[m
[m
       blame.showEmail[m
           Show the author email instead of[m
           author name in [1mgit-blame[0m(1). This[m
           option defaults to false.[m
[m
       blame.showRoot[m
           Do not treat root commits as[m
           boundaries in [1mgit-blame[0m(1). This[m
           option defaults to false.[m
[m
       blame.ignoreRevsFile[m
           Ignore revisions listed in the file,[m
           one unabbreviated object name per[m
           line, in [1mgit-blame[0m(1). Whitespace and[m
           comments beginning with [1m#[0m are ignored.[m
           This option may be repeated multiple[m
           times. Empty file names will reset the[m
           list of ignored revisions. This option[m
[7mnfig(1) line 2289 (press h for help or q to quit)[27m[K[K           will be handled before the command[m
           line option [1m--ignore-revs-file[0m.[m
[m
       blame.markUnblamableLines[m
           Mark lines that were changed by an[m
           ignored revision that we could not[m
           attribute to another commit with a [4m*[24m[m
           in the output of [1mgit-blame[0m(1).[m
[m
       blame.markIgnoredLines[m
           Mark lines that were changed by an[m
           ignored revision that we attributed to[m
           another commit with a [4m?[24m  in the output[m
           of [1mgit-blame[0m(1).[m
[m
       branch.autoSetupMerge[m
           Tells [4mgit[24m [4mbranch[24m, [4mgit[24m [4mswitch[24m and [4mgit[24m[m
           [4mcheckout[24m to set up new branches so[m
           that [1mgit-pull[0m(1) will appropriately[m
           merge from the starting point branch.[m
           Note that even if this option is not[m
           set, this behavior can be chosen[m
           per-branch using the [1m--track[0m and[m
           [1m--no-track[0m options. The valid settings[m
           are: [1mfalse[0m — no automatic setup is[m
           done; [1mtrue[0m — automatic setup is done[m
           when the starting point is a[m
           remote-tracking branch; [1malways[0m —[m
           automatic setup is done when the[m
           starting point is either a local[m
           branch or remote-tracking branch. This[m
           option defaults to true.[m
[m
       branch.autoSetupRebase[m
           When a new branch is created with [4mgit[24m[m
           [4mbranch[24m, [4mgit[24m [4mswitch[24m or [4mgit[24m [4mcheckout[24m[m
           that tracks another branch, this[m
           variable tells Git to set up pull to[m
           rebase instead of merge (see[m
           "branch.<name>.rebase"). When [1mnever[0m,[m
           rebase is never automatically set to[m
           true. When [1mlocal[0m, rebase is set to[m
           true for tracked branches of other[m
           local branches. When [1mremote[0m, rebase is[m
[7mnfig(1) line 2333 (press h for help or q to quit)[27m[K[K           set to true for tracked branches of[m
           remote-tracking branches. When [1malways[0m,[m
           rebase will be set to true for all[m
           tracking branches. See[m
           "branch.autoSetupMerge" for details on[m
           how to set up a branch to track[m
           another branch. This option defaults[m
           to never.[m
[m
       branch.sort[m
           This variable controls the sort[m
           ordering of branches when displayed by[m
           [1mgit-branch[0m(1). Without the[m
           "--sort=<value>" option provided, the[m
           value of this variable will be used as[m
           the default. See [1mgit-for-each-ref[0m(1)[m
           field names for valid values.[m
[m
       branch.<name>.remote[m
           When on branch <name>, it tells [4mgit[24m[m
           [4mfetch[24m and [4mgit[24m [4mpush[24m which remote to[m
           fetch from/push to. The remote to push[m
           to may be overridden with[m
           [1mremote.pushDefault[0m (for all branches).[m
           The remote to push to, for the current[m
           branch, may be further overridden by[m
           [1mbranch.<name>.pushRemote[0m. If no remote[m
           is configured, or if you are not on[m
           any branch, it defaults to [1morigin[0m for[m
           fetching and [1mremote.pushDefault[0m for[m
           pushing. Additionally, [1m.[0m  (a period)[m
           is the current local repository (a[m
           dot-repository), see[m
           [1mbranch.<name>.merge[0m's final note[m
           below.[m
[m
       branch.<name>.pushRemote[m
           When on branch <name>, it overrides[m
           [1mbranch.<name>.remote[0m for pushing. It[m
           also overrides [1mremote.pushDefault[0m for[m
           pushing from branch <name>. When you[m
           pull from one place (e.g. your[m
           upstream) and push to another place[m
           (e.g. your own publishing repository),[m
[7mnfig(1) line 2377 (press h for help or q to quit)[27m[K[K           you would want to set[m
           [1mremote.pushDefault[0m to specify the[m
           remote to push to for all branches,[m
           and use this option to override it for[m
           a specific branch.[m
[m
       branch.<name>.merge[m
           Defines, together with[m
           branch.<name>.remote, the upstream[m
           branch for the given branch. It tells[m
           [4mgit[24m [4mfetch[24m/[4mgit[24m [4mpull[24m/[4mgit[24m [4mrebase[24m which[m
           branch to merge and can also affect[m
           [4mgit[24m [4mpush[24m (see push.default). When in[m
           branch <name>, it tells [4mgit[24m [4mfetch[24m the[m
           default refspec to be marked for[m
           merging in FETCH_HEAD. The value is[m
           handled like the remote part of a[m
           refspec, and must match a ref which is[m
           fetched from the remote given by[m
           "branch.<name>.remote". The merge[m
           information is used by [4mgit[24m [4mpull[24m (which[m
           at first calls [4mgit[24m [4mfetch[24m) to lookup[m
           the default branch for merging.[m
           Without this option, [4mgit[24m [4mpull[24m defaults[m
           to merge the first refspec fetched.[m
           Specify multiple values to get an[m
           octopus merge. If you wish to setup[m
           [4mgit[24m [4mpull[24m so that it merges into <name>[m
           from another branch in the local[m
           repository, you can point[m
           branch.<name>.merge to the desired[m
           branch, and use the relative path[m
           setting [1m.[0m  (a period) for[m
           branch.<name>.remote.[m
[m
       branch.<name>.mergeOptions[m
           Sets default options for merging into[m
           branch <name>. The syntax and[m
           supported options are the same as[m
           those of [1mgit-merge[0m(1), but option[m
           values containing whitespace[m
           characters are currently not[m
           supported.[m
[m
[7mnfig(1) line 2421 (press h for help or q to quit)[27m[K[K       branch.<name>.rebase[m
           When true, rebase the branch <name> on[m
           top of the fetched branch, instead of[m
           merging the default branch from the[m
           default remote when "git pull" is run.[m
           See "pull.rebase" for doing this in a[m
           non branch-specific manner.[m
[m
           When [1mmerges[0m (or just [4mm[24m), pass the[m
           [1m--rebase-merges[0m option to [4mgit[24m [4mrebase[24m[m
           so that the local merge commits are[m
           included in the rebase (see [1mgit-[0m[m
           [1mrebase[0m(1) for details).[m
[m
           When the value is [1minteractive[0m (or just[m
           [4mi[24m), the rebase is run in interactive[m
           mode.[m
[m
           [1mNOTE[0m: this is a possibly dangerous[m
           operation; do [1mnot[0m use it unless you[m
           understand the implications (see [1mgit-[0m[m
           [1mrebase[0m(1) for details).[m
[m
       branch.<name>.description[m
           Branch description, can be edited with[m
           [1mgit[0m [1mbranch[0m [1m--edit-description[0m. Branch[m
           description is automatically added in[m
           the format-patch cover letter or[m
           request-pull summary.[m
[m
       browser.<tool>.cmd[m
           Specify the command to invoke the[m
           specified browser. The specified[m
           command is evaluated in shell with the[m
           URLs passed as arguments. (See [1mgit-[0m[m
           [1mweb--browse[0m(1).)[m
[m
       browser.<tool>.path[m
           Override the path for the given tool[m
           that may be used to browse HTML help[m
           (see [1m-w[0m option in [1mgit-help[0m(1)) or a[m
           working repository in gitweb (see [1mgit-[0m[m
           [1minstaweb[0m(1)).[m
[m
[7mnfig(1) line 2465 (press h for help or q to quit)[27m[K[K       checkout.defaultRemote[m
           When you run [1mgit[0m [1mcheckout[0m [1m<something>[0m[m
           or [1mgit[0m [1mswitch[0m [1m<something>[0m and only[m
           have one remote, it may implicitly[m
           fall back on checking out and tracking[m
           e.g.  [1morigin/<something>[0m. This stops[m
           working as soon as you have more than[m
           one remote with a [1m<something>[0m[m
           reference. This setting allows for[m
           setting the name of a preferred remote[m
           that should always win when it comes[m
           to disambiguation. The typical[m
           use-case is to set this to [1morigin[0m.[m
[m
           Currently this is used by [1mgit-[0m[m
           [1mswitch[0m(1) and [1mgit-checkout[0m(1) when [1mgit[0m[m
           [1mcheckout[0m [1m<something>[0m or [1mgit[0m [1mswitch[0m[m
           [1m<something>[0m will checkout the[m
           [1m<something>[0m branch on another remote,[m
           and by [1mgit-worktree[0m(1) when [1mgit[0m[m
           [1mworktree[0m [1madd[0m refers to a remote[m
           branch. This setting might be used for[m
           other checkout-like commands or[m
           functionality in the future.[m
[m
       checkout.guess[m
           Provides the default value for the[m
           [1m--guess[0m or [1m--no-guess[0m option in [1mgit[0m[m
           [1mcheckout[0m and [1mgit[0m [1mswitch[0m. See [1mgit-[0m[m
           [1mswitch[0m(1) and [1mgit-checkout[0m(1).[m
[m
       checkout.workers[m
           The number of parallel workers to use[m
           when updating the working tree. The[m
           default is one, i.e. sequential[m
           execution. If set to a value less than[m
           one, Git will use as many workers as[m
           the number of logical cores available.[m
           This setting and[m
           [1mcheckout.thresholdForParallelism[0m[m
           affect all commands that perform[m
           checkout. E.g. checkout, clone, reset,[m
           sparse-checkout, etc.[m
[m
[7mnfig(1) line 2509 (press h for help or q to quit)[27m[K[K           Note: parallel checkout usually[m
           delivers better performance for[m
           repositories located on SSDs or over[m
           NFS. For repositories on spinning[m
           disks and/or machines with a small[m
           number of cores, the default[m
           sequential checkout often performs[m
           better. The size and compression level[m
           of a repository might also influence[m
           how well the parallel version[m
           performs.[m
[m
       checkout.thresholdForParallelism[m
           When running parallel checkout with a[m
           small number of files, the cost of[m
           subprocess spawning and inter-process[m
           communication might outweigh the[m
           parallelization gains. This setting[m
           allows to define the minimum number of[m
           files for which parallel checkout[m
           should be attempted. The default is[m
           100.[m
[m
       clean.requireForce[m
           A boolean to make git-clean do nothing[m
           unless given -f, -i or -n. Defaults to[m
           true.[m
[m
       clone.defaultRemoteName[m
           The name of the remote to create when[m
           cloning a repository. Defaults to[m
           [1morigin[0m, and can be overridden by[m
           passing the [1m--origin[0m command-line[m
           option to [1mgit-clone[0m(1).[m
[m
       clone.rejectShallow[m
           Reject to clone a repository if it is[m
           a shallow one, can be overridden by[m
           passing option [1m--reject-shallow[0m in[m
           command line. See [1mgit-clone[0m(1)[m
[m
       color.advice[m
           A boolean to enable/disable color in[m
           hints (e.g. when a push failed, see[m
[7mnfig(1) line 2553 (press h for help or q to quit)[27m[K[K           [1madvice.*[0m  for a list). May be set to[m
           [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or[m
           [1mtrue[0m), in which case colors are used[m
           only when the error output goes to a[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.advice.hint[m
           Use customized color for hints.[m
[m
       color.blame.highlightRecent[m
           Specify the line annotation color for[m
           [1mgit[0m [1mblame[0m [1m--color-by-age[0m depending[m
           upon the age of the line.[m
[m
           This setting should be set to a[m
           comma-separated list of color and date[m
           settings, starting and ending with a[m
           color, the dates should be set from[m
           oldest to newest. The metadata will be[m
           colored with the specified colors if[m
           the line was introduced before the[m
           given timestamp, overwriting older[m
           timestamped colors.[m
[m
           Instead of an absolute timestamp[m
           relative timestamps work as well, e.g.[m
           [1m2.weeks.ago[0m is valid to address[m
           anything older than 2 weeks.[m
[m
           It defaults to [1mblue,12[0m [1mmonth[0m[m
           [1mago,white,1[0m [1mmonth[0m [1mago,red[0m, which[m
           colors everything older than one year[m
           blue, recent changes between one month[m
           and one year old are kept white, and[m
           lines introduced within the last month[m
           are colored red.[m
[m
       color.blame.repeatedLines[m
           Use the specified color to colorize[m
           line annotations for [1mgit[0m [1mblame[0m[m
           [1m--color-lines[0m, if they come from the[m
           same commit as the preceding line.[m
           Defaults to cyan.[m
[7mnfig(1) line 2597 (press h for help or q to quit)[27m[K[K[m
       color.branch[m
           A boolean to enable/disable color in[m
           the output of [1mgit-branch[0m(1). May be[m
           set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or[m
           [1mauto[0m (or [1mtrue[0m), in which case colors[m
           are used only when the output is to a[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.branch.<slot>[m
           Use customized color for branch[m
           coloration.  [1m<slot>[0m is one of [1mcurrent[0m[m
           (the current branch), [1mlocal[0m (a local[m
           branch), [1mremote[0m (a remote-tracking[m
           branch in refs/remotes/), [1mupstream[0m[m
           (upstream tracking branch), [1mplain[0m[m
           (other refs).[m
[m
       color.diff[m
           Whether to use ANSI escape sequences[m
           to add color to patches. If this is[m
           set to [1malways[0m, [1mgit-diff[0m(1), [1mgit-[0m[m
           [1mlog[0m(1), and [1mgit-show[0m(1) will use color[m
           for all patches. If it is set to [1mtrue[0m[m
           or [1mauto[0m, those commands will only use[m
           color when output is to the terminal.[m
           If unset, then the value of [1mcolor.ui[0m[m
           is used ([1mauto[0m by default).[m
[m
           This does not affect [1mgit-format-[0m[m
           [1mpatch[0m(1) or the [4mgit-diff-*[24m plumbing[m
           commands. Can be overridden on the[m
           command line with the [1m--color[=<when>][0m[m
           option.[m
[m
       color.diff.<slot>[m
           Use customized color for diff[m
           colorization.  [1m<slot>[0m specifies which[m
           part of the patch to use the specified[m
           color, and is one of [1mcontext[0m (context[m
           text - [1mplain[0m is a historical synonym),[m
           [1mmeta[0m (metainformation), [1mfrag[0m (hunk[m
           header), [4mfunc[24m (function in hunk[m
[7mnfig(1) line 2641 (press h for help or q to quit)[27m[K[K           header), [1mold[0m (removed lines), [1mnew[0m[m
           (added lines), [1mcommit[0m (commit[m
           headers), [1mwhitespace[0m (highlighting[m
           whitespace errors), [1moldMoved[0m (deleted[m
           lines), [1mnewMoved[0m (added lines),[m
           [1moldMovedDimmed[0m, [1moldMovedAlternative[0m,[m
           [1moldMovedAlternativeDimmed[0m,[m
           [1mnewMovedDimmed[0m, [1mnewMovedAlternative[0m[m
           [1mnewMovedAlternativeDimmed[0m (See the[m
           [4m<mode>[24m setting of [4m--color-moved[24m in[m
           [1mgit-diff[0m(1) for details),[m
           [1mcontextDimmed[0m, [1moldDimmed[0m, [1mnewDimmed[0m,[m
           [1mcontextBold[0m, [1moldBold[0m, and [1mnewBold[0m (see[m
           [1mgit-range-diff[0m(1) for details).[m
[m
       color.decorate.<slot>[m
           Use customized color for [4mgit[24m [4mlog[24m[m
           [4m--decorate[24m output.  [1m<slot>[0m is one of[m
           [1mbranch[0m, [1mremoteBranch[0m, [1mtag[0m, [1mstash[0m or[m
           [1mHEAD[0m for local branches,[m
           remote-tracking branches, tags, stash[m
           and HEAD, respectively and [1mgrafted[0m for[m
           grafted commits.[m
[m
       color.grep[m
           When set to [1malways[0m, always highlight[m
           matches. When [1mfalse[0m (or [1mnever[0m), never.[m
           When set to [1mtrue[0m or [1mauto[0m, use color[m
           only when the output is written to the[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.grep.<slot>[m
           Use customized color for grep[m
           colorization.  [1m<slot>[0m specifies which[m
           part of the line to use the specified[m
           color, and is one of[m
[m
           [1mcontext[0m[m
               non-matching text in context lines[m
               (when using [1m-A[0m, [1m-B[0m, or [1m-C[0m)[m
[m
           [1mfilename[0m[m
               filename prefix (when not using[m
[7mnfig(1) line 2685 (press h for help or q to quit)[27m[K[K               [1m-h[0m)[m
[m
           [1mfunction[0m[m
               function name lines (when using[m
               [1m-p[0m)[m
[m
           [1mlineNumber[0m[m
               line number prefix (when using [1m-n[0m)[m
[m
           [1mcolumn[0m[m
               column number prefix (when using[m
               [1m--column[0m)[m
[m
           [1mmatch[0m[m
               matching text (same as setting[m
               [1mmatchContext[0m and [1mmatchSelected[0m)[m
[m
           [1mmatchContext[0m[m
               matching text in context lines[m
[m
           [1mmatchSelected[0m[m
               matching text in selected lines.[m
               Also, used to customize the[m
               following [1mgit-log[0m(1) subcommands:[m
               [1m--grep[0m, [1m--author[0m and [1m--committer[0m.[m
[m
           [1mselected[0m[m
               non-matching text in selected[m
               lines. Also, used to customize the[m
               following [1mgit-log[0m(1) subcommands:[m
               [1m--grep[0m, [1m--author[0m and [1m--committer[0m.[m
[m
           [1mseparator[0m[m
               separators between fields on a[m
               line ([1m:[0m, [1m-[0m, and [1m=[0m) and between[m
               hunks ([1m--[0m)[m
[m
       color.interactive[m
           When set to [1malways[0m, always use colors[m
           for interactive prompts and displays[m
           (such as those used by "git-add[m
           --interactive" and "git-clean[m
           --interactive"). When false (or[m
           [1mnever[0m), never. When set to [1mtrue[0m or[m
[7mnfig(1) line 2729 (press h for help or q to quit)[27m[K[K           [1mauto[0m, use colors only when the output[m
           is to the terminal. If unset, then the[m
           value of [1mcolor.ui[0m is used ([1mauto[0m by[m
           default).[m
[m
       color.interactive.<slot>[m
           Use customized color for [4mgit[24m [4madd[24m[m
           [4m--interactive[24m and [4mgit[24m [4mclean[24m[m
           [4m--interactive[24m output.  [1m<slot>[0m may be[m
           [1mprompt[0m, [1mheader[0m, [1mhelp[0m or [1merror[0m, for[m
           four distinct types of normal output[m
           from interactive commands.[m
[m
       color.pager[m
           A boolean to specify whether [1mauto[0m[m
           color modes should colorize output[m
           going to the pager. Defaults to true;[m
           set this to false if your pager does[m
           not understand ANSI color codes.[m
[m
       color.push[m
           A boolean to enable/disable color in[m
           push errors. May be set to [1malways[0m,[m
           [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or [1mtrue[0m), in[m
           which case colors are used only when[m
           the error output goes to a terminal.[m
           If unset, then the value of [1mcolor.ui[0m[m
           is used ([1mauto[0m by default).[m
[m
       color.push.error[m
           Use customized color for push errors.[m
[m
       color.remote[m
           If set, keywords at the start of the[m
           line are highlighted. The keywords are[m
           "error", "warning", "hint" and[m
           "success", and are matched[m
           case-insensitively. May be set to[m
           [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or[m
           [1mtrue[0m). If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.remote.<slot>[m
           Use customized color for each remote[m
[7mnfig(1) line 2773 (press h for help or q to quit)[27m[K[K           keyword.  [1m<slot>[0m may be [1mhint[0m, [1mwarning[0m,[m
           [1msuccess[0m or [1merror[0m which match the[m
           corresponding keyword.[m
[m
       color.showBranch[m
           A boolean to enable/disable color in[m
           the output of [1mgit-show-branch[0m(1). May[m
           be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or[m
           [1mauto[0m (or [1mtrue[0m), in which case colors[m
           are used only when the output is to a[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.status[m
           A boolean to enable/disable color in[m
           the output of [1mgit-status[0m(1). May be[m
           set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or[m
           [1mauto[0m (or [1mtrue[0m), in which case colors[m
           are used only when the output is to a[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.status.<slot>[m
           Use customized color for status[m
           colorization.  [1m<slot>[0m is one of [1mheader[0m[m
           (the header text of the status[m
           message), [1madded[0m or [1mupdated[0m (files[m
           which are added but not committed),[m
           [1mchanged[0m (files which are changed but[m
           not added in the index), [1muntracked[0m[m
           (files which are not tracked by Git),[m
           [1mbranch[0m (the current branch), [1mnobranch[0m[m
           (the color the [4mno[24m [4mbranch[24m warning is[m
           shown in, defaulting to red),[m
           [1mlocalBranch[0m or [1mremoteBranch[0m (the local[m
           and remote branch names, respectively,[m
           when branch and tracking information[m
           is displayed in the status[m
           short-format), or [1munmerged[0m (files[m
           which have unmerged changes).[m
[m
       color.transport[m
           A boolean to enable/disable color when[m
           pushes are rejected. May be set to[m
[7mnfig(1) line 2817 (press h for help or q to quit)[27m[K[K           [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or[m
           [1mtrue[0m), in which case colors are used[m
           only when the error output goes to a[m
           terminal. If unset, then the value of[m
           [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.transport.rejected[m
           Use customized color when a push was[m
           rejected.[m
[m
       color.ui[m
           This variable determines the default[m
           value for variables such as [1mcolor.diff[0m[m
           and [1mcolor.grep[0m that control the use of[m
           color per command family. Its scope[m
           will expand as more commands learn[m
           configuration to set a default for the[m
           [1m--color[0m option. Set it to [1mfalse[0m or[m
           [1mnever[0m if you prefer Git commands not[m
           to use color unless enabled explicitly[m
           with some other configuration or the[m
           [1m--color[0m option. Set it to [1malways[0m if[m
           you want all output not intended for[m
           machine consumption to use color, to[m
           [1mtrue[0m or [1mauto[0m (this is the default[m
           since Git 1.8.4) if you want such[m
           output to use color when written to[m
           the terminal.[m
[m
       column.ui[m
           Specify whether supported commands[m
           should output in columns. This[m
           variable consists of a list of tokens[m
           separated by spaces or commas:[m
[m
           These options control when the feature[m
           should be enabled (defaults to [4mnever[24m):[m
[m
           [1malways[0m[m
               always show in columns[m
[m
           [1mnever[0m[m
               never show in columns[m
[m
[7mnfig(1) line 2861 (press h for help or q to quit)[27m[K[K           [1mauto[0m[m
               show in columns if the output is[m
               to the terminal[m
[m
           These options control layout (defaults[m
           to [4mcolumn[24m). Setting any of these[m
           implies [4malways[24m if none of [4malways[24m,[m
           [4mnever[24m, or [4mauto[24m are specified.[m
[m
           [1mcolumn[0m[m
               fill columns before rows[m
[m
           [1mrow[0m[m
               fill rows before columns[m
[m
           [1mplain[0m[m
               show in one column[m
[m
           Finally, these options can be combined[m
           with a layout option (defaults to[m
           [4mnodense[24m):[m
[m
           [1mdense[0m[m
               make unequal size columns to[m
               utilize more space[m
[m
           [1mnodense[0m[m
               make equal size columns[m
[m
       column.branch[m
           Specify whether to output branch[m
           listing in [1mgit[0m [1mbranch[0m in columns. See[m
           [1mcolumn.ui[0m for details.[m
[m
       column.clean[m
           Specify the layout when list items in[m
           [1mgit[0m [1mclean[0m [1m-i[0m, which always shows files[m
           and directories in columns. See[m
           [1mcolumn.ui[0m for details.[m
[m
       column.status[m
           Specify whether to output untracked[m
           files in [1mgit[0m [1mstatus[0m in columns. See[m
           [1mcolumn.ui[0m for details.[m
[7mnfig(1) line 2905 (press h for help or q to quit)[27m[K[K[m
       column.tag[m
           Specify whether to output tag listing[m
           in [1mgit[0m [1mtag[0m in columns. See [1mcolumn.ui[0m[m
           for details.[m
[m
       commit.cleanup[m
           This setting overrides the default of[m
           the [1m--cleanup[0m option in [1mgit[0m [1mcommit[0m.[m
           See [1mgit-commit[0m(1) for details.[m
           Changing the default can be useful[m
           when you always want to keep lines[m
           that begin with comment character [1m#[0m in[m
           your log message, in which case you[m
           would do [1mgit[0m [1mconfig[0m [1mcommit.cleanup[0m[m
           [1mwhitespace[0m (note that you will have to[m
           remove the help lines that begin with[m
           [1m#[0m in the commit log template yourself,[m
           if you do this).[m
[m
       commit.gpgSign[m
           A boolean to specify whether all[m
           commits should be GPG signed. Use of[m
           this option when doing operations such[m
           as rebase can result in a large number[m
           of commits being signed. It may be[m
           convenient to use an agent to avoid[m
           typing your GPG passphrase several[m
           times.[m
[m
       commit.status[m
           A boolean to enable/disable inclusion[m
           of status information in the commit[m
           message template when using an editor[m
           to prepare the commit message.[m
           Defaults to true.[m
[m
       commit.template[m
           Specify the pathname of a file to use[m
           as the template for new commit[m
           messages.[m
[m
       commit.verbose[m
           A boolean or int to specify the level[m
[7mnfig(1) line 2949 (press h for help or q to quit)[27m[K[K           of verbose with [1mgit[0m [1mcommit[0m. See [1mgit-[0m[m
           [1mcommit[0m(1).[m
[m
       commitGraph.generationVersion[m
           Specifies the type of generation[m
           number version to use when writing or[m
           reading the commit-graph file. If[m
           version 1 is specified, then the[m
           corrected commit dates will not be[m
           written or read. Defaults to 2.[m
[m
       commitGraph.maxNewFilters[m
           Specifies the default value for the[m
           [1m--max-new-filters[0m option of [1mgit[0m[m
           [1mcommit-graph[0m [1mwrite[0m (c.f., [1mgit-commit-[0m[m
           [1mgraph[0m(1)).[m
[m
       commitGraph.readChangedPaths[m
           If true, then git will use the[m
           changed-path Bloom filters in the[m
           commit-graph file (if it exists, and[m
           they are present). Defaults to true.[m
           See [1mgit-commit-graph[0m(1) for more[m
           information.[m
[m
       credential.helper[m
           Specify an external helper to be[m
           called when a username or password[m
           credential is needed; the helper may[m
           consult external storage to avoid[m
           prompting the user for the[m
           credentials. This is normally the name[m
           of a credential helper with possible[m
           arguments, but may also be an absolute[m
           path with arguments or, if preceded by[m
           [1m![0m, shell commands.[m
[m
           Note that multiple helpers may be[m
           defined. See [1mgitcredentials[0m(7) for[m
           details and examples.[m
[m
       credential.useHttpPath[m
           When acquiring credentials, consider[m
           the "path" component of an http or[m
[7mnfig(1) line 2993 (press h for help or q to quit)[27m[K[K           https URL to be important. Defaults to[m
           false. See [1mgitcredentials[0m(7) for more[m
           information.[m
[m
       credential.username[m
           If no username is set for a network[m
           authentication, use this username by[m
           default. See credential.<context>.*[m
           below, and [1mgitcredentials[0m(7).[m
[m
       credential.<url>.*[m
           Any of the credential.* options above[m
           can be applied selectively to some[m
           credentials. For example[m
           "credential.https://example.com.username[m "[m
           would set the default username only[m
           for https connections to example.com.[m
           See [1mgitcredentials[0m(7) for details on[m
           how URLs are matched.[m
[m
       credentialCache.ignoreSIGHUP[m
           Tell git-credential-cache—daemon to[m
           ignore SIGHUP, instead of quitting.[m
[m
       credentialStore.lockTimeoutMS[m
           The length of time, in milliseconds,[m
           for git-credential-store to retry when[m
           trying to lock the credentials file.[m
           Value 0 means not to retry at all; -1[m
           means to try indefinitely. Default is[m
           1000 (i.e., retry for 1s).[m
[m
       completion.commands[m
           This is only used by[m
           git-completion.bash to add or remove[m
           commands from the list of completed[m
           commands. Normally only porcelain[m
           commands and a few select others are[m
           completed. You can add more commands,[m
           separated by space, in this variable.[m
           Prefixing the command with [4m-[24m will[m
           remove it from the existing list.[m
[m
[7mnfig(1) line 3037 (press h for help or q to quit)[27m[K[K       diff.autoRefreshIndex[m
           When using [4mgit[24m [4mdiff[24m to compare with[m
           work tree files, do not consider[m
           stat-only change as changed. Instead,[m
           silently run [1mgit[0m [1mupdate-index[0m[m
           [1m--refresh[0m to update the cached stat[m
           information for paths whose contents[m
           in the work tree match the contents in[m
           the index. This option defaults to[m
           true. Note that this affects only [4mgit[24m[m
           [4mdiff[24m Porcelain, and not lower level[m
           [4mdiff[24m commands such as [4mgit[24m [4mdiff-files[24m.[m
[m
       diff.dirstat[m
           A comma separated list of [1m--dirstat[0m[m
           parameters specifying the default[m
           behavior of the [1m--dirstat[0m option to[m
           [1mgit-diff[0m(1) and friends. The defaults[m
           can be overridden on the command line[m
           (using [1m--dirstat=<param1,param2,...>[0m).[m
           The fallback defaults (when not[m
           changed by [1mdiff.dirstat[0m) are[m
           [1mchanges,noncumulative,3[0m. The following[m
           parameters are available:[m
[m
           [1mchanges[0m[m
               Compute the dirstat numbers by[m
               counting the lines that have been[m
               removed from the source, or added[m
               to the destination. This ignores[m
               the amount of pure code movements[m
               within a file. In other words,[m
               rearranging lines in a file is not[m
               counted as much as other changes.[m
               This is the default behavior when[m
               no parameter is given.[m
[m
           [1mlines[0m[m
               Compute the dirstat numbers by[m
               doing the regular line-based diff[m
               analysis, and summing the[m
               removed/added line counts. (For[m
               binary files, count 64-byte chunks[m
               instead, since binary files have[m
[7mnfig(1) line 3080 (press h for help or q to quit)[27m[K[K               no natural concept of lines). This[m
               is a more expensive [1m--dirstat[0m[m
               behavior than the [1mchanges[0m[m
               behavior, but it does count[m
               rearranged lines within a file as[m
               much as other changes. The[m
               resulting output is consistent[m
               with what you get from the other[m
               [1m--*stat[0m options.[m
[m
           [1mfiles[0m[m
               Compute the dirstat numbers by[m
               counting the number of files[m
               changed. Each changed file counts[m
               equally in the dirstat analysis.[m
               This is the computationally[m
               cheapest [1m--dirstat[0m behavior, since[m
               it does not have to look at the[m
               file contents at all.[m
[m
           [1mcumulative[0m[m
               Count changes in a child directory[m
               for the parent directory as well.[m
               Note that when using [1mcumulative[0m,[m
               the sum of the percentages[m
               reported may exceed 100%. The[m
               default (non-cumulative) behavior[m
               can be specified with the[m
               [1mnoncumulative[0m parameter.[m
[m
           <limit>[m
               An integer parameter specifies a[m
               cut-off percent (3% by default).[m
               Directories contributing less than[m
               this percentage of the changes are[m
               not shown in the output.[m
[m
           Example: The following will count[m
           changed files, while ignoring[m
           directories with less than 10% of the[m
           total amount of changed files, and[m
           accumulating child directory counts in[m
           the parent directories:[m
           [1mfiles,10,cumulative[0m.[m
[7mnfig(1) line 3124 (press h for help or q to quit)[27m[K[K[m
       diff.statGraphWidth[m
           Limit the width of the graph part in[m
           --stat output. If set, applies to all[m
           commands generating --stat output[m
           except format-patch.[m
[m
       diff.context[m
           Generate diffs with <n> lines of[m
           context instead of the default of 3.[m
           This value is overridden by the -U[m
           option.[m
[m
       diff.interHunkContext[m
           Show the context between diff hunks,[m
           up to the specified number of lines,[m
           thereby fusing the hunks that are[m
           close to each other. This value serves[m
           as the default for the[m
           [1m--inter-hunk-context[0m command line[m
           option.[m
[m
       diff.external[m
           If this config variable is set, diff[m
           generation is not performed using the[m
           internal diff machinery, but using the[m
           given command. Can be overridden with[m
           the ‘GIT_EXTERNAL_DIFF’ environment[m
           variable. The command is called with[m
           parameters as described under "git[m
           Diffs" in [1mgit[0m(1). Note: if you want to[m
           use an external diff program only on a[m
           subset of your files, you might want[m
           to use [1mgitattributes[0m(5) instead.[m
[m
       diff.ignoreSubmodules[m
           Sets the default value of[m
           --ignore-submodules. Note that this[m
           affects only [4mgit[24m [4mdiff[24m Porcelain, and[m
           not lower level [4mdiff[24m commands such as[m
           [4mgit[24m [4mdiff-files[24m.  [4mgit[24m [4mcheckout[24m and [4mgit[24m[m
           [4mswitch[24m also honor this setting when[m
           reporting uncommitted changes. Setting[m
           it to [4mall[24m disables the submodule[m
[7mnfig(1) line 3168 (press h for help or q to quit)[27m[K[K           summary normally shown by [4mgit[24m [4mcommit[24m[m
           and [4mgit[24m [4mstatus[24m when[m
           [1mstatus.submoduleSummary[0m is set unless[m
           it is overridden by using the[m
           --ignore-submodules command-line[m
           option. The [4mgit[24m [4msubmodule[24m commands are[m
           not affected by this setting. By[m
           default this is set to untracked so[m
           that any untracked submodules are[m
           ignored.[m
[m
       diff.mnemonicPrefix[m
           If set, [4mgit[24m [4mdiff[24m uses a prefix pair[m
           that is different from the standard[m
           "a/" and "b/" depending on what is[m
           being compared. When this[m
           configuration is in effect, reverse[m
           diff output also swaps the order of[m
           the prefixes:[m
[m
           [1mgit[0m [1mdiff[0m[m
               compares the (i)ndex and the[m
               (w)ork tree;[m
[m
           [1mgit[0m [1mdiff[0m [1mHEAD[0m[m
               compares a (c)ommit and the (w)ork[m
               tree;[m
[m
           [1mgit[0m [1mdiff[0m [1m--cached[0m[m
               compares a (c)ommit and the[m
               (i)ndex;[m
[m
           [1mgit[0m [1mdiff[0m [1mHEAD:file1[0m [1mfile2[0m[m
               compares an (o)bject and a (w)ork[m
               tree entity;[m
[m
           [1mgit[0m [1mdiff[0m [1m--no-index[0m [1ma[0m [1mb[0m[m
               compares two non-git things (1)[m
               and (2).[m
[m
       diff.noprefix[m
           If set, [4mgit[24m [4mdiff[24m does not show any[m
           source or destination prefix.[m
[m
[7mnfig(1) line 3212 (press h for help or q to quit)[27m[K[K       diff.relative[m
           If set to [4mtrue[24m, [4mgit[24m [4mdiff[24m does not show[m
           changes outside of the directory and[m
           show pathnames relative to the current[m
           directory.[m
[m
       diff.orderFile[m
           File indicating how to order files[m
           within a diff. See the [4m-O[24m option to[m
           [1mgit-diff[0m(1) for details. If[m
           [1mdiff.orderFile[0m is a relative pathname,[m
           it is treated as relative to the top[m
           of the working tree.[m
[m
       diff.renameLimit[m
           The number of files to consider in the[m
           exhaustive portion of copy/rename[m
           detection; equivalent to the [4mgit[24m [4mdiff[24m[m
           option [1m-l[0m. If not set, the default[m
           value is currently 1000. This setting[m
           has no effect if rename detection is[m
           turned off.[m
[m
       diff.renames[m
           Whether and how Git detects renames.[m
           If set to "false", rename detection is[m
           disabled. If set to "true", basic[m
           rename detection is enabled. If set to[m
           "copies" or "copy", Git will detect[m
           copies, as well. Defaults to true.[m
           Note that this affects only [4mgit[24m [4mdiff[24m[m
           Porcelain like [1mgit-diff[0m(1) and [1mgit-[0m[m
           [1mlog[0m(1), and not lower level commands[m
           such as [1mgit-diff-files[0m(1).[m
[m
       diff.suppressBlankEmpty[m
           A boolean to inhibit the standard[m
           behavior of printing a space before[m
           each empty output line. Defaults to[m
           false.[m
[m
       diff.submodule[m
           Specify the format in which[m
           differences in submodules are shown.[m
[7mnfig(1) line 3256 (press h for help or q to quit)[27m[K[K           The "short" format just shows the[m
           names of the commits at the beginning[m
           and end of the range. The "log" format[m
           lists the commits in the range like[m
           [1mgit-submodule[0m(1) [1msummary[0m does. The[m
           "diff" format shows an inline diff of[m
           the changed contents of the submodule.[m
           Defaults to "short".[m
[m
       diff.wordRegex[m
           A POSIX Extended Regular Expression[m
           used to determine what is a "word"[m
           when performing word-by-word[m
           difference calculations. Character[m
           sequences that match the regular[m
           expression are "words", all other[m
           characters are [1mignorable[0m whitespace.[m
[m
       diff.<driver>.command[m
           The custom diff driver command. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.xfuncname[m
           The regular expression that the diff[m
           driver should use to recognize the[m
           hunk header. A built-in pattern may[m
           also be used. See [1mgitattributes[0m(5) for[m
           details.[m
[m
       diff.<driver>.binary[m
           Set this option to true to make the[m
           diff driver treat files as binary. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.textconv[m
           The command that the diff driver[m
           should call to generate the[m
           text-converted version of a file. The[m
           result of the conversion is used to[m
           generate a human-readable diff. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.wordRegex[m
           The regular expression that the diff[m
[7mnfig(1) line 3300 (press h for help or q to quit)[27m[K[K           driver should use to split words in a[m
           line. See [1mgitattributes[0m(5) for[m
           details.[m
[m
       diff.<driver>.cachetextconv[m
           Set this option to true to make the[m
           diff driver cache the text conversion[m
           outputs. See [1mgitattributes[0m(5) for[m
           details.[m
[m
       diff.tool[m
           Controls which diff tool is used by[m
           [1mgit-difftool[0m(1). This variable[m
           overrides the value configured in[m
           [1mmerge.tool[0m. The list below shows the[m
           valid built-in values. Any other value[m
           is treated as a custom diff tool and[m
           requires that a corresponding[m
           difftool.<tool>.cmd variable is[m
           defined.[m
[m
       diff.guitool[m
           Controls which diff tool is used by[m
           [1mgit-difftool[0m(1) when the -g/--gui flag[m
           is specified. This variable overrides[m
           the value configured in [1mmerge.guitool[0m.[m
           The list below shows the valid[m
           built-in values. Any other value is[m
           treated as a custom diff tool and[m
           requires that a corresponding[m
           difftool.<guitool>.cmd variable is[m
           defined.[m
[m
           •   araxis[m
[m
           •   bc[m
[m
           •   bc3[m
[m
           •   bc4[m
[m
           •   codecompare[m
[m
           •   deltawalker[m
[7mnfig(1) line 3344 (press h for help or q to quit)[27m[K[K[m
           •   diffmerge[m
[m
           •   diffuse[m
[m
           •   ecmerge[m
[m
           •   emerge[m
[m
           •   examdiff[m
[m
           •   guiffy[m
[m
           •   gvimdiff[m
[m
           •   gvimdiff1[m
[m
           •   gvimdiff2[m
[m
           •   gvimdiff3[m
[m
           •   kdiff3[m
[m
           •   kompare[m
[m
           •   meld[m
[m
           •   nvimdiff[m
[m
           •   nvimdiff1[m
[m
           •   nvimdiff2[m
[m
           •   nvimdiff3[m
[m
           •   opendiff[m
[m
           •   p4merge[m
[m
           •   smerge[m
[m
           •   tkdiff[m
[m
           •   vimdiff[m
[7mnfig(1) line 3388 (press h for help or q to quit)[27m[K[K[m
           •   vimdiff1[m
[m
           •   vimdiff2[m
[m
           •   vimdiff3[m
[m
           •   winmerge[m
[m
           •   xxdiff[m
[m
       diff.indentHeuristic[m
           Set this option to [1mfalse[0m to disable[m
           the default heuristics that shift diff[m
           hunk boundaries to make patches easier[m
           to read.[m
[m
       diff.algorithm[m
           Choose a diff algorithm. The variants[m
           are as follows:[m
[m
           [1mdefault[0m, [1mmyers[0m[m
               The basic greedy diff algorithm.[m
               Currently, this is the default.[m
[m
           [1mminimal[0m[m
               Spend extra time to make sure the[m
               smallest possible diff is[m
               produced.[m
[m
           [1mpatience[0m[m
               Use "patience diff" algorithm when[m
               generating patches.[m
[m
           [1mhistogram[0m[m
               This algorithm extends the[m
               patience algorithm to "support[m
               low-occurrence common elements".[m
[m
       diff.wsErrorHighlight[m
           Highlight whitespace errors in the[m
           [1mcontext[0m, [1mold[0m or [1mnew[0m lines of the diff.[m
           Multiple values are separated by[m
           comma, [1mnone[0m resets previous values,[m
[7mnfig(1) line 3432 (press h for help or q to quit)[27m[K[K           [1mdefault[0m reset the list to [1mnew[0m and [1mall[0m[m
           is a shorthand for [1mold,new,context[0m.[m
           The whitespace errors are colored with[m
           [1mcolor.diff.whitespace[0m. The command[m
           line option[m
           [1m--ws-error-highlight=<kind>[0m overrides[m
           this setting.[m
[m
       diff.colorMoved[m
           If set to either a valid [1m<mode>[0m or a[m
           true value, moved lines in a diff are[m
           colored differently, for details of[m
           valid modes see [4m--color-moved[24m in [1mgit-[0m[m
           [1mdiff[0m(1). If simply set to true the[m
           default color mode will be used. When[m
           set to false, moved lines are not[m
           colored.[m
[m
       diff.colorMovedWS[m
           When moved lines are colored using[m
           e.g. the [1mdiff.colorMoved[0m setting, this[m
           option controls the [1m<mode>[0m how spaces[m
           are treated for details of valid modes[m
           see [4m--color-moved-ws[24m in [1mgit-diff[0m(1).[m
[m
       difftool.<tool>.path[m
           Override the path for the given tool.[m
           This is useful in case your tool is[m
           not in the PATH.[m
[m
       difftool.<tool>.cmd[m
           Specify the command to invoke the[m
           specified diff tool. The specified[m
           command is evaluated in shell with the[m
           following variables available: [4mLOCAL[24m[m
           is set to the name of the temporary[m
           file containing the contents of the[m
           diff pre-image and [4mREMOTE[24m is set to[m
           the name of the temporary file[m
           containing the contents of the diff[m
           post-image.[m
[m
       difftool.prompt[m
           Prompt before each invocation of the[m
[7mnfig(1) line 3476 (press h for help or q to quit)[27m[K[K           diff tool.[m
[m
       extensions.objectFormat[m
           Specify the hash algorithm to use. The[m
           acceptable values are [1msha1[0m and [1msha256[0m.[m
           If not specified, [1msha1[0m is assumed. It[m
           is an error to specify this key unless[m
           [1mcore.repositoryFormatVersion[0m is 1.[m
[m
           Note that this setting should only be[m
           set by [1mgit-init[0m(1) or [1mgit-clone[0m(1).[m
           Trying to change it after[m
           initialization will not work and will[m
           produce hard-to-diagnose issues.[m
[m
       fastimport.unpackLimit[m
           If the number of objects imported by[m
           [1mgit-fast-import[0m(1) is below this[m
           limit, then the objects will be[m
           unpacked into loose object files.[m
           However if the number of imported[m
           objects equals or exceeds this limit[m
           then the pack will be stored as a[m
           pack. Storing the pack from a[m
           fast-import can make the import[m
           operation complete faster, especially[m
           on slow filesystems. If not set, the[m
           value of [1mtransfer.unpackLimit[0m is used[m
           instead.[m
[m
       feature.*[m
           The config settings that start with[m
           [1mfeature.[0m  modify the defaults of a[m
           group of other config settings. These[m
           groups are created by the Git[m
           developer community as recommended[m
           defaults and are subject to change. In[m
           particular, new config options may be[m
           added with different defaults.[m
[m
       feature.experimental[m
           Enable config options that are new to[m
           Git, and are being considered for[m
           future defaults. Config settings[m
[7mnfig(1) line 3520 (press h for help or q to quit)[27m[K[K           included here may be added or removed[m
           with each release, including minor[m
           version updates. These settings may[m
           have unintended interactions since[m
           they are so new. Please enable this[m
           setting if you are interested in[m
           providing feedback on experimental[m
           features. The new default values are:[m
[m
           •   [1mfetch.negotiationAlgorithm=skipping[0m[m
               may improve fetch negotiation[m
               times by skipping more commits at[m
               a time, reducing the number of[m
               round trips.[m
[m
       feature.manyFiles[m
           Enable config options that optimize[m
           for repos with many files in the[m
           working directory. With many files,[m
           commands such as [1mgit[0m [1mstatus[0m and [1mgit[0m[m
           [1mcheckout[0m may be slow and these new[m
           defaults improve performance:[m
[m
           •   [1mindex.version=4[0m enables[m
               path-prefix compression in the[m
               index.[m
[m
           •   [1mcore.untrackedCache=true[0m enables[m
               the untracked cache. This setting[m
               assumes that mtime is working on[m
               your machine.[m
[m
       fetch.recurseSubmodules[m
           This option controls whether [1mgit[0m [1mfetch[0m[m
           (and the underlying fetch in [1mgit[0m [1mpull[0m)[m
           will recursively fetch into populated[m
           submodules. This option can be set[m
           either to a boolean value or to[m
           [4mon-demand[24m. Setting it to a boolean[m
           changes the behavior of fetch and pull[m
           to recurse unconditionally into[m
           submodules when set to true or to not[m
           recurse at all when set to false. When[m
           set to [4mon-demand[24m, fetch and pull will[m
[7mnfig(1) line 3564 (press h for help or q to quit)[27m[K[K           only recurse into a populated[m
           submodule when its superproject[m
           retrieves a commit that updates the[m
           submodule’s reference. Defaults to[m
           [4mon-demand[24m, or to the value of[m
           [4msubmodule.recurse[24m if set.[m
[m
       fetch.fsckObjects[m
           If it is set to true, git-fetch-pack[m
           will check all fetched objects. See[m
           [1mtransfer.fsckObjects[0m for what’s[m
           checked. Defaults to false. If not[m
           set, the value of [1mtransfer.fsckObjects[0m[m
           is used instead.[m
[m
       fetch.fsck.<msg-id>[m
           Acts like [1mfsck.<msg-id>[0m, but is used[m
           by [1mgit-fetch-pack[0m(1) instead of [1mgit-[0m[m
           [1mfsck[0m(1). See the [1mfsck.<msg-id>[0m[m
           documentation for details.[m
[m
       fetch.fsck.skipList[m
           Acts like [1mfsck.skipList[0m, but is used[m
           by [1mgit-fetch-pack[0m(1) instead of [1mgit-[0m[m
           [1mfsck[0m(1). See the [1mfsck.skipList[0m[m
           documentation for details.[m
[m
       fetch.unpackLimit[m
           If the number of objects fetched over[m
           the Git native transfer is below this[m
           limit, then the objects will be[m
           unpacked into loose object files.[m
           However if the number of received[m
           objects equals or exceeds this limit[m
           then the received pack will be stored[m
           as a pack, after adding any missing[m
           delta bases. Storing the pack from a[m
           push can make the push operation[m
           complete faster, especially on slow[m
           filesystems. If not set, the value of[m
           [1mtransfer.unpackLimit[0m is used instead.[m
[m
       fetch.prune[m
           If true, fetch will automatically[m
[7mnfig(1) line 3608 (press h for help or q to quit)[27m[K[K           behave as if the [1m--prune[0m option was[m
           given on the command line. See also[m
           [1mremote.<name>.prune[0m and the PRUNING[m
           section of [1mgit-fetch[0m(1).[m
[m
       fetch.pruneTags[m
           If true, fetch will automatically[m
           behave as if the[m
           [1mrefs/tags/*:refs/tags/*[0m refspec was[m
           provided when pruning, if not set[m
           already. This allows for setting both[m
           this option and [1mfetch.prune[0m to[m
           maintain a 1=1 mapping to upstream[m
           refs. See also [1mremote.<name>.pruneTags[0m[m
           and the PRUNING section of [1mgit-[0m[m
           [1mfetch[0m(1).[m
[m
       fetch.output[m
           Control how ref update status is[m
           printed. Valid values are [1mfull[0m and[m
           [1mcompact[0m. Default value is [1mfull[0m. See[m
           section OUTPUT in [1mgit-fetch[0m(1) for[m
           detail.[m
[m
       fetch.negotiationAlgorithm[m
           Control how information about the[m
           commits in the local repository is[m
           sent when negotiating the contents of[m
           the packfile to be sent by the server.[m
           Set to "skipping" to use an algorithm[m
           that skips commits in an effort to[m
           converge faster, but may result in a[m
           larger-than-necessary packfile; or set[m
           to "noop" to not send any information[m
           at all, which will almost certainly[m
           result in a larger-than-necessary[m
           packfile, but will skip the[m
           negotiation step. The default is[m
           "default" which instructs Git to use[m
           the default algorithm that never skips[m
           commits (unless the server has[m
           acknowledged it or one of its[m
           descendants). If [1mfeature.experimental[0m[m
           is enabled, then this setting defaults[m
[7mnfig(1) line 3652 (press h for help or q to quit)[27m[K[K           to "skipping". Unknown values will[m
           cause [4mgit[24m [4mfetch[24m to error out.[m
[m
           See also the [1m--negotiate-only[0m and[m
           [1m--negotiation-tip[0m options to [1mgit-[0m[m
           [1mfetch[0m(1).[m
[m
       fetch.showForcedUpdates[m
           Set to false to enable[m
           [1m--no-show-forced-updates[0m in [1mgit-[0m[m
           [1mfetch[0m(1) and [1mgit-pull[0m(1) commands.[m
           Defaults to true.[m
[m
       fetch.parallel[m
           Specifies the maximal number of fetch[m
           operations to be run in parallel at a[m
           time (submodules, or remotes when the[m
           [1m--multiple[0m option of [1mgit-fetch[0m(1) is[m
           in effect).[m
[m
           A value of 0 will give some reasonable[m
           default. If unset, it defaults to 1.[m
[m
           For submodules, this setting can be[m
           overridden using the[m
           [1msubmodule.fetchJobs[0m config setting.[m
[m
       fetch.writeCommitGraph[m
           Set to true to write a commit-graph[m
           after every [1mgit[0m [1mfetch[0m command that[m
           downloads a pack-file from a remote.[m
           Using the [1m--split[0m option, most[m
           executions will create a very small[m
           commit-graph file on top of the[m
           existing commit-graph file(s).[m
           Occasionally, these files will merge[m
           and the write may take longer. Having[m
           an updated commit-graph file helps[m
           performance of many Git commands,[m
           including [1mgit[0m [1mmerge-base[0m, [1mgit[0m [1mpush[0m [1m-f[0m,[m
           and [1mgit[0m [1mlog[0m [1m--graph[0m. Defaults to[m
           false.[m
[m
       format.attach[m
[7mnfig(1) line 3696 (press h for help or q to quit)[27m[K[K           Enable multipart/mixed attachments as[m
           the default for [4mformat-patch[24m. The[m
           value can also be a double quoted[m
           string which will enable attachments[m
           as the default and set the value as[m
           the boundary. See the --attach option[m
           in [1mgit-format-patch[0m(1).[m
[m
       format.from[m
           Provides the default value for the[m
           [1m--from[0m option to format-patch. Accepts[m
           a boolean value, or a name and email[m
           address. If false, format-patch[m
           defaults to [1m--no-from[0m, using commit[m
           authors directly in the "From:" field[m
           of patch mails. If true, format-patch[m
           defaults to [1m--from[0m, using your[m
           committer identity in the "From:"[m
           field of patch mails and including a[m
           "From:" field in the body of the patch[m
           mail if different. If set to a[m
           non-boolean value, format-patch uses[m
           that value instead of your committer[m
           identity. Defaults to false.[m
[m
       format.numbered[m
           A boolean which can enable or disable[m
           sequence numbers in patch subjects. It[m
           defaults to "auto" which enables it[m
           only if there is more than one patch.[m
           It can be enabled or disabled for all[m
           messages by setting it to "true" or[m
           "false". See --numbered option in [1mgit-[0m[m
           [1mformat-patch[0m(1).[m
[m
       format.headers[m
           Additional email headers to include in[m
           a patch to be submitted by mail. See[m
           [1mgit-format-patch[0m(1).[m
[m
       format.to, format.cc[m
           Additional recipients to include in a[m
           patch to be submitted by mail. See the[m
           --to and --cc options in [1mgit-format-[0m[m
[7mnfig(1) line 3740 (press h for help or q to quit)[27m[K[K           [1mpatch[0m(1).[m
[m
       format.subjectPrefix[m
           The default for format-patch is to[m
           output files with the [4m[PATCH][24m subject[m
           prefix. Use this variable to change[m
           that prefix.[m
[m
       format.coverFromDescription[m
           The default mode for format-patch to[m
           determine which parts of the cover[m
           letter will be populated using the[m
           branch’s description. See the[m
           [1m--cover-from-description[0m option in[m
           [1mgit-format-patch[0m(1).[m
[m
       format.signature[m
           The default for format-patch is to[m
           output a signature containing the Git[m
           version number. Use this variable to[m
           change that default. Set this variable[m
           to the empty string ("") to suppress[m
           signature generation.[m
[m
       format.signatureFile[m
           Works just like format.signature[m
           except the contents of the file[m
           specified by this variable will be[m
           used as the signature.[m
[m
       format.suffix[m
           The default for format-patch is to[m
           output files with the suffix [1m.patch[0m.[m
           Use this variable to change that[m
           suffix (make sure to include the dot[m
           if you want it).[m
[m
       format.encodeEmailHeaders[m
           Encode email headers that have[m
           non-ASCII characters with "Q-encoding"[m
           (described in RFC 2047) for email[m
           transmission. Defaults to true.[m
[m
       format.pretty[m
[7mnfig(1) line 3784 (press h for help or q to quit)[27m[K[K           The default pretty format for[m
           log/show/whatchanged command, See [1mgit-[0m[m
           [1mlog[0m(1), [1mgit-show[0m(1), [1mgit-[0m[m
           [1mwhatchanged[0m(1).[m
[m
       format.thread[m
           The default threading style for [4mgit[24m[m
           [4mformat-patch[24m. Can be a boolean value,[m
           or [1mshallow[0m or [1mdeep[0m.  [1mshallow[0m threading[m
           makes every mail a reply to the head[m
           of the series, where the head is[m
           chosen from the cover letter, the[m
           [1m--in-reply-to[0m, and the first patch[m
           mail, in this order.  [1mdeep[0m threading[m
           makes every mail a reply to the[m
           previous one. A true boolean value is[m
           the same as [1mshallow[0m, and a false value[m
           disables threading.[m
[m
       format.signOff[m
           A boolean value which lets you enable[m
           the [1m-s/--signoff[0m option of[m
           format-patch by default.  [1mNote:[0m Adding[m
           the [1mSigned-off-by[0m trailer to a patch[m
           should be a conscious act and means[m
           that you certify you have the rights[m
           to submit this work under the same[m
           open source license. Please see the[m
           [4mSubmittingPatches[24m document for further[m
           discussion.[m
[m
       format.coverLetter[m
           A boolean that controls whether to[m
           generate a cover-letter when[m
           format-patch is invoked, but in[m
           addition can be set to "auto", to[m
           generate a cover-letter only when[m
           there’s more than one patch. Default[m
           is false.[m
[m
       format.outputDirectory[m
           Set a custom directory to store the[m
           resulting files instead of the current[m
           working directory. All directory[m
[7mnfig(1) line 3828 (press h for help or q to quit)[27m[K[K           components will be created.[m
[m
       format.filenameMaxLength[m
           The maximum length of the output[m
           filenames generated by the[m
           [1mformat-patch[0m command; defaults to 64.[m
           Can be overridden by the[m
           [1m--filename-max-length=<n>[0m command line[m
           option.[m
[m
       format.useAutoBase[m
           A boolean value which lets you enable[m
           the [1m--base=auto[0m option of format-patch[m
           by default. Can also be set to[m
           "whenAble" to allow enabling[m
           [1m--base=auto[0m if a suitable base is[m
           available, but to skip adding base[m
           info otherwise without the format[m
           dying.[m
[m
       format.notes[m
           Provides the default value for the[m
           [1m--notes[0m option to format-patch.[m
           Accepts a boolean value, or a ref[m
           which specifies where to get notes. If[m
           false, format-patch defaults to[m
           [1m--no-notes[0m. If true, format-patch[m
           defaults to [1m--notes[0m. If set to a[m
           non-boolean value, format-patch[m
           defaults to [1m--notes=<ref>[0m, where [1mref[0m[m
           is the non-boolean value. Defaults to[m
           false.[m
[m
           If one wishes to use the ref[m
           [1mref/notes/true[0m, please use that[m
           literal instead.[m
[m
           This configuration can be specified[m
           multiple times in order to allow[m
           multiple notes refs to be included. In[m
           that case, it will behave similarly to[m
           multiple [1m--[no-]notes[=][0m options[m
           passed in. That is, a value of [1mtrue[0m[m
           will show the default notes, a value[m
[7mnfig(1) line 3872 (press h for help or q to quit)[27m[K[K           of [1m<ref>[0m will also show notes from[m
           that notes ref and a value of [1mfalse[0m[m
           will negate previous configurations[m
           and not show notes.[m
[m
           For example,[m
[m
               [format][m
                       notes = true[m
                       notes = foo[m
                       notes = false[m
                       notes = bar[m
[m
           will only show notes from[m
           [1mrefs/notes/bar[0m.[m
[m
       filter.<driver>.clean[m
           The command which is used to convert[m
           the content of a worktree file to a[m
           blob upon checkin. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       filter.<driver>.smudge[m
           The command which is used to convert[m
           the content of a blob object to a[m
           worktree file upon checkout. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       fsck.<msg-id>[m
           During fsck git may find issues with[m
           legacy data which wouldn’t be[m
           generated by current versions of git,[m
           and which wouldn’t be sent over the[m
           wire if [1mtransfer.fsckObjects[0m was set.[m
           This feature is intended to support[m
           working with legacy repositories[m
           containing such data.[m
[m
           Setting [1mfsck.<msg-id>[0m will be picked[m
           up by [1mgit-fsck[0m(1), but to accept[m
           pushes of such data set[m
           [1mreceive.fsck.<msg-id>[0m instead, or to[m
           clone or fetch it set[m
           [1mfetch.fsck.<msg-id>[0m.[m
[7mnfig(1) line 3916 (press h for help or q to quit)[27m[K[K[m
           The rest of the documentation[m
           discusses [1mfsck.*[0m  for brevity, but the[m
           same applies for the corresponding[m
           [1mreceive.fsck.*[0m  and [1mfetch.<msg-id>.*[0m.[m
           variables.[m
[m
           Unlike variables like [1mcolor.ui[0m and[m
           [1mcore.editor[0m the [1mreceive.fsck.<msg-id>[0m[m
           and [1mfetch.fsck.<msg-id>[0m variables will[m
           not fall back on the [1mfsck.<msg-id>[0m[m
           configuration if they aren’t set. To[m
           uniformly configure the same fsck[m
           settings in different circumstances[m
           all three of them they must all set to[m
           the same values.[m
[m
           When [1mfsck.<msg-id>[0m is set, errors can[m
           be switched to warnings and vice versa[m
           by configuring the [1mfsck.<msg-id>[0m[m
           setting where the [1m<msg-id>[0m is the fsck[m
           message ID and the value is one of[m
           [1merror[0m, [1mwarn[0m or [1mignore[0m. For[m
           convenience, fsck prefixes the[m
           error/warning with the message ID,[m
           e.g. "missingEmail: invalid[m
           author/committer line - missing email"[m
           means that setting [1mfsck.missingEmail[0m [1m=[0m[m
           [1mignore[0m will hide that issue.[m
[m
           In general, it is better to enumerate[m
           existing objects with problems with[m
           [1mfsck.skipList[0m, instead of listing the[m
           kind of breakages these problematic[m
           objects share to be ignored, as doing[m
           the latter will allow new instances of[m
           the same breakages go unnoticed.[m
[m
           Setting an unknown [1mfsck.<msg-id>[0m value[m
           will cause fsck to die, but doing the[m
           same for [1mreceive.fsck.<msg-id>[0m and[m
           [1mfetch.fsck.<msg-id>[0m will only cause[m
           git to warn.[m
[m
[7mnfig(1) line 3960 (press h for help or q to quit)[27m[K[K       fsck.skipList[m
           The path to a list of object names[m
           (i.e. one unabbreviated SHA-1 per[m
           line) that are known to be broken in a[m
           non-fatal way and should be ignored.[m
           On versions of Git 2.20 and later[m
           comments ([4m#[24m), empty lines, and any[m
           leading and trailing whitespace is[m
           ignored. Everything but a SHA-1 per[m
           line will error out on older versions.[m
[m
           This feature is useful when an[m
           established project should be accepted[m
           despite early commits containing[m
           errors that can be safely ignored such[m
           as invalid committer email addresses.[m
           Note: corrupt objects cannot be[m
           skipped with this setting.[m
[m
           Like [1mfsck.<msg-id>[0m this variable has[m
           corresponding [1mreceive.fsck.skipList[0m[m
           and [1mfetch.fsck.skipList[0m variants.[m
[m
           Unlike variables like [1mcolor.ui[0m and[m
           [1mcore.editor[0m the [1mreceive.fsck.skipList[0m[m
           and [1mfetch.fsck.skipList[0m variables will[m
           not fall back on the [1mfsck.skipList[0m[m
           configuration if they aren’t set. To[m
           uniformly configure the same fsck[m
           settings in different circumstances[m
           all three of them they must all set to[m
           the same values.[m
[m
           Older versions of Git (before 2.20)[m
           documented that the object names list[m
           should be sorted. This was never a[m
           requirement, the object names could[m
           appear in any order, but when reading[m
           the list we tracked whether the list[m
           was sorted for the purposes of an[m
           internal binary search implementation,[m
           which could save itself some work with[m
           an already sorted list. Unless you had[m
           a humongous list there was no reason[m
[7mnfig(1) line 4004 (press h for help or q to quit)[27m[K[K           to go out of your way to pre-sort the[m
           list. After Git version 2.20 a hash[m
           implementation is used instead, so[m
           there’s now no reason to pre-sort the[m
           list.[m
[m
       gc.aggressiveDepth[m
           The depth parameter used in the delta[m
           compression algorithm used by [4mgit[24m [4mgc[24m[m
           [4m--aggressive[24m. This defaults to 50,[m
           which is the default for the [1m--depth[0m[m
           option when [1m--aggressive[0m isn’t in use.[m
[m
           See the documentation for the [1m--depth[0m[m
           option in [1mgit-repack[0m(1) for more[m
           details.[m
[m
       gc.aggressiveWindow[m
           The window size parameter used in the[m
           delta compression algorithm used by[m
           [4mgit[24m [4mgc[24m [4m--aggressive[24m. This defaults to[m
           250, which is a much more aggressive[m
           window size than the default [1m--window[0m[m
           of 10.[m
[m
           See the documentation for the [1m--window[0m[m
           option in [1mgit-repack[0m(1) for more[m
           details.[m
[m
       gc.auto[m
           When there are approximately more than[m
           this many loose objects in the[m
           repository, [1mgit[0m [1mgc[0m [1m--auto[0m will pack[m
           them. Some Porcelain commands use this[m
           command to perform a light-weight[m
           garbage collection from time to time.[m
           The default value is 6700.[m
[m
           Setting this to 0 disables not only[m
           automatic packing based on the number[m
           of loose objects, but any other[m
           heuristic [1mgit[0m [1mgc[0m [1m--auto[0m will otherwise[m
           use to determine if there’s work to[m
           do, such as [1mgc.autoPackLimit[0m.[m
[7mnfig(1) line 4048 (press h for help or q to quit)[27m[K[K[m
       gc.autoPackLimit[m
           When there are more than this many[m
           packs that are not marked with [1m*.keep[0m[m
           file in the repository, [1mgit[0m [1mgc[0m [1m--auto[0m[m
           consolidates them into one larger[m
           pack. The default value is 50. Setting[m
           this to 0 disables it. Setting [1mgc.auto[0m[m
           to 0 will also disable this.[m
[m
           See the [1mgc.bigPackThreshold[0m[m
           configuration variable below. When in[m
           use, it’ll affect how the auto pack[m
           limit works.[m
[m
       gc.autoDetach[m
           Make [1mgit[0m [1mgc[0m [1m--auto[0m return immediately[m
           and run in background if the system[m
           supports it. Default is true.[m
[m
       gc.bigPackThreshold[m
           If non-zero, all packs larger than[m
           this limit are kept when [1mgit[0m [1mgc[0m is[m
           run. This is very similar to[m
           [1m--keep-largest-pack[0m except that all[m
           packs that meet the threshold are[m
           kept, not just the largest pack.[m
           Defaults to zero. Common unit suffixes[m
           of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
           Note that if the number of kept packs[m
           is more than gc.autoPackLimit, this[m
           configuration variable is ignored, all[m
           packs except the base pack will be[m
           repacked. After this the number of[m
           packs should go below gc.autoPackLimit[m
           and gc.bigPackThreshold should be[m
           respected again.[m
[m
           If the amount of memory estimated for[m
           [1mgit[0m [1mrepack[0m to run smoothly is not[m
           available and [1mgc.bigPackThreshold[0m is[m
           not set, the largest pack will also be[m
           excluded (this is the equivalent of[m
[7mnfig(1) line 4092 (press h for help or q to quit)[27m[K[K           running [1mgit[0m [1mgc[0m with[m
           [1m--keep-largest-pack[0m).[m
[m
       gc.writeCommitGraph[m
           If true, then gc will rewrite the[m
           commit-graph file when [1mgit-gc[0m(1) is[m
           run. When using [1mgit[0m [1mgc[0m [1m--auto[0m the[m
           commit-graph will be updated if[m
           housekeeping is required. Default is[m
           true. See [1mgit-commit-graph[0m(1) for[m
           details.[m
[m
       gc.logExpiry[m
           If the file gc.log exists, then [1mgit[0m [1mgc[0m[m
           [1m--auto[0m will print its content and exit[m
           with status zero instead of running[m
           unless that file is more than[m
           [4mgc.logExpiry[24m old. Default is "1.day".[m
           See [1mgc.pruneExpire[0m for more ways to[m
           specify its value.[m
[m
       gc.packRefs[m
           Running [1mgit[0m [1mpack-refs[0m in a repository[m
           renders it unclonable by Git versions[m
           prior to 1.5.1.2 over dumb transports[m
           such as HTTP. This variable determines[m
           whether [4mgit[24m [4mgc[24m runs [1mgit[0m [1mpack-refs[0m.[m
           This can be set to [1mnotbare[0m to enable[m
           it within all non-bare repos or it can[m
           be set to a boolean value. The default[m
           is [1mtrue[0m.[m
[m
       gc.pruneExpire[m
           When [4mgit[24m [4mgc[24m is run, it will call [4mprune[24m[m
           [4m--expire[24m [4m2.weeks.ago[24m. Override the[m
           grace period with this config[m
           variable. The value "now" may be used[m
           to disable this grace period and[m
           always prune unreachable objects[m
           immediately, or "never" may be used to[m
           suppress pruning. This feature helps[m
           prevent corruption when [4mgit[24m [4mgc[24m runs[m
           concurrently with another process[m
           writing to the repository; see the[m
[7mnfig(1) line 4136 (press h for help or q to quit)[27m[K[K           "NOTES" section of [1mgit-gc[0m(1).[m
[m
       gc.worktreePruneExpire[m
           When [4mgit[24m [4mgc[24m is run, it calls [4mgit[24m[m
           [4mworktree[24m [4mprune[24m [4m--expire[24m [4m3.months.ago[24m.[m
           This config variable can be used to[m
           set a different grace period. The[m
           value "now" may be used to disable the[m
           grace period and prune[m
           [1m$GIT_DIR/worktrees[0m immediately, or[m
           "never" may be used to suppress[m
           pruning.[m
[m
       gc.reflogExpire, gc.<pattern>.reflogExpire[m
           [4mgit[24m [4mreflog[24m [4mexpire[24m removes reflog[m
           entries older than this time; defaults[m
           to 90 days. The value "now" expires[m
           all entries immediately, and "never"[m
           suppresses expiration altogether. With[m
           "<pattern>" (e.g. "refs/stash") in the[m
           middle the setting applies only to the[m
           refs that match the <pattern>.[m
[m
       gc.reflogExpireUnreachable,[m
       gc.<pattern>.reflogExpireUnreachable[m
           [4mgit[24m [4mreflog[24m [4mexpire[24m removes reflog[m
           entries older than this time and are[m
           not reachable from the current tip;[m
           defaults to 30 days. The value "now"[m
           expires all entries immediately, and[m
           "never" suppresses expiration[m
           altogether. With "<pattern>" (e.g.[m
           "refs/stash") in the middle, the[m
           setting applies only to the refs that[m
           match the <pattern>.[m
[m
           These types of entries are generally[m
           created as a result of using [1mgit[0m[m
           [1mcommit[0m [1m--amend[0m or [1mgit[0m [1mrebase[0m and are[m
           the commits prior to the amend or[m
           rebase occurring. Since these changes[m
           are not part of the current project[m
           most users will want to expire them[m
           sooner, which is why the default is[m
[7mnfig(1) line 4180 (press h for help or q to quit)[27m[K[K           more aggressive than [1mgc.reflogExpire[0m.[m
[m
       gc.rerereResolved[m
           Records of conflicted merge you[m
           resolved earlier are kept for this[m
           many days when [4mgit[24m [4mrerere[24m [4mgc[24m is run.[m
           You can also use more human-readable[m
           "1.month.ago", etc. The default is 60[m
           days. See [1mgit-rerere[0m(1).[m
[m
       gc.rerereUnresolved[m
           Records of conflicted merge you have[m
           not resolved are kept for this many[m
           days when [4mgit[24m [4mrerere[24m [4mgc[24m is run. You[m
           can also use more human-readable[m
           "1.month.ago", etc. The default is 15[m
           days. See [1mgit-rerere[0m(1).[m
[m
       gitcvs.commitMsgAnnotation[m
           Append this string to each commit[m
           message. Set to empty string to[m
           disable this feature. Defaults to "via[m
           git-CVS emulator".[m
[m
       gitcvs.enabled[m
           Whether the CVS server interface is[m
           enabled for this repository. See [1mgit-[0m[m
           [1mcvsserver[0m(1).[m
[m
       gitcvs.logFile[m
           Path to a log file where the CVS[m
           server interface well... logs various[m
           stuff. See [1mgit-cvsserver[0m(1).[m
[m
       gitcvs.usecrlfattr[m
           If true, the server will look up the[m
           end-of-line conversion attributes for[m
           files to determine the [1m-k[0m modes to[m
           use. If the attributes force Git to[m
           treat a file as text, the [1m-k[0m mode will[m
           be left blank so CVS clients will[m
           treat it as text. If they suppress[m
           text conversion, the file will be set[m
           with [4m-kb[24m mode, which suppresses any[m
[7mnfig(1) line 4224 (press h for help or q to quit)[27m[K[K           newline munging the client might[m
           otherwise do. If the attributes do not[m
           allow the file type to be determined,[m
           then [1mgitcvs.allBinary[0m is used. See[m
           [1mgitattributes[0m(5).[m
[m
       gitcvs.allBinary[m
           This is used if [1mgitcvs.usecrlfattr[0m[m
           does not resolve the correct [4m-kb[24m mode[m
           to use. If true, all unresolved files[m
           are sent to the client in mode [4m-kb[24m.[m
           This causes the client to treat them[m
           as binary files, which suppresses any[m
           newline munging it otherwise might do.[m
           Alternatively, if it is set to[m
           "guess", then the contents of the file[m
           are examined to decide if it is[m
           binary, similar to [1mcore.autocrlf[0m.[m
[m
       gitcvs.dbName[m
           Database used by git-cvsserver to[m
           cache revision information derived[m
           from the Git repository. The exact[m
           meaning depends on the used database[m
           driver, for SQLite (which is the[m
           default driver) this is a filename.[m
           Supports variable substitution (see[m
           [1mgit-cvsserver[0m(1) for details). May not[m
           contain semicolons ([1m;[0m). Default:[m
           [4m%Ggitcvs.%m.sqlite[24m[m
[m
       gitcvs.dbDriver[m
           Used Perl DBI driver. You can specify[m
           any available driver for this here,[m
           but it might not work. git-cvsserver[m
           is tested with [4mDBD::SQLite[24m, reported[m
           to work with [4mDBD::Pg[24m, and reported [1mnot[0m[m
           to work with [4mDBD::mysql[24m. Experimental[m
           feature. May not contain double colons[m
           ([1m:[0m). Default: [4mSQLite[24m. See [1mgit-[0m[m
           [1mcvsserver[0m(1).[m
[m
       gitcvs.dbUser, gitcvs.dbPass[m
           Database user and password. Only[m
[7mnfig(1) line 4268 (press h for help or q to quit)[27m[K[K           useful if setting [1mgitcvs.dbDriver[0m,[m
           since SQLite has no concept of[m
           database users and/or passwords.[m
           [4mgitcvs.dbUser[24m supports variable[m
           substitution (see [1mgit-cvsserver[0m(1) for[m
           details).[m
[m
       gitcvs.dbTableNamePrefix[m
           Database table name prefix. Prepended[m
           to the names of any database tables[m
           used, allowing a single database to be[m
           used for several repositories.[m
           Supports variable substitution (see[m
           [1mgit-cvsserver[0m(1) for details). Any[m
           non-alphabetic characters will be[m
           replaced with underscores.[m
[m
       All gitcvs variables except for[m
       [1mgitcvs.usecrlfattr[0m and [1mgitcvs.allBinary[0m[m
       can also be specified as[m
       [4mgitcvs.<access_method>.<varname>[24m (where[m
       [4maccess_method[24m is one of "ext" and[m
       "pserver") to make them apply only for the[m
       given access method.[m
[m
       gitweb.category, gitweb.description,[m
       gitweb.owner, gitweb.url[m
           See [1mgitweb[0m(1) for description.[m
[m
       gitweb.avatar, gitweb.blame, gitweb.grep,[m
       gitweb.highlight, gitweb.patches,[m
       gitweb.pickaxe, gitweb.remote_heads,[m
       gitweb.showSizes, gitweb.snapshot[m
           See [1mgitweb.conf[0m(5) for description.[m
[m
       grep.lineNumber[m
           If set to true, enable [1m-n[0m option by[m
           default.[m
[m
       grep.column[m
           If set to true, enable the [1m--column[0m[m
           option by default.[m
[m
       grep.patternType[m
[7mnfig(1) line 4312 (press h for help or q to quit)[27m[K[K           Set the default matching behavior.[m
           Using a value of [4mbasic[24m, [4mextended[24m,[m
           [4mfixed[24m, or [4mperl[24m will enable the[m
           [1m--basic-regexp[0m, [1m--extended-regexp[0m,[m
           [1m--fixed-strings[0m, or [1m--perl-regexp[0m[m
           option accordingly, while the value[m
           [4mdefault[24m will return to the default[m
           matching behavior.[m
[m
       grep.extendedRegexp[m
           If set to true, enable[m
           [1m--extended-regexp[0m option by default.[m
           This option is ignored when the[m
           [1mgrep.patternType[0m option is set to a[m
           value other than [4mdefault[24m.[m
[m
       grep.threads[m
           Number of grep worker threads to use.[m
           See [1mgrep.threads[0m in [1mgit-grep[0m(1) for[m
           more information.[m
[m
       grep.fallbackToNoIndex[m
           If set to true, fall back to git grep[m
           --no-index if git grep is executed[m
           outside of a git repository. Defaults[m
           to false.[m
[m
       gpg.program[m
           Use this custom program instead of[m
           "[1mgpg[0m" found on [1m$PATH[0m when making or[m
           verifying a PGP signature. The program[m
           must support the same command-line[m
           interface as GPG, namely, to verify a[m
           detached signature, "[1mgpg[0m [1m--verify[0m[m
           [1m$signature[0m [1m-[0m [1m<$file[0m" is run, and the[m
           program is expected to signal a good[m
           signature by exiting with code 0, and[m
           to generate an ASCII-armored detached[m
           signature, the standard input of "[1mgpg[0m[m
           [1m-bsau[0m [1m$key[0m" is fed with the contents[m
           to be signed, and the program is[m
           expected to send the result to its[m
           standard output.[m
[m
[7mnfig(1) line 4356 (press h for help or q to quit)[27m[K[K       gpg.format[m
           Specifies which key format to use when[m
           signing with [1m--gpg-sign[0m. Default is[m
           "openpgp". Other possible values are[m
           "x509", "ssh".[m
[m
       gpg.<format>.program[m
           Use this to customize the program used[m
           for the signing format you chose. (see[m
           [1mgpg.program[0m and [1mgpg.format[0m)[m
           [1mgpg.program[0m can still be used as a[m
           legacy synonym for[m
           [1mgpg.openpgp.program[0m. The default value[m
           for [1mgpg.x509.program[0m is "gpgsm" and[m
           [1mgpg.ssh.program[0m is "ssh-keygen".[m
[m
       gpg.minTrustLevel[m
           Specifies a minimum trust level for[m
           signature verification. If this option[m
           is unset, then signature verification[m
           for merge operations require a key[m
           with at least [1mmarginal[0m trust. Other[m
           operations that perform signature[m
           verification require a key with at[m
           least [1mundefined[0m trust. Setting this[m
           option overrides the required[m
           trust-level for all operations.[m
           Supported values, in increasing order[m
           of significance:[m
[m
           •   [1mundefined[0m[m
[m
           •   [1mnever[0m[m
[m
           •   [1mmarginal[0m[m
[m
           •   [1mfully[0m[m
[m
           •   [1multimate[0m[m
[m
       gpg.ssh.defaultKeyCommand: This command[m
       that will be run when user.signingkey is[m
       not set and a ssh signature is requested.[m
       On successful exit a valid ssh public key[m
[7mnfig(1) line 4400 (press h for help or q to quit)[27m[K[K       is expected in the first line of its[m
       output. To automatically use the first[m
       available key from your ssh-agent set this[m
       to "ssh-add -L".[m
[m
       gpg.ssh.allowedSignersFile[m
           A file containing ssh public keys[m
           which you are willing to trust. The[m
           file consists of one or more lines of[m
           principals followed by an ssh public[m
           key. e.g.:[m
           [1muser1@example.com[0m[1],[1muser2@example.com[0m[2[m ][m
           ssh-rsa AAAAX1... See ssh-keygen(1)[m
           "ALLOWED SIGNERS" for details. The[m
           principal is only used to identify the[m
           key and is available when verifying a[m
           signature.[m
[m
           SSH has no concept of trust levels[m
           like gpg does. To be able to[m
           differentiate between valid signatures[m
           and trusted signatures the trust level[m
           of a signature verification is set to[m
           [1mfully[0m when the public key is present[m
           in the allowedSignersFile. Otherwise[m
           the trust level is [1mundefined[0m and git[m
           verify-commit/tag will fail.[m
[m
           This file can be set to a location[m
           outside of the repository and every[m
           developer maintains their own trust[m
           store. A central repository server[m
           could generate this file automatically[m
           from ssh keys with push access to[m
           verify the code against. In a[m
           corporate setting this file is[m
           probably generated at a global[m
           location from automation that already[m
           handles developer ssh keys.[m
[m
           A repository that only allows signed[m
           commits can store the file in the[m
           repository itself using a path[m
[7mnfig(1) line 4444 (press h for help or q to quit)[27m[K[K           relative to the top-level of the[m
           working tree. This way only committers[m
           with an already valid key can add or[m
           change keys in the keyring.[m
[m
           Using a SSH CA key with the[m
           cert-authority option (see[m
           ssh-keygen(1) "CERTIFICATES") is also[m
           valid.[m
[m
       gpg.ssh.revocationFile[m
           Either a SSH KRL or a list of revoked[m
           public keys (without the principal[m
           prefix). See ssh-keygen(1) for[m
           details. If a public key is found in[m
           this file then it will always be[m
           treated as having trust level "never"[m
           and signatures will show as invalid.[m
[m
       gui.commitMsgWidth[m
           Defines how wide the commit message[m
           window is in the [1mgit-gui[0m(1). "75" is[m
           the default.[m
[m
       gui.diffContext[m
           Specifies how many context lines[m
           should be used in calls to diff made[m
           by the [1mgit-gui[0m(1). The default is "5".[m
[m
       gui.displayUntracked[m
           Determines if [1mgit-gui[0m(1) shows[m
           untracked files in the file list. The[m
           default is "true".[m
[m
       gui.encoding[m
           Specifies the default character[m
           encoding to use for displaying of file[m
           contents in [1mgit-gui[0m(1) and [1mgitk[0m(1). It[m
           can be overridden by setting the[m
           [4mencoding[24m attribute for relevant files[m
           (see [1mgitattributes[0m(5)). If this option[m
           is not set, the tools default to the[m
           locale encoding.[m
[m
[7mnfig(1) line 4487 (press h for help or q to quit)[27m[K[K       gui.matchTrackingBranch[m
           Determines if new branches created[m
           with [1mgit-gui[0m(1) should default to[m
           tracking remote branches with matching[m
           names or not. Default: "false".[m
[m
       gui.newBranchTemplate[m
           Is used as suggested name when[m
           creating new branches using the [1mgit-[0m[m
           [1mgui[0m(1).[m
[m
       gui.pruneDuringFetch[m
           "true" if [1mgit-gui[0m(1) should prune[m
           remote-tracking branches when[m
           performing a fetch. The default value[m
           is "false".[m
[m
       gui.trustmtime[m
           Determines if [1mgit-gui[0m(1) should trust[m
           the file modification timestamp or[m
           not. By default the timestamps are not[m
           trusted.[m
[m
       gui.spellingDictionary[m
           Specifies the dictionary used for[m
           spell checking commit messages in the[m
           [1mgit-gui[0m(1). When set to "none" spell[m
           checking is turned off.[m
[m
       gui.fastCopyBlame[m
           If true, [4mgit[24m [4mgui[24m [4mblame[24m uses [1m-C[0m instead[m
           of [1m-C[0m [1m-C[0m for original location[m
           detection. It makes blame[m
           significantly faster on huge[m
           repositories at the expense of less[m
           thorough copy detection.[m
[m
       gui.copyBlameThreshold[m
           Specifies the threshold to use in [4mgit[24m[m
           [4mgui[24m [4mblame[24m original location detection,[m
           measured in alphanumeric characters.[m
           See the [1mgit-blame[0m(1) manual for more[m
           information on copy detection.[m
[m
[7mnfig(1) line 4531 (press h for help or q to quit)[27m[K[K       gui.blamehistoryctx[m
           Specifies the radius of history[m
           context in days to show in [1mgitk[0m(1) for[m
           the selected commit, when the [1mShow[0m[m
           [1mHistory[0m [1mContext[0m menu item is invoked[m
           from [4mgit[24m [4mgui[24m [4mblame[24m. If this variable[m
           is set to zero, the whole history is[m
           shown.[m
[m
       guitool.<name>.cmd[m
           Specifies the shell command line to[m
           execute when the corresponding item of[m
           the [1mgit-gui[0m(1) [1mTools[0m menu is invoked.[m
           This option is mandatory for every[m
           tool. The command is executed from the[m
           root of the working directory, and in[m
           the environment it receives the name[m
           of the tool as [1mGIT_GUITOOL[0m, the name[m
           of the currently selected file as[m
           [4mFILENAME[24m, and the name of the current[m
           branch as [4mCUR_BRANCH[24m (if the head is[m
           detached, [4mCUR_BRANCH[24m is empty).[m
[m
       guitool.<name>.needsFile[m
           Run the tool only if a diff is[m
           selected in the GUI. It guarantees[m
           that [4mFILENAME[24m is not empty.[m
[m
       guitool.<name>.noConsole[m
           Run the command silently, without[m
           creating a window to display its[m
           output.[m
[m
       guitool.<name>.noRescan[m
           Don’t rescan the working directory for[m
           changes after the tool finishes[m
           execution.[m
[m
       guitool.<name>.confirm[m
           Show a confirmation dialog before[m
           actually running the tool.[m
[m
       guitool.<name>.argPrompt[m
           Request a string argument from the[m
[7mnfig(1) line 4575 (press h for help or q to quit)[27m[K[K[HM[m
[HM           information on copy detection.[m
[HM           See the [1mgit-blame[0m(1) manual for more[m
[HM           measured in alphanumeric characters.[m
[HM           [4mgui[24m [4mblame[24m original location detection,[m
[HM           Specifies the threshold to use in [4mgit[24m[m
[HM       gui.copyBlameThreshold[m
[HM[m
[HM           thorough copy detection.[m
[HM           repositories at the expense of less[m
[HM           significantly faster on huge[m
[HM           detection. It makes blame[m
[HM           of [1m-C[0m [1m-C[0m for original location[m
[HM           If true, [4mgit[24m [4mgui[24m [4mblame[24m uses [1m-C[0m instead[m
[HM       gui.fastCopyBlame[m
[HM[m
[HM           checking is turned off.[m
[HM           [1mgit-gui[0m(1). When set to "none" spell[m
[HM           spell checking commit messages in the[m
[HM           Specifies the dictionary used for[m
[HM       gui.spellingDictionary[m
[HM[m
[HM           trusted.[m
[HM           not. By default the timestamps are not[m
[HM           the file modification timestamp or[m
[HM           Determines if [1mgit-gui[0m(1) should trust[m
[HM       gui.trustmtime[m
[HM[m
[HM           is "false".[m
[HM           performing a fetch. The default value[m
[HM           remote-tracking branches when[m
[HM           "true" if [1mgit-gui[0m(1) should prune[m
[HM       gui.pruneDuringFetch[m
[HM[m
[HM           [1mgui[0m(1).[m
[HM           creating new branches using the [1mgit-[0m[m
[HM           Is used as suggested name when[m
[HM       gui.newBranchTemplate[m
[HM[m
[HM           names or not. Default: "false".[m
[HM           tracking remote branches with matching[m
[HM           with [1mgit-gui[0m(1) should default to[m
[HM           Determines if new branches created[m
[HM       gui.matchTrackingBranch[m
[45;1H[K[7mnfig(1) line 4531 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git config -h
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git add - [Kh
[?2004lusage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git add --help
[?2004l[?1049h[22;0;0t[?1h=GIT-ADD(1)          Git Manual         GIT-ADD(1)[m
[m
[1mNAME[0m[m
       git-add - Add file contents to the index[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4madd[24m [--verbose | -v] [--dry-run | -n] [-[m -force | -f] [--interactive | -i] [--patch | -p][m
                 [--edit | -e] [--[no-]all | --[no-[m ]ignore-removal | [--update | -u]] [--sparse][m
                 [--intent-to-add | -N] [--refresh][m  [--ignore-errors] [--ignore-missing] [--renormaliz[m e][m
                 [--chmod=(+|-)x] [--pathspec-from-[m file=<file> [--pathspec-file-nul]][m
                 [--] [<pathspec>...][m
[m
[1mDESCRIPTION[0m[m
       This command updates the index using the[m
       current content found in the working tree,[m
       to prepare the content staged for the next[m
       commit. It typically adds the current[m
       content of existing paths as a whole, but[m
       with some options it can also be used to[m
       add content with only part of the changes[m
       made to the working tree files applied, or[m
       remove paths that do not exist in the[m
       working tree anymore.[m
[m
       The "index" holds a snapshot of the[m
       content of the working tree, and it is[m
       this snapshot that is taken as the[m
       contents of the next commit. Thus after[m
       making any changes to the working tree,[m
       and before running the commit command, you[m
       must use the [1madd[0m command to add any new or[m
       modified files to the index.[m
[m
       This command can be performed multiple[m
       times before a commit. It only adds the[m
       content of the specified file(s) at the[m
       time the add command is run; if you want[m
       subsequent changes included in the next[m
       commit, then you must run [1mgit[0m [1madd[0m again to[m
[7mgit-add(1) line 1 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       add the new content to the index.[m
[7mgit-add(1) line 2 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mgit-add(1) line 3 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       The [1mgit[0m [1mstatus[0m command can be used to[m
[7mgit-add(1) line 4 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       obtain a summary of which files have[m
[7mgit-add(1) line 5 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       changes that are staged for the next[m
[7mgit-add(1) line 6 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       commit.[m
[7mgit-add(1) line 7 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mgit-add(1) line 7 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       The [1mgit[0m [1madd[0m command will not add ignored[m
[7mgit-add(1) line 8 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       files by default. If any ignored files[m
[7mgit-add(1) line 8 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       were explicitly specified on the command[m
[7mgit-add(1) line 9 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       line, [1mgit[0m [1madd[0m will fail with a list of[m
[7mgit-add(1) line 9 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       ignored files. Ignored files reached by[m
[7mgit-add(1) line 9 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       directory recursion or filename globbing[m
[7mit-add(1) line 10 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       performed by Git (quote your globs before[m
[7mit-add(1) line 10 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       the shell) will be silently ignored. The[m
[7mit-add(1) line 11 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [4mgit[24m [4madd[24m command can be used to add ignored[m
[7mit-add(1) line 12 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       files with the [1m-f[0m (force) option.[m
[7mit-add(1) line 13 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mit-add(1) line 14 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       Please see [1mgit-commit[0m(1) for alternative[m
[7mit-add(1) line 15 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       ways to add content to a commit.[m
[7mit-add(1) line 16 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mit-add(1) line 17 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mOPTIONS[0m[m
[7mit-add(1) line 18 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       <pathspec>...[m
[7mit-add(1) line 19 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           Files to add content from. Fileglobs[m
[7mit-add(1) line 20 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           (e.g.  [1m*.c[0m) can be given to add all[m
[7mit-add(1) line 21 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           matching files. Also a leading[m
[7mit-add(1) line 22 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           directory name (e.g.  [1mdir[0m to add[m
[7mit-add(1) line 23 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           [1mdir/file1[0m and [1mdir/file2[0m) can be given[m
[7mit-add(1) line 24 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           to update the index to match the[m
[7mit-add(1) line 25 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           current state of the directory as a[m
[7mit-add(1) line 26 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           whole (e.g. specifying [1mdir[0m will record[m
[7mit-add(1) line 27 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           not just a file [1mdir/file1[0m modified in[m
[7mit-add(1) line 28 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           the working tree, a file [1mdir/file2[0m[m
[7mit-add(1) line 29 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           added to the working tree, but also a[m
[7mit-add(1) line 30 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           file [1mdir/file3[0m removed from the[m
[7mit-add(1) line 31 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           working tree). Note that older[m
[7mit-add(1) line 32 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           versions of Git used to ignore removed[m
[7mit-add(1) line 33 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           files; use [1m--no-all[0m option if you want[m
[7mit-add(1) line 34 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           to add modified or new files but[m
[7mit-add(1) line 35 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           ignore removed ones.[m
[7mit-add(1) line 36 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mit-add(1) line 37 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           For more details about the <pathspec>[m
[7mit-add(1) line 38 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           syntax, see the [4mpathspec[24m entry in[m
[7mit-add(1) line 39 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           [1mgitglossary[0m(7).[m
[7mit-add(1) line 40 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7mit-add(1) line 41 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       -n, --dry-run[m
[7mit-add(1) line 42 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           Don’t actually add the file(s), just[m
[7mit-add(1) line 43 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           show if they exist and/or will be[m
[7mit-add(1) line 44 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K           ignored.[m
[7mit-add(1) line 45 (press h for help or q to quit)[27m[K[K[m
       -v, --verbose[m
           Be verbose.[m
[m
       -f, --force[m
           Allow adding otherwise ignored files.[m
[m
       --sparse[m
           Allow updating index entries outside[m
           of the sparse-checkout cone. Normally,[m
           [1mgit[0m [1madd[0m refuses to update index[m
           entries whose paths do not fit within[m
           the sparse-checkout cone, since those[m
           files might be removed from the[m
           working tree without warning. See [1mgit-[0m[m
           [1msparse-checkout[0m(1) for more details.[m
[m
       -i, --interactive[m
           Add modified contents in the working[m
           tree interactively to the index.[m
           Optional path arguments may be[m
           supplied to limit operation to a[m
           subset of the working tree. See[m
           “Interactive mode” for details.[m
[m
       -p, --patch[m
           Interactively choose hunks of patch[m
           between the index and the work tree[m
           and add them to the index. This gives[m
           the user a chance to review the[m
           difference before adding modified[m
           contents to the index.[m
[m
           This effectively runs [1madd[0m[m
           [1m--interactive[0m, but bypasses the[m
           initial command menu and directly[m
           jumps to the [1mpatch[0m subcommand. See[m
           “Interactive mode” for details.[m
[m
       -e, --edit[m
           Open the diff vs. the index in an[m
           editor and let the user edit it. After[m
           the editor was closed, adjust the hunk[m
           headers and apply the patch to the[m
[7mit-add(1) line 89 (press h for help or q to quit)[27m[K[K           index.[m
[m
           The intent of this option is to pick[m
           and choose lines of the patch to[m
           apply, or even to modify the contents[m
           of lines to be staged. This can be[m
           quicker and more flexible than using[m
           the interactive hunk selector.[m
           However, it is easy to confuse oneself[m
           and create a patch that does not apply[m
           to the index. See EDITING PATCHES[m
           below.[m
[m
       -u, --update[m
           Update the index just where it already[m
           has an entry matching <pathspec>. This[m
           removes as well as modifies index[m
           entries to match the working tree, but[m
           adds no new files.[m
[m
           If no <pathspec> is given when [1m-u[0m[m
           option is used, all tracked files in[m
           the entire working tree are updated[m
           (old versions of Git used to limit the[m
           update to the current directory and[m
           its subdirectories).[m
[m
       -A, --all, --no-ignore-removal[m
           Update the index not only where the[m
           working tree has a file matching[m
           <pathspec> but also where the index[m
           already has an entry. This adds,[m
           modifies, and removes index entries to[m
           match the working tree.[m
[m
           If no <pathspec> is given when [1m-A[0m[m
           option is used, all files in the[m
           entire working tree are updated (old[m
           versions of Git used to limit the[m
           update to the current directory and[m
           its subdirectories).[m
[m
       --no-all, --ignore-removal[m
           Update the index by adding new files[m
[7mt-add(1) line 133 (press h for help or q to quit)[27m[K[K           that are unknown to the index and[m
           files modified in the working tree,[m
           but ignore files that have been[m
           removed from the working tree. This[m
           option is a no-op when no <pathspec>[m
           is used.[m
[m
           This option is primarily to help users[m
           who are used to older versions of Git,[m
           whose "git add <pathspec>..." was a[m
           synonym for "git add --no-all[m
           <pathspec>...", i.e. ignored removed[m
           files.[m
[m
       -N, --intent-to-add[m
           Record only the fact that the path[m
           will be added later. An entry for the[m
           path is placed in the index with no[m
           content. This is useful for, among[m
           other things, showing the unstaged[m
           content of such files with [1mgit[0m [1mdiff[0m[m
           and committing them with [1mgit[0m [1mcommit[0m[m
           [1m-a[0m.[m
[m
       --refresh[m
           Don’t add the file(s), but only[m
           refresh their stat() information in[m
           the index.[m
[m
       --ignore-errors[m
           If some files could not be added[m
           because of errors indexing them, do[m
           not abort the operation, but continue[m
           adding the others. The command shall[m
           still exit with non-zero status. The[m
           configuration variable[m
           [1madd.ignoreErrors[0m can be set to true to[m
           make this the default behaviour.[m
[m
       --ignore-missing[m
           This option can only be used together[m
           with --dry-run. By using this option[m
           the user can check if any of the given[m
           files would be ignored, no matter if[m
[7mt-add(1) line 177 (press h for help or q to quit)[27m[K[K           they are already present in the work[m
           tree or not.[m
[m
       --no-warn-embedded-repo[m
           By default, [1mgit[0m [1madd[0m will warn when[m
           adding an embedded repository to the[m
           index without using [1mgit[0m [1msubmodule[0m [1madd[0m[m
           to create an entry in [1m.gitmodules[0m.[m
           This option will suppress the warning[m
           (e.g., if you are manually performing[m
           operations on submodules).[m
[m
       --renormalize[m
           Apply the "clean" process freshly to[m
           all tracked files to forcibly add them[m
           again to the index. This is useful[m
           after changing [1mcore.autocrlf[0m[m
           configuration or the [1mtext[0m attribute in[m
           order to correct files added with[m
           wrong CRLF/LF line endings. This[m
           option implies [1m-u[0m.[m
[m
       --chmod=(+|-)x[m
           Override the executable bit of the[m
           added files. The executable bit is[m
           only changed in the index, the files[m
           on disk are left unchanged.[m
[m
       --pathspec-from-file=<file>[m
           Pathspec is passed in [1m<file>[0m instead[m
           of commandline args. If [1m<file>[0m is[m
           exactly [1m-[0m then standard input is used.[m
           Pathspec elements are separated by LF[m
           or CR/LF. Pathspec elements can be[m
           quoted as explained for the[m
           configuration variable [1mcore.quotePath[0m[m
           (see [1mgit-config[0m(1)). See also[m
           [1m--pathspec-file-nul[0m and global[m
           [1m--literal-pathspecs[0m.[m
[m
       --pathspec-file-nul[m
           Only meaningful with[m
           [1m--pathspec-from-file[0m. Pathspec[m
           elements are separated with NUL[m
[7mt-add(1) line 221 (press h for help or q to quit)[27m[K[K           character and all other characters are[m
           taken literally (including newlines[m
           and quotes).[m
[m
       --[m
           This option can be used to separate[m
           command-line options from the list of[m
           files, (useful when filenames might be[m
           mistaken for command-line options).[m
[m
[1mEXAMPLES[0m[m
       •   Adds content from all [1m*.txt[0m files[m
           under [1mDocumentation[0m directory and its[m
           subdirectories:[m
[m
               $ git add Documentation/\*.txt[m
[m
           Note that the asterisk [1m*[0m is quoted[m
           from the shell in this example; this[m
           lets the command include the files[m
           from subdirectories of [1mDocumentation/[0m[m
           directory.[m
[m
       •   Considers adding content from all[m
           git-*.sh scripts:[m
[m
               $ git add git-*.sh[m
[m
           Because this example lets the shell[m
           expand the asterisk (i.e. you are[m
           listing the files explicitly), it does[m
           not consider [1msubdir/git-foo.sh[0m.[m
[m
[1mINTERACTIVE[0m [1mMODE[0m[m
       When the command enters the interactive[m
       mode, it shows the output of the [4mstatus[24m[m
       subcommand, and then goes into its[m
       interactive command loop.[m
[m
       The command loop shows the list of[m
       subcommands available, and gives a prompt[m
       "What now> ". In general, when the prompt[m
       ends with a single [4m>[24m, you can pick only[m
       one of the choices given and type return,[m
[7mt-add(1) line 265 (press h for help or q to quit)[27m[K[K       like this:[m
[m
               *** Commands ***[m
                 1: status       2: update       3:[m  revert       4: add untracked[m
                 5: patch        6: diff         7:[m  quit         8: help[m
               What now> 1[m
[m
       You also could say [1ms[0m or [1msta[0m or [1mstatus[0m[m
       above as long as the choice is unique.[m
[m
       The main command loop has 6 subcommands[m
       (plus help and quit).[m
[m
       status[m
           This shows the change between HEAD and[m
           index (i.e. what will be committed if[m
           you say [1mgit[0m [1mcommit[0m), and between index[m
           and working tree files (i.e. what you[m
           could stage further before [1mgit[0m [1mcommit[0m[m
           using [1mgit[0m [1madd[0m) for each path. A sample[m
           output looks like this:[m
[m
                             staged     unstaged pa[m th[m
                    1:       binary      nothing fo[m o.png[m
                    2:     +403/-35        +1/-1 gi[m t-add--interactive.perl[m
[m
           It shows that foo.png has differences[m
           from HEAD (but that is binary so line[m
           count cannot be shown) and there is no[m
           difference between indexed copy and[m
           the working tree version (if the[m
           working tree version were also[m
           different, [4mbinary[24m would have been[m
           shown in place of [4mnothing[24m). The other[m
           file, git-add--interactive.perl, has[m
           403 lines added and 35 lines deleted[m
           if you commit what is in the index,[m
           but working tree file has further[m
           modifications (one addition and one[m
[7mt-add(1) line 309 (press h for help or q to quit)[27m[K[K           deletion).[m
[m
       update[m
           This shows the status information and[m
           issues an "Update>>" prompt. When the[m
           prompt ends with double [4m>>[24m, you can[m
           make more than one selection,[m
           concatenated with whitespace or comma.[m
           Also you can say ranges. E.g. "2-5[m
           7,9" to choose 2,3,4,5,7,9 from the[m
           list. If the second number in a range[m
           is omitted, all remaining patches are[m
           taken. E.g. "7-" to choose 7,8,9 from[m
           the list. You can say [4m*[24m to choose[m
           everything.[m
[m
           What you chose are then highlighted[m
           with [4m*[24m, like this:[m
[m
                          staged     unstaged path[m
                 1:       binary      nothing foo.p[m ng[m
               * 2:     +403/-35        +1/-1 git-a[m dd--interactive.perl[m
[m
           To remove selection, prefix the input[m
           with [1m-[0m like this:[m
[m
               Update>> -2[m
[m
           After making the selection, answer[m
           with an empty line to stage the[m
           contents of working tree files for[m
           selected paths in the index.[m
[m
       revert[m
           This has a very similar UI to [4mupdate[24m,[m
           and the staged information for[m
           selected paths are reverted to that of[m
           the HEAD version. Reverting new paths[m
           makes them untracked.[m
[m
       add untracked[m
           This has a very similar UI to [4mupdate[24m[m
[7mt-add(1) line 348 (press h for help or q to quit)[27m[K[K           and [4mrevert[24m, and lets you add untracked[m
           paths to the index.[m
[m
       patch[m
           This lets you choose one path out of a[m
           [4mstatus[24m like selection. After choosing[m
           the path, it presents the diff between[m
           the index and the working tree file[m
           and asks you if you want to stage the[m
           change of each hunk. You can select[m
           one of the following options and type[m
           return:[m
[m
               y - stage this hunk[m
               n - do not stage this hunk[m
               q - quit; do not stage this hunk or [m any of the remaining ones[m
               a - stage this hunk and all later hu[m nks in the file[m
               d - do not stage this hunk or any of[m  the later hunks in the file[m
               g - select a hunk to go to[m
               / - search for a hunk matching the g[m iven regex[m
               j - leave this hunk undecided, see n[m ext undecided hunk[m
               J - leave this hunk undecided, see n[m ext hunk[m
               k - leave this hunk undecided, see p[m revious undecided hunk[m
               K - leave this hunk undecided, see p[m revious hunk[m
               s - split the current hunk into smal[m ler hunks[m
               e - manually edit the current hunk[m
               ? - print help[m
[m
           After deciding the fate for all hunks,[m
           if there is any hunk that was chosen,[m
           the index is updated with the selected[m
           hunks.[m
[m
           You can omit having to type return[m
           here, by setting the configuration[m
[7mt-add(1) line 390 (press h for help or q to quit)[27m[K[K           variable [1minteractive.singleKey[0m to[m
           [1mtrue[0m.[m
[m
       diff[m
           This lets you review what will be[m
           committed (i.e. between HEAD and[m
           index).[m
[m
[1mEDITING[0m [1mPATCHES[0m[m
       Invoking [1mgit[0m [1madd[0m [1m-e[0m or selecting [1me[0m from[m
       the interactive hunk selector will open a[m
       patch in your editor; after the editor[m
       exits, the result is applied to the index.[m
       You are free to make arbitrary changes to[m
       the patch, but note that some changes may[m
       have confusing results, or even result in[m
       a patch that cannot be applied. If you[m
       want to abort the operation entirely[m
       (i.e., stage nothing new in the index),[m
       simply delete all lines of the patch. The[m
       list below describes some common things[m
       you may see in a patch, and which editing[m
       operations make sense on them.[m
[m
       added content[m
           Added content is represented by lines[m
           beginning with "+". You can prevent[m
           staging any addition lines by deleting[m
           them.[m
[m
       removed content[m
           Removed content is represented by[m
           lines beginning with "-". You can[m
           prevent staging their removal by[m
           converting the "-" to a " " (space).[m
[m
       modified content[m
           Modified content is represented by "-"[m
           lines (removing the old content)[m
           followed by "+" lines (adding the[m
           replacement content). You can prevent[m
           staging the modification by converting[m
           "-" lines to " ", and removing "+"[m
           lines. Beware that modifying only half[m
[7mt-add(1) line 425 (press h for help or q to quit)[27m[K[K           of the pair is likely to introduce[m
           confusing changes to the index.[m
[m
       There are also more complex operations[m
       that can be performed. But beware that[m
       because the patch is applied only to the[m
       index and not the working tree, the[m
       working tree will appear to "undo" the[m
       change in the index. For example,[m
       introducing a new line into the index that[m
       is in neither the HEAD nor the working[m
       tree will stage the new line for commit,[m
       but the line will appear to be reverted in[m
       the working tree.[m
[m
       Avoid using these constructs, or do so[m
       with extreme caution.[m
[m
       removing untouched content[m
           Content which does not differ between[m
           the index and working tree may be[m
           shown on context lines, beginning with[m
           a " " (space). You can stage context[m
           lines for removal by converting the[m
           space to a "-". The resulting working[m
           tree file will appear to re-add the[m
           content.[m
[m
       modifying existing content[m
           One can also modify context lines by[m
           staging them for removal (by[m
           converting " " to "-") and adding a[m
           "+" line with the new content.[m
           Similarly, one can modify "+" lines[m
           for existing additions or[m
           modifications. In all cases, the new[m
           modification will appear reverted in[m
           the working tree.[m
[m
       new content[m
           You may also add new content that does[m
           not exist in the patch; simply add new[m
           lines, each starting with "+". The[m
           addition will appear reverted in the[m
[7mt-add(1) line 469 (press h for help or q to quit)[27m[K[K           working tree.[m
[m
       There are also several operations which[m
       should be avoided entirely, as they will[m
       make the patch impossible to apply:[m
[m
       •   adding context (" ") or removal ("-")[m
           lines[m
[m
       •   deleting context or removal lines[m
[m
       •   modifying the contents of context or[m
           removal lines[m
[m
[1mSEE[0m [1mALSO[0m[m
       [1mgit-status[0m(1) [1mgit-rm[0m(1) [1mgit-reset[0m(1) [1mgit-[0m[m
       [1mmv[0m(1) [1mgit-commit[0m(1) [1mgit-update-index[0m(1)[m
[m
[1mGIT[0m[m
       Part of the [1mgit[0m(1) suite[m
[m
Git 2.34.1          05/20/2024         GIT-ADD(1)[m
[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[K[7mine 491/534 (END) (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git hel [Kp add
[?2004l[?1049h[22;0;0t[?1h=GIT-ADD(1)          Git Manual         GIT-ADD(1)[m
[m
[1mNAME[0m[m
       git-add - Add file contents to the index[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4madd[24m [--verbose | -v] [--dry-run | -n] [-[m -force | -f] [--interactive | -i] [--patch | -p][m
                 [--edit | -e] [--[no-]all | --[no-[m ]ignore-removal | [--update | -u]] [--sparse][m
                 [--intent-to-add | -N] [--refresh][m  [--ignore-errors] [--ignore-missing] [--renormaliz[m e][m
                 [--chmod=(+|-)x] [--pathspec-from-[m file=<file> [--pathspec-file-nul]][m
                 [--] [<pathspec>...][m
[m
[1mDESCRIPTION[0m[m
       This command updates the index using the[m
       current content found in the working tree,[m
       to prepare the content staged for the next[m
       commit. It typically adds the current[m
       content of existing paths as a whole, but[m
       with some options it can also be used to[m
       add content with only part of the changes[m
       made to the working tree files applied, or[m
       remove paths that do not exist in the[m
       working tree anymore.[m
[m
       The "index" holds a snapshot of the[m
       content of the working tree, and it is[m
       this snapshot that is taken as the[m
       contents of the next commit. Thus after[m
       making any changes to the working tree,[m
       and before running the commit command, you[m
       must use the [1madd[0m command to add any new or[m
       modified files to the index.[m
[m
       This command can be performed multiple[m
       times before a commit. It only adds the[m
       content of the specified file(s) at the[m
       time the add command is run; if you want[m
       subsequent changes included in the next[m
       commit, then you must run [1mgit[0m [1madd[0m again to[m
[7mgit-add(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ man git-add
[?2004l[?1049h[22;0;0t[?1h=GIT-ADD(1)          Git Manual         GIT-ADD(1)[m
[m
[1mNAME[0m[m
       git-add - Add file contents to the index[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4madd[24m [--verbose | -v] [--dry-run | -n] [-[m -force | -f] [--interactive | -i] [--patch | -p][m
                 [--edit | -e] [--[no-]all | --[no-[m ]ignore-removal | [--update | -u]] [--sparse][m
                 [--intent-to-add | -N] [--refresh][m  [--ignore-errors] [--ignore-missing] [--renormaliz[m e][m
                 [--chmod=(+|-)x] [--pathspec-from-[m file=<file> [--pathspec-file-nul]][m
                 [--] [<pathspec>...][m
[m
[1mDESCRIPTION[0m[m
       This command updates the index using the[m
       current content found in the working tree,[m
       to prepare the content staged for the next[m
       commit. It typically adds the current[m
       content of existing paths as a whole, but[m
       with some options it can also be used to[m
       add content with only part of the changes[m
       made to the working tree files applied, or[m
       remove paths that do not exist in the[m
       working tree anymore.[m
[m
       The "index" holds a snapshot of the[m
       content of the working tree, and it is[m
       this snapshot that is taken as the[m
       contents of the next commit. Thus after[m
       making any changes to the working tree,[m
       and before running the commit command, you[m
       must use the [1madd[0m command to add any new or[m
       modified files to the index.[m
[m
       This command can be performed multiple[m
       times before a commit. It only adds the[m
       content of the specified file(s) at the[m
       time the add command is run; if you want[m
       subsequent changes included in the next[m
       commit, then you must run [1mgit[0m [1madd[0m again to[m
[7mgit-add(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git l[Kclone [7mhttps://github.com/Navee-nT[27m[7mA[27m[7m/TA-MLEP.git[27m[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[Chttps://github.com/Navee-nTA/TA-MLEP.git
[?2004lCloning into 'TA-MLEP'...
Username for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/Navee-nTA/TA-MLEP.git/'
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git clone https://github.com/Navee-nTA/TA-MLEP.git
[?2004lCloning into 'TA-MLEP'...
Username for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/Navee-nTA/TA-MLEP.git/'
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [7mnaveentiger#1234[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnaveentiger#1234[7mnaveentiger#1234[27mnaveentiger#1234[7mnavee[27m[7mn[27m[7mtiger#1234[27m[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnaveentiger#1234[7mnaveentiger#1234[27m[C[C[C[C[C[C[C[C[C[C[Cnaveentiger#1234[7mnaveentiger#1234[27m^C[?2004l[?2004h[?2004l
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ^C[?2004l[?2004h[?2004l
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git clone https://github.com/Navee-nTA/TA-MLEP.git
[?2004lCloning into 'TA-MLEP'...
Username for 'https://github.com': ^[[A^[[A^[[A^[[A^[[A                    ^C
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat[K[K[Ktouch PAT_27_6_24gPAT_27_6_24iPAT_27_6_24tPAT_27_6_24_PAT_27_6_24
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ echo [7mghp_XwOfHfbbLTIRl0GAKobTCAPP9KqW[27m[7m1[27m[7m52mpNgo[27m[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [C[C[C[C[C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 > git_PAT_27_6_24 
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ls
[?2004lgit_PAT_27_6_24  [0m[01;34mshell-lesson-data[0m
my_git_session   [01;31mshell-lesson-data.zip[0m
my_unix_session
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 
[?2004l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
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 [C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kecho 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 > git_PAT_27_6_24 [A[16Ptouch git_PAT_27_6_24
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone https://github.com/Navee-nTA/TA-MLEP.git
[?2004lCloning into 'TA-MLEP'...
Username for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
warning: You appear to have cloned an empty repository.
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ls
[?2004l[0m[01;34mTA-MLEP[0m          my_unix_session
git_PAT_27_6_24  [01;34mshell-lesson-data[0m
my_git_session   [01;31mshell-lesson-data.zip[0m
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls -a
[?2004l[0m[01;34m.[0m  [01;34m..[0m  [01;34m.git[0m
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cp[K[Kcd
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cp my_unix_session ./TAm[K-MLEP/my_unix_ session
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ls[K[Kcd Ta[KA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004lmy_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cat[K[K[Kwc -l my_unix_session 
[?2004l2671 my_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git status
[?2004lfatal: not a git repository (or any of the parent directories): .git
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git statis
[?2004lgit: 'statis' is not a git command. See 'git --help'.

The most similar command is
	status
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git statis[K[Kus
[?2004lOn branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mmy_unix_session[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git add ,[Kmy_unix_session 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git add my_unix_session status[K
[?2004lOn branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	[32mnew file:   my_unix_session[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git add LICENSE
[?2004lfatal: pathspec 'LICENSE' did not match any files
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit -m 'IN[Kntial pro[K[K[K[K[K[K[K[K[K[KUnix session'
[?2004l[main (root-commit) 8c3c275] Unix session
 1 file changed, 2671 insertions(+)
 create mode 100644 my_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd 
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ exit
[?2004lexit

Script done on 2024-06-27 12:41:53+05:30 [COMMAND_EXIT_CODE="0"]
Script started on 2024-06-27 13:35:10+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="51" LINES="45"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git status[K[K[K[K[K[K[K[K[K[Kcd 
.cache/            TA-MLEP/
.config/           shell-lesson-data/
.local/            
]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd Ti[KA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ GIT STA[K[K[K[K[K[K[Kgit status
[?2004lOn branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ^C[?2004l[?2004h[?2004l
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mYour branch is based on 'orig[27m[7mi[27m[7mn/main', but the upstream is gone[27m^C[?2004l[?2004h[?2004l
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit branch --unset-upstream[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit branch --unset-upstream
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004lmy_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ echo 'Gi[K[KLearning git' > README
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ GIT [K[K[K[Kgit status
[?2004lOn branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ gi [Kt add README 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ GI[K[Kgi [Kt status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status -s
[?2004l[32mA[m  README
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cat .gitignore
[?2004lcat: .gitignore: No such file or directory
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ touch[K[K[K[K[Knano .gitignore
[?2004l[?2004h[?1049h[22;0;0t[1;45r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[43;20H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 6.2         .gitignore                  [1;50H(B[m[44d(B[0;7m^G(B[m Help     (B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[45d(B[0;7m^X(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[2d[?12l[?25h[?25l[1;35H(B[0;7m*[50G(B[m[?12l[?25h[2d*[?25l[?12l[?25h.[?25l[?12l[?25h[[?25l[?12l[?25ho[?25l[?12l[?25ha[?25l[?12l[?25h][?25l[3d[?12l[?25h[?25l[?12l[?25h*[?25l[?12l[?25h~[?25l[44;13H(B[0;7mM-D(B[m DOS Form(B[0;7mM-A(B[m Append  (B[0;7mM-B(B[m Backup File[45;2H(B[0;7mC(B[m Cancel   (B[0;7mM-M(B[m Mac Form(B[0;7mM-P(B[m Prepend (B[0;7m^T(B[m Browse[43d(B[0;7mFile Name to Write: .gitignore                     [43;31H(B[m[?12l[?25h[?25l[43;18H[1K (B[0;7m[ Writing... ](B[m[K[1;35H(B[0;7m [50G(B[m[43;18H(B[0;7m[ Wrote 2 lines ](B[m[44;13H(B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[K[45;2H(B[0;7mX(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[K[?12l[?25h[3;3H[?25l[43d[J[45d[?12l[?25h[45;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cat .gitignore 
[?2004l*.[oa]
*~
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status -s
[?2004l[32mA[m  README
[31m??[m .gitignore
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.gitignore[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git diff
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit -m 'Added Reade[Kme f ile'
[?2004l[main a35d21d] Added Readme file
 1 file changed, 1 insertion(+)
 create mode 100644 README
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.gitignore[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ nano r[KREADME 
[?2004l[?2004h[?1049h[22;0;0t[1;45r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[43;19H(B[0;7m[ Reading... ](B[m[43;25H(B[0;7m 1 line ](B[m[H(B[0;7m  GNU nano 6.2           README                    [1;50H(B[m[44d(B[0;7m^G(B[m Help     (B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[45d(B[0;7m^X(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[2dLearning git[?12l[?25h[?25l[?12l[?25hL[?25l[?12l[?25he[?25l[?12l[?25ha[?25l[?12l[?25hr[?25l[?12l[?25hn[?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[?12l[?25h [?25l[?12l[?25hg[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l[?12l[?25h[3d[?25l[1;33H(B[0;7m*[50G(B[m[?12l[?25h[3dM[?25l[?12l[?25ho[?25l[?12l[?25hd[?25l[?12l[?25hi[?25l[?12l[?25hf[?25l[?12l[?25hi[?25l[43d[K[?12l[?25h[3;7Hn[?25l[?12l[?25hg[?25l[?12l[?25h [?25l[44;13H(B[0;7mM-D(B[m DOS Form(B[0;7mM-A(B[m Append  (B[0;7mM-B(B[m Backup File[45;2H(B[0;7mC(B[m Cancel   (B[0;7mM-M(B[m Mac Form(B[0;7mM-P(B[m Prepend (B[0;7m^T(B[m Browse[43d(B[0;7mFile Name to Write: README                         [43;27H(B[m[?12l[?25h[?25l[43;18H[1K (B[0;7m[ Writing... ](B[m[K[1;33H(B[0;7m [50G(B[m[43;18H(B[0;7m[ Wrote 2 lines ](B[m[44;13H(B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[K[45;2H(B[0;7mX(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[K[?12l[?25h[3;10H[?25l[43d[J[45d[?12l[?25h[45;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ nano README [2Pgit status
[?2004lOn branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.gitignore[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git diff
[?2004l[?1h=[1mdiff --git a/README b/README[m[m
[1mindex 8ef7bbc..cd3b497 100644[m[m
[1m--- a/README[m[m
[1m+++ b/README[m[m
[36m@@ -1 +1,2 @@[m[m
 Learning git[m[m
[32m+[m[32mModifing[m[41m [m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git diff --staged
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git add .gitignore 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ gitd[K digg[K[Kff --staged
[?2004l[?1h=[1mdiff --git a/.gitignore b/.gitignore[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..f05287e[m[m
[1m--- /dev/null[m[m
[1m+++ b/.gitignore[m[m
[36m@@ -0,0 +1,2 @@[m[m
[32m+[m[32m*.[oa][m[m
[32m+[m[32m*~[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git difftool
[?2004l
This message is displayed because 'diff.tool' is not configured.
See 'git difftool --tool-help' or 'git help config' for more details.
'git difftool' will now attempt to use one of the following tools:
opendiff kdiff3 tkdiff xxdiff meld kompare gvimdiff diffuse diffmerge ecmerge p4merge araxis bc codecompare smerge emerge vimdiff nvimdiff

Viewing (1/1): 'README'
Launch 'vimdiff' [Y/n]? Y
2 files to edit
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;45r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[45;1H"/tmp/da7Zvj_README"<E" [readonly] 1L, 13B"README" [45;10H[K[45;1H<E" [readonly] 2L, 23B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[34m[48;5;248m  [mLearning git[11C[7m|[2;26H|[3;26H|[4;26H|[5;26H|[6;26H|[7;26H|[8;26H|[9;26H|[10;26H|[11;26H|[12;26H|[13;26H|[14;26H|[15;26H|[16;26H|[17;26H|[18;26H|[19;26H|[20;26H|[21;26H|[22;26H|[23;26H|[24;26H|[25;26H|[26;26H|[27;26H|[28;26H|[29;26H|[30;26H|[31;26H|[32;26H|[33;26H|[34;26H|[35;26H|[36;26H|[37;26H|[38;26H|[39;26H|[40;26H|[41;26H|[42;26H|[43;26H|[m[2;1H[34m[48;5;248m  [m[94m[48;5;159m-----------------------[m
[94m~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        [m
[7m<README [RO] 1,1      All [m[1;27H[34m[48;5;248m  [mLearning git[2;27H[34m[48;5;248m  [m[48;5;81mModifing               [m[3;27H[94m~                        [4;27H~                        [5;27H~                        [6;27H~                        [7;27H~                        [8;27H~                        [9;27H~                        [10;27H~                        [11;27H~                        [12;27H~                        [13;27H~                        [14;27H~                        [15;27H~                        [16;27H~                        [17;27H~                        [18;27H~                        [19;27H~                        [20;27H~                        [21;27H~                        [22;27H~                        [23;27H~                        [24;27H~                        [25;27H~                        [26;27H~                        [27;27H~                        [28;27H~                        [29;27H~                        [30;27H~                        [31;27H~                        [32;27H~                        [33;27H~                        [34;27H~                        [35;27H~                        [36;27H~                        [37;27H~                        [38;27H~                        [39;27H~                        [40;27H~                        [41;27H~                        [42;27H~                        [43;27H~                        [m[44;27H[1m[7mREADME [RO]  1,1      All[1;29H[?25h[?12$p[?25l[m[45;41Hq[1;29H[?25h[?25l[45;42H~@k[1;29H[45;41H    [1;29H[?25h[?25l[45;41H^[[1;29H[45;41H  [1;29H[45;41H^[[1;29H[45;41H  [1;29H[?25h[?25l[45;41H;[1;29H[45;41H [1;29H[?25h[?25l[45;41Hq[1;29H[?25h[?25l[45;42H^M[1;29H[45;41H   [1;29H[?25h[?25l[45;41Hq[1;29H[?25h[?25l[45;42H^M[1;29H[45;41H   [1;29H[?25h[?25l[45;1HType  :qa  and pre...Enter> to exit Vim[1;29H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[34m[48;5;248m  [mLearning git[11C[7m|[2;26H|[3;26H|[4;26H|[5;26H|[6;26H|[7;26H|[8;26H|[9;26H|[10;26H|[11;26H|[12;26H|[13;26H|[14;26H|[15;26H|[16;26H|[17;26H|[18;26H|[19;26H|[20;26H|[21;26H|[22;26H|[23;26H|[24;26H|[25;26H|[26;26H|[27;26H|[28;26H|[29;26H|[30;26H|[31;26H|[32;26H|[33;26H|[34;26H|[35;26H|[36;26H|[37;26H|[38;26H|[39;26H|[40;26H|[41;26H|[42;26H|[43;26H|[m[2;1H[34m[48;5;248m  [m[94m[48;5;159m-----------------------[m
[94m~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        
~                        [m
[7m<README [RO] 1,1      All [m[1;27H[34m[48;5;248m  [mLearning git[2;27H[34m[48;5;248m  [m[48;5;81mModifing                                                                                                                                      [m[3;27H[94m~                                                                                                                                               [4;27H~                                                                                                                                               [5;27H~                                                                                                                                               [6;27H~                                                                                                                                               [7;27H~                                                                                                                                               [8;27H~                                                                                                                                               [9;27H~                                                                                                                                               [10;27H~                                                                                                                                               [11;27H~                                                                                                                                               [12;27H~                                                                                                                                               [13;27H~                                                                                                                                               [14;27H~                                                                                                                                               [15;27H~                                                                                                                                               [16;27H~                                                                                                                                               [17;27H~                                                                                                                                               [18;27H~                                                                                                                                               [19;27H~                                                                                                                                               [20;27H~                                                                                                                                               [21;27H~                                                                                                                                               [22;27H~                                                                                                                                               [23;27H~                                                                                                                                               [24;27H~                                                                                                                                               [25;27H~                                                                                                                                               [26;27H~                                                                                                                                               [27;27H~                                                                                                                                               [28;27H~                                                                                                                                               [29;27H~                                                                                                                                               [30;27H~                                                                                                                                               [31;27H~                                                                                                                                               [32;27H~                                                                                                                                               [33;27H~                                                                                                                                               [34;27H~                                                                                                                                               [35;27H~                                                                                                                                               [36;27H~                                                                                                                                               [37;27H~                                                                                                                                               [38;27H~                                                                                                                                               [39;27H~                                                                                                                                               [40;27H~                                                                                                                                               [41;27H~                                                                                                                                               [42;27H~                                                                                                                                               [43;27H~                                                                                                                                               [m[44;27H[1m[7mREADME [RO]                                                                                                                   1,1            All[1;29H[?25h[?25l[m[45;160H^[[1;29H[45;160H  [1;29H[45;160H^[[1;29H[45;160H  [1;29H[?25h[?25l[45;160H:[1;29H[45;160H[K[45;1H:[?25hq[?25l[1;1HLearning git[1;13H[K[2;1H[94m~                                                                                                                                                                         [3;26H   [4;26H   [5;26H   [6;26H   [7;26H   [8;26H   [9;26H   [10;26H   [11;26H   [12;26H   [13;26H   [14;26H   [15;26H   [16;26H   [17;26H   [18;26H   [19;26H   [20;26H   [21;26H   [22;26H   [23;26H   [24;26H   [25;26H   [26;26H   [27;26H   [28;26H   [29;26H   [30;26H   [31;26H   [32;26H   [33;26H   [34;26H   [35;26H   [36;26H   [37;26H   [38;26H   [39;26H   [40;26H   [41;26H   [42;26H   [43;26H   
~                                                                                                                                                                         [m[45;153H1,1[11CAll[1;1H[?25h[?25l[45;143H^M[1;1H[45;143H  [1;1H[?25h[?25l[45;143H~@k[1;1H[45;143H   [1;1H[?25h[?25l[45;143H:[1;1H[45;1H[K[45;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[45;1H[K[45;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   .gitignore[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git add TR[K[KREADME 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ GIT ST[K[K[K[K[K[Kgti[K[Kits[K ts[K[Ksta
stage    stash    status   
]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git sta
stage    stash    status   
]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   .gitignore[m
	[32mmodified:   README[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit
[?2004lhint: Waiting for your editor to close the file... error: cannot run emacs: No such file or directory
error: unable to start editor 'emacs'
Please supply the message using either -m or -F option.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git --[K[Kconfig --global core.edit or nano
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git config --global core.editor nano[A]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [C[C[C[C[C[Cmmit[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;45r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[43;19H(B[0;7m[ Reading... ](B[m[43;18H(B[0;7m[ Read 9 lines ](B[m[H(B[0;7m/home/naveen/TA-MLEP/.git/COMMIT_EDITMSG           [1;51H(B[m[44d(B[0;7m^G(B[m Help     (B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[45d(B[0;7m^X(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[3d[36m# Please enter the commit message for your changes[39m(B[0;7m>[4;1H(B[0m[36m# with '#' will be ignored, and an empty message a[39m(B[0;7m>[5;1H(B[0m[36m#[6d# On branch main[7d# Changes to be committed:[8d#[38;5;208m       [36mnew file:   .gitignore[9d#[38;5;208m       [36mmodified:   README[10d#[2d[39m(B[m[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[5d[?25l[?12l[?25h[6d[?25l[?12l[?25h[7d[?25l[?12l[?25h[8d[?25l[?12l[?25h[9d[?25l[?12l[?25h[10d[?25l[?12l[?25h[11d[?25l[1;42H(B[0;7m*[51G(B[m[?12l[?25h[11dC[?25l[?12l[?25ho[?25l[?12l[?25hm[?25l[?12l[?25hm[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l[?12l[?25h [?25l[?12l[?25hf[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[43d[K[?12l[?25h[11;11Hm[?25l[?12l[?25h [?25l[?12l[?25hn[?25l[?12l[?25ha[?25l[?12l[?25hn[?25l[?12l[?25ho[?25l[44;13H(B[0;7mM-D(B[m DOS Form(B[0;7mM-A(B[m Append  (B[0;7mM-B(B[m Backup File[45;2H(B[0;7mC(B[m Cancel   (B[0;7mM-M(B[m Mac Form(B[0;7mM-P(B[m Prepend (B[0;7m^T(B[m Browse[43d(B[0;7mFile Name to Write:<MIT_EDITMSG                    [43;32H(B[m[?12l[?25h[?25l[43;18H[1K (B[0;7m[ Writing... ](B[m[K[1;42H(B[0;7m [51G(B[m[43;17H(B[0;7m[ Wrote 10 lines ](B[m[44;13H(B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[K[45;2H(B[0;7mX(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste[K[?12l[?25h[11;17H[?25l[43d[J[45d[?12l[?25h[45;1H[?1049l[23;0;0t[?1l>[?2004l[K[main 53e3fc9] Commit from nano
 2 files changed, 3 insertions(+)
 create mode 100644 .gitignore
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ echo $EDITORE[K
[?2004l
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ECH O[K[K[K[K[Keho[K[Kcho modification2
[?2004lmodification2
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ echo modification2 >> README  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git statuus
[?2004lgit: 'statuus' is not a git command. See 'git --help'.

The most similar command is
	status
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git statuus[Ks[K[Ks
[?2004lOn branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit 0[K-a -m 'Add [Ked [K[K[K[K[K[Kc[KCommit with out staging'
[?2004l[main ffe9fb6] Commit without staging
 1 file changed, 1 insertion(+)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm[K[K[K[K[K[Ktouch[Kh test
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git
[?2004lusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mtest[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm test 
[?2004lfatal: pathspec 'test' did not match any files
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm test [C[C[C[C[C[1P[1P[1P[1P
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm README 
[?2004lrm 'README'
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mdeleted:    README[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004lmy_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls -a
[?2004l[0m[01;34m.[0m  [01;34m..[0m  [01;34m.git[0m  .gitignore  my_unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm --cah[Kched
[?2004lfatal: No pathspec was given. Which files should I remove?
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git rm -h
[?2004lusage: git rm [<options>] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched
    --sparse              allow updating entries outside of the sparse-checkout cone
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git mv my_unix_session unix_s ession
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mdeleted:    README[m
	[32mrenamed:    my_unix_session -> unix_session[m

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit -m Re[K[K;[K'Renamed file'
[?2004l[main 55fb008] Renamed file
 2 files changed, 3 deletions(-)
 delete mode 100644 README
 rename my_unix_session => unix_session (100%)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004lunix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git log
[?2004l[?1h=[33mcommit 55fb00889196c6db7e56f5e70ae24fbb91b4d77e[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmain[m[33m)[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.co[m m>[m
Date:   Thu Jun 27 14:13:58 2024 +0530[m
[m
    Renamed file[m
[m
[33mcommit ffe9fb68d47df2aa8ae01fba4eeb65d1c17a20b2[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.co[m m>[m
Date:   Thu Jun 27 14:05:45 2024 +0530[m
[m
    Commit without staging[m
[m
[33mcommit 53e3fc956a472c2e4f2392a758a7dc294ce80546[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.co[m m>[m
Date:   Thu Jun 27 14:01:39 2024 +0530[m
[m
    Commit from nano[m
[m
[33mcommit a35d21d1cfe735afc8200c4311b6c2529c46fa1d[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.co[m m>[m
Date:   Thu Jun 27 13:55:18 2024 +0530[m
[m
    Added Readme file[m
[m
[33mcommit 8c3c2756017bdad44969b2c307632a79b26efc6d[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.co[m m>[m
Date:   Thu Jun 27 12:36:13 2024 +0530[m
[m
    Unix session[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit clone https://github.com/[27m[7ms[27m[7mchacon/simplegit-progit[27m[Agit clone https://github.com/schacon/simplegit-progit
[?2004lCloning into 'simplegit-progit'...
remote: Enumerating objects: 13, done.[K
remote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 13[K
Receiving objects:   7% (1/13)Receiving objects:  15% (2/13)Receiving objects:  23% (3/13)Receiving objects:  30% (4/13)Receiving objects:  38% (5/13)Receiving objects:  46% (6/13)Receiving objects:  53% (7/13)Receiving objects:  61% (8/13)Receiving objects:  69% (9/13)Receiving objects:  76% (10/13)Receiving objects:  84% (11/13)Receiving objects:  92% (12/13)Receiving objects: 100% (13/13)Receiving objects: 100% (13/13), done.
Resolving deltas:   0% (0/3)Resolving deltas:  33% (1/3)Resolving deltas:  66% (2/3)Resolving deltas: 100% (3/3)Resolving deltas: 100% (3/3), done.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd.
[?2004l
Command 'cd.' not found, did you mean:
  command 'cdp' from deb irpas (0.10-9)
  command 'cdo' from deb cdo (2.0.4-1)
  command 'cdw' from deb cdw (0.8.1-2)
  command 'cdb' from deb tinycdb (0.78build3)
  command 'cd5' from deb cd5 (0.1-4)
  command 'cde' from deb cde (0.1+git9-g551e54d-1.2)
  command 'cdi' from deb cdo (2.0.4-1)
Try: sudo apt install <deb name>
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ 
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ls
[?2004l[0m[01;34mTA-MLEP[0m          my_unix_session
git_PAT_27_6_24  [01;34mshell-lesson-data[0m
my_git_session   [01;31mshell-lesson-data.zip[0m
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004l[0m[01;34msimplegit-progit[0m  unix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ rm -r simplegit-progit/
[?2004lrm: remove write-protected regular file 'simplegit-progit/.git/objects/pack/pack-d6905687fc49b85678ca94942056d15d353040c1.pack'? y
rm: remove write-protected regular file 'simplegit-progit/.git/objects/pack/pack-d6905687fc49b85678ca94942056d15d353040c1.idx'? y
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls
[?2004lunix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [7mgit clone https://github.com/schacon/[27m[7ms[27m[7mimplegit-progit[27m[Agit clone https://github.com/schacon/simplegit-progit
[?2004lCloning into 'simplegit-progit'...
remote: Enumerating objects: 13, done.[K
remote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 13[K
Receiving objects:   7% (1/13)Receiving objects:  15% (2/13)Receiving objects:  23% (3/13)Receiving objects:  30% (4/13)Receiving objects:  38% (5/13)Receiving objects:  46% (6/13)Receiving objects:  53% (7/13)Receiving objects:  61% (8/13)Receiving objects:  69% (9/13)Receiving objects:  76% (10/13)Receiving objects:  84% (11/13)Receiving objects:  92% (12/13)Receiving objects: 100% (13/13)Receiving objects: 100% (13/13), done.
Resolving deltas:   0% (0/3)Resolving deltas:  33% (1/3)Resolving deltas:  66% (2/3)Resolving deltas: 100% (3/3)Resolving deltas: 100% (3/3), done.
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd s[KS[K
.cache/            TA-MLEP/
.config/           shell-lesson-data/
.local/            simplegit-progit/
]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd simplegit-progit/
[?2004l[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git lob[K[K[K[K[K[K[Kit [K[K[Kgit status
[?2004lOn branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Mon Mar 17 21:52:11 2008 -0700[m
[m
    changed the verison number[m
[m
[33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 16:40:33 2008 -0700[m
[m
    removed unnecessary test code[m
[m
[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 10:31:28 2008 -0700[m
[m
    first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log -p
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Mon Mar 17 21:52:11 2008 -0700[m
[m
    changed the verison number[m
[m
[1mdiff --git a/Rakefile b/Rakefile[m[m
[1mindex a874b73..8f94139 100644[m[m
[1m--- a/Rakefile[m[m
[1m+++ b/Rakefile[m[m
[36m@@ -5,7 +5,7 @@[m [mrequire 'rake/gempackagetask'[m[m
 spec = Gem::Specification.new do |s|[m[m
     s.platform  =   Gem::Platform::RUBY[m[m
     s.name      =   "simplegit"[m[m
[31m-    s.version   =   "0.1.0"[m[m
[32m+[m[32m    s.version   =   "0.1.1"[m[m
     s.author    =   "Scott Chacon"[m[m
     s.email     =   "schacon@gmail.com"[m[m
     s.summary   =   "A simple gem for using Git in[m  Ruby code."[m[m
[m
[33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 16:40:33 2008 -0700[m
[m
    removed unnecessary test code[m
[m
[1mdiff --git a/lib/simplegit.rb b/lib/simplegit.rb[m[m
[1mindex a0a60ae..47c6340 100644[m[m
[1m--- a/lib/simplegit.rb[m[m
[1m+++ b/lib/simplegit.rb[m[m
[36m@@ -18,8 +18,3 @@[m [mclass SimpleGit[m[m
     end[m[m
   [m[m
 end[m[m
[31m-[m[m
[31m-if $0 == __FILE__[m[m
[31m-  git = SimpleGit.new[m[m
[31m-  puts git.show[m[m
[31m-end[m[m
\ No newline at end of file[m[m
[m
[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K[K:[K[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ 
[?2004l[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log -p -2
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Mon Mar 17 21:52:11 2008 -0700[m
[m
    changed the verison number[m
[m
[1mdiff --git a/Rakefile b/Rakefile[m[m
[1mindex a874b73..8f94139 100644[m[m
[1m--- a/Rakefile[m[m
[1m+++ b/Rakefile[m[m
[36m@@ -5,7 +5,7 @@[m [mrequire 'rake/gempackagetask'[m[m
 spec = Gem::Specification.new do |s|[m[m
     s.platform  =   Gem::Platform::RUBY[m[m
     s.name      =   "simplegit"[m[m
[31m-    s.version   =   "0.1.0"[m[m
[32m+[m[32m    s.version   =   "0.1.1"[m[m
     s.author    =   "Scott Chacon"[m[m
     s.email     =   "schacon@gmail.com"[m[m
     s.summary   =   "A simple gem for using Git in[m  Ruby code."[m[m
[m
[33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 16:40:33 2008 -0700[m
[m
    removed unnecessary test code[m
[m
[1mdiff --git a/lib/simplegit.rb b/lib/simplegit.rb[m[m
[1mindex a0a60ae..47c6340 100644[m[m
[1m--- a/lib/simplegit.rb[m[m
[1m+++ b/lib/simplegit.rb[m[m
[36m@@ -18,8 +18,3 @@[m [mclass SimpleGit[m[m
     end[m[m
   [m[m
 end[m[m
[31m-[m[m
[31m-if $0 == __FILE__[m[m
[31m-  git = SimpleGit.new[m[m
[31m-  puts git.show[m[m
[31m-end[m[m
\ No newline at end of file[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git loh [K[Kg --stat
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Mon Mar 17 21:52:11 2008 -0700[m
[m
    changed the verison number[m
[m
 Rakefile | 2 [32m+[m[31m-[m[m
 1 file changed, 1 insertion(+), 1 deletion(-)[m
[m
[33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 16:40:33 2008 -0700[m
[m
    removed unnecessary test code[m
[m
 lib/simplegit.rb | 5 [31m-----[m[m
 1 file changed, 5 deletions(-)[m
[m
[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 10:31:28 2008 -0700[m
[m
    first commit[m
[m
 README           |  6 [32m++++++[m[m
 Rakefile         | 23 [32m+++++++++++++++++++++++[m[m
 lib/simplegit.rb | 25 [32m+++++++++++++++++++++++++[m[m
 3 files changed, 54 insertions(+)[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty=sho rt
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
[m
    changed the verison number[m
[m
[33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
Author: Scott Chacon <schacon@gmail.com>[m
[m
    removed unnecessary test code[m
[m
[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
Author: Scott Chacon <schacon@gmail.com>[m
[m
    first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty=short[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[Kone line
[?2004l[?1h=[33mca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHEAD -> [m[1;32mm[m [33m[m[33m[m[1;36m[m[1;32master[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m changed the veri[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;31m[m[33m[m[1;31m[m[33m[mson number[m
[33m085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m removed un[m [33m[mnecessary test code[m
[33ma11bef06a3f659402fe7563abf99ad00de2209e6[m first comm[m [33m[mit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty=for mat:"%h -a[K[K[7m- %an, %ar : %s"[27m[C[C[C[C[C[C[C[C- %an, %ar : %s"
[?2004l[?1h=ca82a6d - Scott Chacon, 16 years ago : changed the [m verison number[m
085bb3b - Scott Chacon, 16 years ago : removed unne[m cessary test code[m
a11bef0 - Scott Chacon, 16 years ago : first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ (reverse-i-search)`': [K(failed reverse-i-search)`': ^C[?2004l[?2004h[?2004l
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ history | grep scipr [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kr
[?2004l  440  history | grep [01;31m[Kscipr[m[K
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ histlo[K[K[Ktory | tail
[?2004l  432  git status
  433  git log
  434  git log -p
  435  git log -p -2
  436  git log --stat
  437  git log --pretty=short
  438  git log --pretty=oneline
  439  git log --pretty=format:"%h - %an, %ar : %s"
  440  history | grep scipr
  441  history | tail
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ history | tailgrep scipr [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[Kt[Krip t
[?2004l   75  man [01;31m[Kscript[m[K
   76  [01;31m[Kscript[m[K -a my_unix_session
   78  [01;31m[Kscript[m[K -a my_unix_session
   94  [01;31m[Kscript[m[K -a my_unix_session
  226  [01;31m[Kscript[m[K -a my_unix_session 
  442  history | grep [01;31m[Kscript[m[K
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ exit
[?2004lexit

Script done on 2024-06-27 15:11:22+05:30 [COMMAND_EXIT_CODE="0"]
Script started on 2024-06-27 15:11:36+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="170" LINES="45"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [K]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ gi t[K[Kt[K[K[K[7mgit log --pretty=format:"%h %s" --gra[27m[7mp[27m[7mh[27m[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git log --pretty=format:"%h %s" --graph
[?2004lfatal: not a git repository (or any of the parent directories): .git
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd s
shell-lesson-data/ simplegit-progit/
]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd si
[?2004lbash: cd: si: No such file or directory
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd simplegit-progit/
[?2004l[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ cd simplegit-progit/ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit log --pretty=format:"%h %s" --graph
[?2004l[?1h=* ca82a6d changed the verison number[m
* 085bb3b removed unnecessary test code[m
* a11bef0 first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty=format:"%h %s" --graph
[?2004l[?1h=* ca82a6d changed the verison number[m
* 085bb3b removed unnecessary test code[m
* a11bef0 first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty=format:"%h %s" --graph[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[Kgraph
[?2004l[?1h=* [33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36m[m [33m[m[33m[m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
[31m|[m Author: Scott Chacon <schacon@gmail.com>[m
[31m|[m Date:   Mon Mar 17 21:52:11 2008 -0700[m
[31m|[m [m
[31m|[m     changed the verison number[m
[31m|[m [m
* [33mcommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7[m[m
[31m|[m Author: Scott Chacon <schacon@gmail.com>[m
[31m|[m Date:   Sat Mar 15 16:40:33 2008 -0700[m
[31m|[m [m
[31m|[m     removed unnecessary test code[m
[31m|[m [m
* [33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
  Author: Scott Chacon <schacon@gmail.com>[m
  Date:   Sat Mar 15 10:31:28 2008 -0700[m
  [m
      first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --since=2.we eks
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git status
[?2004lOn branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [7mgit log -S function_[27m[7mn[27m[7mame[27m[A]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log -S function_name
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ ls
[?2004lREADME  Rakefile  [0m[01;34mlib[0m
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ ca[K[Kless Rakefile 
[?2004l[?1049h[22;0;0t[?1h=require 'rubygems'
Gem::manage_gems
require 'rake/gempackagetask'

spec = Gem::Specification.new do |s|
    s.platform  =   Gem::Platform::RUBY
    s.name      =   "simplegit"
    s.version   =   "0.1.1"
    s.author    =   "Scott Chacon"
    s.email     =   "schacon@gmail.com"
    s.summary   =   "A simple gem for using Git in  Ruby code."
    s.files     =   FileList['lib/**/*'].to_a
    s.require_path  =   "lib"
end

Rake::GemPackageTask.new(spec) do |pkg|
    pkg.need_tar = true
end

task :default => "pkg/#{spec.name}-#{spec.version}. gem" do
    puts "generated latest version"
end

[7mRakefile (END)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ less Rakefile s[Kgit log -S function_name[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[Kspec
[?2004l[?1h=[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 10:31:28 2008 -0700[m
[m
    first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log -- Raj[Kkefile
[?2004l[?1h=[33mcommit ca82a6dff817ec66f44342007202690a93763949[m[33m ([m[1;36mHE[m [33m[m[33m[m[1;36mAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Mon Mar 17 21:52:11 2008 -0700[m
[m
    changed the verison number[m
[m
[33mcommit a11bef06a3f659402fe7563abf99ad00de2209e6[m[m
Author: Scott Chacon <schacon@gmail.com>[m
Date:   Sat Mar 15 10:31:28 2008 -0700[m
[m
    first commit[m
[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [7mgit log --pretty="%h[27m[7m [27m[7m- %s" --author='Junio C Hamano' --since="2008-10-0[27m[7m1[27m[7m" \ [27m
[7m   --before="2008-11-01" --no-merges -- t/[27m[A[A[Agit log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01" \
   --before="2008-11-01" --no-merges -- t/
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01"    --before="2008-11-01" --no-merges -- t/
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ [K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ -[K]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ -[Kgit log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01"    --before="2008-11-01" --no-merges -- t/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--before="2008-11-01" [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--before="2008-11-01" -[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--before="2008-11-01" --[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--before="2008-11-01" --n[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C --before="2008-11-01" --[1@n[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01" --before="2008-11-01" --no-merges -- t/[C[K
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01" --before="2008-11-01" --no-merges -- t[K[K[K[K
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ cd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ ls[K[Kgit status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git mv REA[K[K[K[K[K[K[K[K[K[KECHO[K[K[K[Kecho Readme file content > README[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[KLS
[?2004lLS: command not found
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ L[Kls
[?2004lunix_session
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git-[K --version
[?2004lgit version 2.34.1
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit clone https://github.com/schacon/ticgi[27m[7mt[27m[A]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git clone https://github.com/schacon/ticgit
[?2004lCloning into 'ticgit'...
remote: Enumerating objects: 1857, done.[K
Receiving objects:   0% (1/1857)Receiving objects:   1% (19/1857)Receiving objects:   2% (38/1857)Receiving objects:   3% (56/1857)Receiving objects:   4% (75/1857)Receiving objects:   5% (93/1857)Receiving objects:   6% (112/1857)Receiving objects:   7% (130/1857)Receiving objects:   8% (149/1857)Receiving objects:   9% (168/1857)Receiving objects:  10% (186/1857)Receiving objects:  11% (205/1857)Receiving objects:  12% (223/1857)Receiving objects:  13% (242/1857)Receiving objects:  14% (260/1857)Receiving objects:  15% (279/1857)Receiving objects:  16% (298/1857)Receiving objects:  17% (316/1857)Receiving objects:  18% (335/1857)Receiving objects:  19% (353/1857)Receiving objects:  20% (372/1857)Receiving objects:  21% (390/1857)Receiving objects:  22% (409/1857)Receiving objects:  23% (428/1857)Receiving objects:  24% (446/1857)Receiving objects:  25% (465/1857)Receiving objects:  26% (483/1857)Receiving objects:  27% (502/1857)Receiving objects:  28% (520/1857)Receiving objects:  29% (539/1857)Receiving objects:  30% (558/1857)Receiving objects:  31% (576/1857)Receiving objects:  32% (595/1857)Receiving objects:  33% (613/1857)Receiving objects:  34% (632/1857)Receiving objects:  35% (650/1857)Receiving objects:  36% (669/1857)Receiving objects:  37% (688/1857)Receiving objects:  38% (706/1857)Receiving objects:  39% (725/1857)Receiving objects:  40% (743/1857)Receiving objects:  41% (762/1857)Receiving objects:  42% (780/1857)Receiving objects:  43% (799/1857)Receiving objects:  44% (818/1857)Receiving objects:  45% (836/1857)Receiving objects:  46% (855/1857)Receiving objects:  47% (873/1857)Receiving objects:  48% (892/1857)Receiving objects:  49% (910/1857)Receiving objects:  50% (929/1857)Receiving objects:  51% (948/1857)Receiving objects:  52% (966/1857)Receiving objects:  53% (985/1857)Receiving objects:  54% (1003/1857)Receiving objects:  55% (1022/1857)Receiving objects:  56% (1040/1857)Receiving objects:  57% (1059/1857)Receiving objects:  58% (1078/1857)Receiving objects:  59% (1096/1857)Receiving objects:  60% (1115/1857)Receiving objects:  61% (1133/1857)Receiving objects:  62% (1152/1857)Receiving objects:  63% (1170/1857)Receiving objects:  64% (1189/1857)Receiving objects:  65% (1208/1857)Receiving objects:  66% (1226/1857)Receiving objects:  67% (1245/1857)Receiving objects:  68% (1263/1857)Receiving objects:  69% (1282/1857)Receiving objects:  70% (1300/1857)Receiving objects:  71% (1319/1857)Receiving objects:  72% (1338/1857)Receiving objects:  73% (1356/1857)Receiving objects:  74% (1375/1857)Receiving objects:  75% (1393/1857)Receiving objects:  76% (1412/1857)Receiving objects:  77% (1430/1857)remote: Total 1857 (delta 0), reused 0 (delta 0), pack-reused 1857[K
Receiving objects:  78% (1449/1857)Receiving objects:  79% (1468/1857)Receiving objects:  80% (1486/1857)Receiving objects:  81% (1505/1857)Receiving objects:  82% (1523/1857)Receiving objects:  83% (1542/1857)Receiving objects:  84% (1560/1857)Receiving objects:  85% (1579/1857)Receiving objects:  86% (1598/1857)Receiving objects:  87% (1616/1857)Receiving objects:  88% (1635/1857)Receiving objects:  89% (1653/1857)Receiving objects:  90% (1672/1857)Receiving objects:  91% (1690/1857)Receiving objects:  92% (1709/1857)Receiving objects:  93% (1728/1857)Receiving objects:  94% (1746/1857)Receiving objects:  95% (1765/1857)Receiving objects:  96% (1783/1857)Receiving objects:  97% (1802/1857)Receiving objects:  98% (1820/1857)Receiving objects:  99% (1839/1857)Receiving objects: 100% (1857/1857)Receiving objects: 100% (1857/1857), 334.06 KiB | 3.21 MiB/s, done.
Resolving deltas:   0% (0/837)Resolving deltas:   1% (9/837)Resolving deltas:   2% (17/837)Resolving deltas:   3% (26/837)Resolving deltas:   4% (34/837)Resolving deltas:   5% (42/837)Resolving deltas:   6% (51/837)Resolving deltas:   7% (59/837)Resolving deltas:   8% (67/837)Resolving deltas:   9% (76/837)Resolving deltas:  10% (84/837)Resolving deltas:  11% (93/837)Resolving deltas:  12% (101/837)Resolving deltas:  13% (109/837)Resolving deltas:  14% (118/837)Resolving deltas:  15% (126/837)Resolving deltas:  16% (134/837)Resolving deltas:  17% (143/837)Resolving deltas:  18% (151/837)Resolving deltas:  19% (160/837)Resolving deltas:  20% (168/837)Resolving deltas:  21% (176/837)Resolving deltas:  22% (185/837)Resolving deltas:  23% (193/837)Resolving deltas:  24% (201/837)Resolving deltas:  25% (210/837)Resolving deltas:  26% (218/837)Resolving deltas:  27% (226/837)Resolving deltas:  28% (235/837)Resolving deltas:  29% (243/837)Resolving deltas:  30% (252/837)Resolving deltas:  31% (260/837)Resolving deltas:  32% (269/837)Resolving deltas:  33% (277/837)Resolving deltas:  34% (285/837)Resolving deltas:  35% (293/837)Resolving deltas:  36% (302/837)Resolving deltas:  37% (310/837)Resolving deltas:  38% (319/837)Resolving deltas:  39% (327/837)Resolving deltas:  40% (335/837)Resolving deltas:  41% (344/837)Resolving deltas:  42% (352/837)Resolving deltas:  43% (360/837)Resolving deltas:  44% (369/837)Resolving deltas:  45% (377/837)Resolving deltas:  46% (386/837)Resolving deltas:  47% (394/837)Resolving deltas:  48% (402/837)Resolving deltas:  49% (411/837)Resolving deltas:  50% (419/837)Resolving deltas:  51% (427/837)Resolving deltas:  52% (436/837)Resolving deltas:  53% (444/837)Resolving deltas:  54% (452/837)Resolving deltas:  55% (461/837)Resolving deltas:  56% (469/837)Resolving deltas:  57% (478/837)Resolving deltas:  58% (486/837)Resolving deltas:  59% (494/837)Resolving deltas:  60% (503/837)Resolving deltas:  61% (511/837)Resolving deltas:  62% (519/837)Resolving deltas:  63% (528/837)Resolving deltas:  64% (536/837)Resolving deltas:  65% (545/837)Resolving deltas:  66% (555/837)Resolving deltas:  67% (561/837)Resolving deltas:  68% (570/837)Resolving deltas:  69% (578/837)Resolving deltas:  70% (586/837)Resolving deltas:  71% (595/837)Resolving deltas:  72% (604/837)Resolving deltas:  73% (612/837)Resolving deltas:  74% (621/837)Resolving deltas:  75% (628/837)Resolving deltas:  76% (637/837)Resolving deltas:  77% (646/837)Resolving deltas:  78% (653/837)Resolving deltas:  79% (663/837)Resolving deltas:  80% (670/837)Resolving deltas:  81% (678/837)Resolving deltas:  82% (687/837)Resolving deltas:  83% (695/837)Resolving deltas:  84% (704/837)Resolving deltas:  85% (712/837)Resolving deltas:  86% (720/837)Resolving deltas:  87% (729/837)Resolving deltas:  88% (737/837)Resolving deltas:  89% (745/837)Resolving deltas:  90% (754/837)Resolving deltas:  91% (763/837)Resolving deltas:  92% (771/837)Resolving deltas:  93% (779/837)Resolving deltas:  94% (787/837)Resolving deltas:  95% (796/837)Resolving deltas:  96% (804/837)Resolving deltas:  97% (812/837)Resolving deltas:  98% (821/837)Resolving deltas:  99% (829/837)Resolving deltas: 100% (837/837)Resolving deltas: 100% (837/837), done.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ rm -r ticgit/
[?2004lrm: remove write-protected regular file 'ticgit/.git/objects/pack/pack-3e4afbbcdc19e022e4a41607b37854f047887c0e.idx'? y
rm: remove write-protected regular file 'ticgit/.git/objects/pack/pack-3e4afbbcdc19e022e4a41607b37854f047887c0e.pack'? y
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [7mgit clone https://github.com/schacon/ticgit[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone https://github.com/schacon/ticgit
[?2004lCloning into 'ticgit'...
remote: Enumerating objects: 1857, done.[K
Receiving objects:   0% (1/1857)Receiving objects:   1% (19/1857)Receiving objects:   2% (38/1857)Receiving objects:   3% (56/1857)Receiving objects:   4% (75/1857)Receiving objects:   5% (93/1857)Receiving objects:   6% (112/1857)Receiving objects:   7% (130/1857)Receiving objects:   8% (149/1857)Receiving objects:   9% (168/1857)Receiving objects:  10% (186/1857)Receiving objects:  11% (205/1857)Receiving objects:  12% (223/1857)Receiving objects:  13% (242/1857)Receiving objects:  14% (260/1857)Receiving objects:  15% (279/1857)Receiving objects:  16% (298/1857)Receiving objects:  17% (316/1857)Receiving objects:  18% (335/1857)Receiving objects:  19% (353/1857)Receiving objects:  20% (372/1857)Receiving objects:  21% (390/1857)Receiving objects:  22% (409/1857)Receiving objects:  23% (428/1857)Receiving objects:  24% (446/1857)Receiving objects:  25% (465/1857)Receiving objects:  26% (483/1857)Receiving objects:  27% (502/1857)Receiving objects:  28% (520/1857)Receiving objects:  29% (539/1857)Receiving objects:  30% (558/1857)Receiving objects:  31% (576/1857)Receiving objects:  32% (595/1857)Receiving objects:  33% (613/1857)Receiving objects:  34% (632/1857)Receiving objects:  35% (650/1857)Receiving objects:  36% (669/1857)Receiving objects:  37% (688/1857)Receiving objects:  38% (706/1857)Receiving objects:  39% (725/1857)Receiving objects:  40% (743/1857)Receiving objects:  41% (762/1857)Receiving objects:  42% (780/1857)Receiving objects:  43% (799/1857)Receiving objects:  44% (818/1857)Receiving objects:  45% (836/1857)Receiving objects:  46% (855/1857)Receiving objects:  47% (873/1857)Receiving objects:  48% (892/1857)Receiving objects:  49% (910/1857)Receiving objects:  50% (929/1857)Receiving objects:  51% (948/1857)Receiving objects:  52% (966/1857)Receiving objects:  53% (985/1857)Receiving objects:  54% (1003/1857)Receiving objects:  55% (1022/1857)Receiving objects:  56% (1040/1857)Receiving objects:  57% (1059/1857)Receiving objects:  58% (1078/1857)Receiving objects:  59% (1096/1857)Receiving objects:  60% (1115/1857)Receiving objects:  61% (1133/1857)Receiving objects:  62% (1152/1857)Receiving objects:  63% (1170/1857)Receiving objects:  64% (1189/1857)Receiving objects:  65% (1208/1857)Receiving objects:  66% (1226/1857)Receiving objects:  67% (1245/1857)remote: Total 1857 (delta 0), reused 0 (delta 0), pack-reused 1857[K
Receiving objects:  68% (1263/1857)Receiving objects:  69% (1282/1857)Receiving objects:  70% (1300/1857)Receiving objects:  71% (1319/1857)Receiving objects:  72% (1338/1857)Receiving objects:  73% (1356/1857)Receiving objects:  74% (1375/1857)Receiving objects:  75% (1393/1857)Receiving objects:  76% (1412/1857)Receiving objects:  77% (1430/1857)Receiving objects:  78% (1449/1857)Receiving objects:  79% (1468/1857)Receiving objects:  80% (1486/1857)Receiving objects:  81% (1505/1857)Receiving objects:  82% (1523/1857)Receiving objects:  83% (1542/1857)Receiving objects:  84% (1560/1857)Receiving objects:  85% (1579/1857)Receiving objects:  86% (1598/1857)Receiving objects:  87% (1616/1857)Receiving objects:  88% (1635/1857)Receiving objects:  89% (1653/1857)Receiving objects:  90% (1672/1857)Receiving objects:  91% (1690/1857)Receiving objects:  92% (1709/1857)Receiving objects:  93% (1728/1857)Receiving objects:  94% (1746/1857)Receiving objects:  95% (1765/1857)Receiving objects:  96% (1783/1857)Receiving objects:  97% (1802/1857)Receiving objects:  98% (1820/1857)Receiving objects:  99% (1839/1857)Receiving objects: 100% (1857/1857)Receiving objects: 100% (1857/1857), 334.06 KiB | 1.56 MiB/s, done.
Resolving deltas:   0% (0/837)Resolving deltas:   1% (9/837)Resolving deltas:   2% (17/837)Resolving deltas:   3% (26/837)Resolving deltas:   4% (34/837)Resolving deltas:   5% (42/837)Resolving deltas:   6% (51/837)Resolving deltas:   7% (59/837)Resolving deltas:   8% (67/837)Resolving deltas:   9% (76/837)Resolving deltas:  10% (84/837)Resolving deltas:  11% (93/837)Resolving deltas:  12% (101/837)Resolving deltas:  13% (109/837)Resolving deltas:  14% (118/837)Resolving deltas:  15% (126/837)Resolving deltas:  16% (134/837)Resolving deltas:  17% (143/837)Resolving deltas:  18% (151/837)Resolving deltas:  19% (160/837)Resolving deltas:  20% (169/837)Resolving deltas:  21% (176/837)Resolving deltas:  22% (185/837)Resolving deltas:  23% (194/837)Resolving deltas:  24% (201/837)Resolving deltas:  25% (210/837)Resolving deltas:  26% (218/837)Resolving deltas:  27% (226/837)Resolving deltas:  28% (235/837)Resolving deltas:  29% (243/837)Resolving deltas:  30% (252/837)Resolving deltas:  31% (260/837)Resolving deltas:  32% (268/837)Resolving deltas:  33% (277/837)Resolving deltas:  34% (285/837)Resolving deltas:  35% (293/837)Resolving deltas:  36% (302/837)Resolving deltas:  37% (310/837)Resolving deltas:  38% (319/837)Resolving deltas:  39% (327/837)Resolving deltas:  40% (335/837)Resolving deltas:  41% (344/837)Resolving deltas:  42% (352/837)Resolving deltas:  43% (360/837)Resolving deltas:  44% (370/837)Resolving deltas:  45% (377/837)Resolving deltas:  46% (386/837)Resolving deltas:  47% (394/837)Resolving deltas:  48% (402/837)Resolving deltas:  49% (411/837)Resolving deltas:  50% (420/837)Resolving deltas:  51% (427/837)Resolving deltas:  52% (436/837)Resolving deltas:  53% (444/837)Resolving deltas:  54% (452/837)Resolving deltas:  55% (461/837)Resolving deltas:  56% (469/837)Resolving deltas:  57% (478/837)Resolving deltas:  58% (486/837)Resolving deltas:  59% (494/837)Resolving deltas:  60% (504/837)Resolving deltas:  61% (511/837)Resolving deltas:  62% (519/837)Resolving deltas:  63% (528/837)Resolving deltas:  64% (536/837)Resolving deltas:  65% (545/837)Resolving deltas:  66% (553/837)Resolving deltas:  67% (561/837)Resolving deltas:  68% (570/837)Resolving deltas:  69% (578/837)Resolving deltas:  70% (586/837)Resolving deltas:  71% (595/837)Resolving deltas:  72% (603/837)Resolving deltas:  73% (612/837)Resolving deltas:  74% (620/837)Resolving deltas:  75% (628/837)Resolving deltas:  76% (637/837)Resolving deltas:  77% (645/837)Resolving deltas:  78% (653/837)Resolving deltas:  79% (662/837)Resolving deltas:  80% (670/837)Resolving deltas:  81% (678/837)Resolving deltas:  82% (687/837)Resolving deltas:  83% (695/837)Resolving deltas:  84% (704/837)Resolving deltas:  85% (712/837)Resolving deltas:  86% (720/837)Resolving deltas:  87% (729/837)Resolving deltas:  88% (737/837)Resolving deltas:  89% (745/837)Resolving deltas:  90% (754/837)Resolving deltas:  91% (762/837)Resolving deltas:  92% (771/837)Resolving deltas:  93% (779/837)Resolving deltas:  94% (787/837)Resolving deltas:  95% (797/837)Resolving deltas:  96% (804/837)Resolving deltas:  97% (812/837)Resolving deltas:  98% (821/837)Resolving deltas:  99% (829/837)Resolving deltas: 100% (837/837)Resolving deltas: 100% (837/837), done.
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd ticgit/
[?2004l[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ ls
[?2004lLICENSE_GPL  Rakefile  [0m[01;34mexamples[0m  [01;34mspec[0m
LICENSE_MIT  TODO      [01;34mlib[0m       ticgit-ng.gemspec
README.mkd   [01;34mbin[0m       [01;34mnote[0m
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remote
[?2004lorigin
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remote -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ ls
[?2004lLICENSE_GPL  Rakefile  [0m[01;34mexamples[0m  [01;34mspec[0m
LICENSE_MIT  TODO      [01;34mlib[0m       ticgit-ng.gemspec
README.mkd   [01;34mbin[0m       [01;34mnote[0m
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ cd grit[K[K[K[K[K[K[Kk[Kcd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ks
[?2004lks: command not found
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ ls
[?2004l[0m[01;34mTA-MLEP[0m          my_unix_session        [01;34msimplegit-progit[0m
git_PAT_27_6_24  [01;34mshell-lesson-data[0m      [01;34mticgit[0m
my_git_session   [01;31mshell-lesson-data.zip[0m
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd simplegit-progit/
[?2004l[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ git remote -v
[?2004lorigin	https://github.com/schacon/simplegit-progit (fetch)
origin	https://github.com/schacon/simplegit-progit (push)
[?2004h]0;naveen@MSI: ~/simplegit-progit[01;32mnaveen@MSI[00m:[01;34m~/simplegit-progit[00m$ cd 
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd ticgit/
[?2004l[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remote add pb [7mhttps://github.com/paulbo[27m[7mo[27m[7mne/ticgit[27m[A]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://github.com/paulboone/ticgit
[?2004l[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remote -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git getch[K[K[K[K[Kfetch ppb[K[Kb
[?2004lremote: Enumerating objects: 43, done.[K
remote: Counting objects:   4% (1/22)[Kremote: Counting objects:   9% (2/22)[Kremote: Counting objects:  13% (3/22)[Kremote: Counting objects:  18% (4/22)[Kremote: Counting objects:  22% (5/22)[Kremote: Counting objects:  27% (6/22)[Kremote: Counting objects:  31% (7/22)[Kremote: Counting objects:  36% (8/22)[Kremote: Counting objects:  40% (9/22)[Kremote: Counting objects:  45% (10/22)[Kremote: Counting objects:  50% (11/22)[Kremote: Counting objects:  54% (12/22)[Kremote: Counting objects:  59% (13/22)[Kremote: Counting objects:  63% (14/22)[Kremote: Counting objects:  68% (15/22)[Kremote: Counting objects:  72% (16/22)[Kremote: Counting objects:  77% (17/22)[Kremote: Counting objects:  81% (18/22)[Kremote: Counting objects:  86% (19/22)[Kremote: Counting objects:  90% (20/22)[Kremote: Counting objects:  95% (21/22)[Kremote: Counting objects: 100% (22/22)[Kremote: Counting objects: 100% (22/22), done.[K
remote: Total 43 (delta 22), reused 22 (delta 22), pack-reused 21[K
Unpacking objects:   2% (1/43)Unpacking objects:   4% (2/43)Unpacking objects:   6% (3/43)Unpacking objects:   9% (4/43)Unpacking objects:  11% (5/43)Unpacking objects:  13% (6/43)Unpacking objects:  16% (7/43)Unpacking objects:  18% (8/43)Unpacking objects:  20% (9/43)Unpacking objects:  23% (10/43)Unpacking objects:  25% (11/43)Unpacking objects:  27% (12/43)Unpacking objects:  30% (13/43)Unpacking objects:  32% (14/43)Unpacking objects:  34% (15/43)Unpacking objects:  37% (16/43)Unpacking objects:  39% (17/43)Unpacking objects:  41% (18/43)Unpacking objects:  44% (19/43)Unpacking objects:  46% (20/43)Unpacking objects:  48% (21/43)Unpacking objects:  51% (22/43)Unpacking objects:  53% (23/43)Unpacking objects:  55% (24/43)Unpacking objects:  58% (25/43)Unpacking objects:  60% (26/43)Unpacking objects:  62% (27/43)Unpacking objects:  65% (28/43)Unpacking objects:  67% (29/43)Unpacking objects:  69% (30/43)Unpacking objects:  72% (31/43)Unpacking objects:  74% (32/43)Unpacking objects:  76% (33/43)Unpacking objects:  79% (34/43)Unpacking objects:  81% (35/43)Unpacking objects:  83% (36/43)Unpacking objects:  86% (37/43)Unpacking objects:  88% (38/43)Unpacking objects:  90% (39/43)Unpacking objects:  93% (40/43)Unpacking objects:  95% (41/43)Unpacking objects:  97% (42/43)Unpacking objects: 100% (43/43)Unpacking objects: 100% (43/43), 5.99 KiB | 322.00 KiB/s, done.
From https://github.com/paulboone/ticgit
 * [new branch]      master     -> pb/master
 * [new branch]      ticgit     -> pb/ticgit
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git 
add               fsck              remote 
am                gc                repack 
apply             gitk              replace 
archive           grep              request-pull 
bisect            gui               reset 
blame             help              restore 
branch            init              revert 
bundle            instaweb          rm 
checkout          lfs               send-email 
cherry            log               shortlog 
cherry-pick       maintenance       show 
citool            merge             show-branch 
clean             mergetool         sparse-checkout 
clone             mv                stage 
commit            notes             stash 
config            prune             status 
describe          pull              submodule 
diff              push              switch 
difftool          range-diff        tag 
fetch             rebase            whatchanged 
format-patch      reflog            worktree 
]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git branch 
FETCH_HEAD      origin/HEAD     pb/master 
HEAD            origin/master   pb/ticgit 
master          origin/ticgit   
]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git branch [K[K[K[K[K[K[K[K remote show origin
[?2004l* remote origin
  Fetch URL: https://github.com/schacon/ticgit
  Push  URL: https://github.com/schacon/ticgit
  HEAD branch: master
  Remote branches:
    master tracked
    ticgit tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git rename [K[K[K[K[Kmote rename pb paul
[?2004l[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remote
[?2004lorigin
paul
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git remove rm [K[K[K[K[K[K[K[Kmote rm paul
[?2004l[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ gi [Kt remote
[?2004lorigin
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git tah
[?2004lgit: 'tah' is not a git command. See 'git --help'.

The most similar commands are
	stash
	tag
[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git tah[Kg
[?2004l[?1h=[K[?1l>[?2004h]0;naveen@MSI: ~/ticgit[01;32mnaveen@MSI[00m:[01;34m~/ticgit[00m$ git tah [K[K[K[K[K[K[K[Kcd ..
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag -a v1.4 -m "my version 1.4"
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tah[Kg
[?2004l[?1h=v1.4[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git show v1.4
[?2004l[?1h=[33mtag v1.4[m[m
Tagger: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 16:00:26 2024 +0530[m
[m
my version 1.4[m
[m
[33mcommit 55fb00889196c6db7e56f5e70ae24fbb91b4d77e[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mt[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33mag: v1.4[m[33m)[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 14:13:58 2024 +0530[m
[m
    Renamed file[m
[m
[1mdiff --git a/README b/README[m[m
[1mdeleted file mode 100644[m[m
[1mindex a352585..0000000[m[m
[1m--- a/README[m[m
[1m+++ /dev/null[m[m
[36m@@ -1,3 +0,0 @@[m[m
[31m-Learning git[m[m
[31m-Modifing [m[m
[31m-modification2[m[m
[1mdiff --git a/my_unix_session b/unix_session[m[m
[1msimilarity index 100%[m[m
[1mrename from my_unix_session[m[m
[1mrename to unix_session[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag v1.4-lw
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag
[?2004l[?1h=v1.4[m
v1.4-lw[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git show v.14-lw
[?2004lfatal: ambiguous argument 'v.14-lw': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git show v.14-lw[1P14-lw[C.4-lw
[?2004l[?1h=[33mcommit 55fb00889196c6db7e56f5e70ae24fbb91b4d77e[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mt[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33mag: v1.4-lw[m[33m, [m[1;33mtag: v1.4[m[33m)[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 14:13:58 2024 +0530[m
[m
    Renamed file[m
[m
[1mdiff --git a/README b/README[m[m
[1mdeleted file mode 100644[m[m
[1mindex a352585..0000000[m[m
[1m--- a/README[m[m
[1m+++ /dev/null[m[m
[36m@@ -1,3 +0,0 @@[m[m
[31m-Learning git[m[m
[31m-Modifing [m[m
[31m-modification2[m[m
[1mdiff --git a/my_unix_session b/unix_session[m[m
[1msimilarity index 100%[m[m
[1mrename from my_unix_session[m[m
[1mrename to unix_session[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git log --pretty=oneline
[?2004l[?1h=[33m55fb00889196c6db7e56f5e70ae24fbb91b4d77e[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mtag: v1.[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33m4-lw[m[33m, [m[1;33mtag: v1.4[m[33m)[m Renamed file[m
[33mffe9fb68d47df2aa8ae01fba4eeb65d1c17a20b2[m Commit without staging[m
[33m53e3fc956a472c2e4f2392a758a7dc294ce80546[m Commit from nano[m
[33ma35d21d1cfe735afc8200c4311b6c2529c46fa1d[m Added Readme file[m
[33m8c3c2756017bdad44969b2c307632a79b26efc6d[m Unix session[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag -a v1.2 53e
[?2004lfatal: Failed to resolve '53e' as a valid ref.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag -a v1.2 53e3fc
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;49r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[47;26H(B[0;7m[ Reading... ](B[m[47;25H(B[0;7m[ Read 5 lines ](B[m[H(B[0;7m  GNU nano 6.2  /home/naveen/TA-MLEP/.git/TAG_EDITMSG           [1;63H(B[m[48d(B[0;7m^G(B[m Help     (B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[49G(B[0;7m^T(B[m Execute[49d(B[0;7m^X(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste    (B[0;7m^J(B[m Justify[3d[36m#[4d# Write a message for tag:[5d#   v1.2[6d# Lines starting with '#' will be ignored.[2d[39m(B[m[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[5d[?25l[?12l[?25h[6d[?25l[?12l[?25h[7d[?25l[?12l[?25h[?25l[1;55H(B[0;7m*[63G(B[m[?12l[?25h[7dv[?25l[?12l[?25h1[?25l[?12l[?25h.[?25l[?12l[?25h2[?25l[48;13H    (B[0;7mM-D(B[m DOS Format  (B[0;7mM-A(B[m Append[49G(B[0;7mM-B(B[m Backup File[49;2H(B[0;7mC(B[m Cancel       (B[0;7mM-M(B[m Mac Format  (B[0;7mM-P(B[m Prepend     (B[0;7m^T(B[m Browse[K[47d(B[0;7mFile Name to Write: /home/naveen/TA-MLEP/.git/TAG_EDITMSG       [47;58H(B[m[?12l[?25h[?25l[?12l[?25h[?25l[47;25H[1K (B[0;7m[ Writing... ](B[m[K[1;55H(B[0;7m [63G(B[m[47;24H(B[0;7m[ Wrote 6 lines ](B[m[48;13H(B[0;7m^O(B[m Write Out(B[0;7m^W(B[m Where Is (B[0;7m^K(B[m Cut[49G(B[0;7m^T(B[m Execute[K[49;2H(B[0;7mX(B[m Exit     (B[0;7m^R(B[m Read File(B[0;7m^\(B[m Replace  (B[0;7m^U(B[m Paste    (B[0;7m^J(B[m Justify[?12l[?25h[7;5H[?25l[47d[J[49d[?12l[?25h[49;1H[?1049l[23;0;0t[?1l>[?2004l[K[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tah
[?2004lgit: 'tah' is not a git command. See 'git --help'.

The most similar commands are
	stash
	tag
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tah[Kg
[?2004l[?1h=v1.2[m
v1.4[m
v1.4-lw[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git show v1.2
[?2004l[?1h=[33mtag v1.2[m[m
Tagger: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 16:03:54 2024 +0530[m
[m
v1.2[m
[m
[33mcommit 53e3fc956a472c2e4f2392a758a7dc294ce80546[m[33m ([m[1;33mtag: v1.2[m[33m)[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 14:01:39 2024 +0530[m
[m
    Commit from nano[m
[m
[1mdiff --git a/.gitignore b/.gitignore[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..f05287e[m[m
[1m--- /dev/null[m[m
[1m+++ b/.gitignore[m[m
[36m@@ -0,0 +1,2 @@[m[m
[32m+[m[32m*.[oa][m[m
[32m+[m[32m*~[m[m
[1mdiff --git a/README b/README[m[m
[1mindex 8ef7bbc..cd3b497 100644[m[m
[1m--- a/README[m[m
[1m+++ b/README[m[m
[36m@@ -1 +1,2 @@[m[m
 Learning git[m[m
[32m+[m[32mModifing[m[41m [m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ gt[Kit add *
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git commit 
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git push origin v1,[K.4
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
Enumerating objects: 16, done.
Counting objects:   6% (1/16)Counting objects:  12% (2/16)Counting objects:  18% (3/16)Counting objects:  25% (4/16)Counting objects:  31% (5/16)Counting objects:  37% (6/16)Counting objects:  43% (7/16)Counting objects:  50% (8/16)Counting objects:  56% (9/16)Counting objects:  62% (10/16)Counting objects:  68% (11/16)Counting objects:  75% (12/16)Counting objects:  81% (13/16)Counting objects:  87% (14/16)Counting objects:  93% (15/16)Counting objects: 100% (16/16)Counting objects: 100% (16/16), done.
Delta compression using up to 8 threads
Compressing objects:   9% (1/11)Compressing objects:  18% (2/11)Compressing objects:  27% (3/11)Compressing objects:  36% (4/11)Compressing objects:  45% (5/11)Compressing objects:  54% (6/11)Compressing objects:  63% (7/11)Compressing objects:  72% (8/11)Compressing objects:  81% (9/11)Compressing objects:  90% (10/11)Compressing objects: 100% (11/11)Compressing objects: 100% (11/11), done.
Writing objects:   6% (1/16)Writing objects:  12% (2/16)Writing objects:  18% (3/16)Writing objects:  25% (4/16)Writing objects:  31% (5/16)Writing objects:  37% (6/16)Writing objects:  43% (7/16)Writing objects:  50% (8/16)Writing objects:  56% (9/16)Writing objects:  62% (10/16)Writing objects:  68% (11/16)Writing objects:  75% (12/16)Writing objects:  81% (13/16)Writing objects:  87% (14/16)Writing objects:  93% (15/16)Writing objects: 100% (16/16)Writing objects: 100% (16/16), 21.51 KiB | 3.07 MiB/s, done.
Total 16 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Navee-nTA/TA-MLEP.git
 * [new tag]         v1.4 -> v1.4
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git push origin --tags
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
Enumerating objects: 1, done.
Counting objects: 100% (1/1)Counting objects: 100% (1/1), done.
Writing objects: 100% (1/1)Writing objects: 100% (1/1), 165 bytes | 165.00 KiB/s, done.
Total 1 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Navee-nTA/TA-MLEP.git
 * [new tag]         v1.2 -> v1.2
 * [new tag]         v1.4-lw -> v1.4-lw
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git tag -d v.[K[Kv1.4-lw
[?2004lDeleted tag 'v1.4-lw' (was 55fb008)
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git push origin :refs/tags/v1.4-lw
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
To https://github.com/Navee-nTA/TA-MLEP.git
 - [deleted]         v1.4-lw
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git push
[?2004lfatal: The current branch main has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin main

[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit push --set-upstream origin main[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit push --set-upstream origin main
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Navee-nTA/TA-MLEP.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global alias.co checkout[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global alias.co checkout
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global alias.br branch[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global alias.br branch
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global alias.ci commit[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global alias.ci commit
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global alias.st status[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global alias.st status
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global alias.last 'log -1 HEA[27m[7mD[27m[7m'[27m[A]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git config --global alias.last 'log -1 HEAD'
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ go[Kit last
[?2004l[?1h=[33mcommit 55fb00889196c6db7e56f5e70ae24fbb91b4d77e[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mt[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33mag: v1.4[m[33m, [m[1;31morigin/main[m[33m)[m[m
Author: Naveen-nTA <naveen.antony@tigeranalytics.com>[m
Date:   Thu Jun 27 14:13:58 2024 +0530[m
[m
    Renamed file[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ exit
[?2004lexit

Script done on 2024-06-27 16:17:10+05:30 [COMMAND_EXIT_CODE="0"]
Script started on 2024-06-27 19:16:40+05:30 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="53" LINES="45"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ GIT PU[K[K[K[K[K[Kf[Kgit push --set-upstream [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kcd
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 
[?2004l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
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 [C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd[K TA-MLEP/ls[Kscript -a my_git_session [K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pgit --version\sudo apt install git-all[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pgit --version\[Kscript -a my_git_session[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgit push ==ste[K[K[K[K[K--set-upstream origin merge_te sting
[?2004lfatal: not a git repository (or any of the parent directories): .git
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd TA-MLEP/
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ cd TA-MLEP/git push --set-upstream origin merge_testing
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
Enumerating objects: 16, done.
Counting objects:   6% (1/16)Counting objects:  12% (2/16)Counting objects:  18% (3/16)Counting objects:  25% (4/16)Counting objects:  31% (5/16)Counting objects:  37% (6/16)Counting objects:  43% (7/16)Counting objects:  50% (8/16)Counting objects:  56% (9/16)Counting objects:  62% (10/16)Counting objects:  68% (11/16)Counting objects:  75% (12/16)Counting objects:  81% (13/16)Counting objects:  87% (14/16)Counting objects:  93% (15/16)Counting objects: 100% (16/16)Counting objects: 100% (16/16), done.
Delta compression using up to 8 threads
Compressing objects:   9% (1/11)Compressing objects:  18% (2/11)Compressing objects:  27% (3/11)Compressing objects:  36% (4/11)Compressing objects:  45% (5/11)Compressing objects:  54% (6/11)Compressing objects:  63% (7/11)Compressing objects:  72% (8/11)Compressing objects:  81% (9/11)Compressing objects:  90% (10/11)Compressing objects: 100% (11/11)Compressing objects: 100% (11/11), done.
Writing objects:   6% (1/15)Writing objects:  13% (2/15)Writing objects:  20% (3/15)Writing objects:  26% (4/15)Writing objects:  33% (5/15)Writing objects:  40% (6/15)Writing objects:  46% (7/15)Writing objects:  53% (8/15)Writing objects:  60% (9/15)Writing objects:  66% (10/15)Writing objects:  73% (11/15)Writing objects:  80% (12/15)Writing objects:  86% (13/15)Writing objects:  93% (14/15)Writing objects: 100% (15/15)Writing objects: 100% (15/15), 1.60 KiB | 547.00 KiB/s, done.
Total 15 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), done.[K
remote: 
remote: Create a pull request for 'merge_testing' on GitHub by visiting:[K
remote:      https://github.com/Navee-nTA/TA-MLEP/pull/new/merge_testing[K
remote: 
To https://github.com/Navee-nTA/TA-MLEP.git
 * [new branch]      merge_testing -> merge_testing
Branch 'merge_testing' set up to track remote branch 'merge_testing' from 'origin'.
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git branchh all[K[K[K[K[K -all
[?2004lerror: did you mean `--all` (with two dashes)?
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git branch -all-all
[?2004l[?1h=* [32mmain[m[m
  merge_testing[m[m
  [31mremotes/origin/main[m[m
  [31mremotes/origin/merge_testing[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git push origin --delete [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgit ls-remote origin
[?2004lUsername for 'https://github.com': TIger     Navee-nTA
Password for 'https://Navee-nTA@github.com': 
55fb00889196c6db7e56f5e70ae24fbb91b4d77e	HEAD
55fb00889196c6db7e56f5e70ae24fbb91b4d77e	refs/heads/main
d064acddd2bf9a6dc7118db33c3d0596177c1e7b	refs/heads/merge_testing
3300480e64745077ba323af963c91d4a9ae43861	refs/tags/v1.2
53e3fc956a472c2e4f2392a758a7dc294ce80546	refs/tags/v1.2^{}
a315f0c7da59a016356eb468027f1ad1761d6237	refs/tags/v1.4
55fb00889196c6db7e56f5e70ae24fbb91b4d77e	refs/tags/v1.4^{}
[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [K]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ [7mgit config --global creden[27m[7mt[27m[7mial.helper cache[27m[A]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git config --global credential.helper cache
[?2004l[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ git branch -vv
[?2004l[?1h=* [32mmain         [m d064acd [[34morigin/main[m: ahead 5] F[m [32m[m[34m[mile edit done[m
  merge_testing[m d064acd [[34morigin/merge_testing[m] F[m [m[34m[mile edit done[m
[K[?1l>[?2004h]0;naveen@MSI: ~/TA-MLEP[01;32mnaveen@MSI[00m:[01;34m~/TA-MLEP[00m$ exit
[?2004lexit

Script done on 2024-06-27 20:13:11+05:30 [COMMAND_EXIT_CODE="0"]
Script started on 2024-06-27 22:59:48+05:30 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="48" LINES="45"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd ~/,[K.ssh
[?2004lbash: cd: /home/naveen/.ssh: No such file or directory
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ exit
[?2004lexit

Script done on 2024-06-27 23:00:07+05:30 [COMMAND_EXIT_CODE="1"]
Script started on 2024-06-27 23:06:12+05:30 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="48" LINES="45"]
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ [7mgit clone https://github.com/tonyc[27m[7mh[27m[7macon/blink[27m[A]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ git clone https://github.com/tonychacon/blink
[?2004lCloning into 'blink'...
remote: Enumerating objects: 23, done.[K
remote: Total 23 (delta 0), reused 0 (delta 0), pack-reused 23[K
Receiving objects:   4% (1/23)Receiving objects:   8% (2/23)Receiving objects:  13% (3/23)Receiving objects:  17% (4/23)Receiving objects:  21% (5/23)Receiving objects:  26% (6/23)Receiving objects:  30% (7/23)Receiving objects:  34% (8/23)Receiving objects:  39% (9/23)Receiving objects:  43% (10/23)Receiving objects:  47% (11/23)Receiving objects:  52% (12/23)Receiving objects:  56% (13/23)Receiving objects:  60% (14/23)Receiving objects:  65% (15/23)Receiving objects:  69% (16/23)Receiving objects:  73% (17/23)Receiving objects:  78% (18/23)Receiving objects:  82% (19/23)Receiving objects:  86% (20/23)Receiving objects:  91% (21/23)Receiving objects:  95% (22/23)Receiving objects: 100% (23/23)Receiving objects: 100% (23/23), done.
Resolving deltas:   0% (0/5)Resolving deltas:  20% (1/5)Resolving deltas:  40% (2/5)Resolving deltas:  60% (3/5)Resolving deltas:  80% (4/5)Resolving deltas: 100% (5/5)Resolving deltas: 100% (5/5), done.
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cd blink/
[?2004l[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ git checkout -b slow-blink
[?2004lSwitched to a new branch 'slow-blink'
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ sed [K[K[Ked -i 's/1000/3000/' blink. ino
[?2004l[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ git diff --word-fi[K[Kdiff
[?2004l[?1h=[1mdiff --git a/blink.ino b/blink.ino[m[m
[1mindex 15b9911..a6cc5a5 100644[m[m
[1m--- a/blink.ino[m[m
[1m+++ b/blink.ino[m[m
[36m@@ -18,7 +18,7 @@[m [mvoid setup() {[m[m
// the loop routine runs over and over again for[m ever:[m[m
void loop() {[m[m
  digitalWrite(led, HIGH);   // turn the LED on [m (HIGH is the voltage level)[m[m
  [31m[-delay(1000);-][m[32m{+delay(3000);+}[m              [m [31m[m[32m[m // wait for a second[m
  digitalWrite(led, LOW);    // turn the LED off[m  by making the voltage LOW[m[m
  [31m[-delay(1000);-][m[32m{+delay(3000);+}[m              [m [31m[m[32m[m // wait for a second[m
}[m[m
[K[?1l>[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ git commit -am 'Changed dela y to 3 seconde[Ks'
[?2004l[slow-blink ec932e8] Changed delay to 3 seconds
 1 file changed, 2 insertions(+), 2 deletions(-)
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ git ush[K[K[Kpush origin slow-blink 
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ cd
[?2004l[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 
[?2004l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
[?2004h]0;naveen@MSI: ~[01;32mnaveen@MSI[00m:[01;34m~[00m$ cat git_PAT_27_6_24 [C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd[Kgit push origin slow-blink [C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd[K -
[?2004l/home/naveen/blink
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ cd -at git_PAT_27_6_24 d[Kgit push origin slow-blink 
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/tonychacon/blink/'
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ git push origin slow-blink [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd -[Kgit push origin slow-blink 
[?2004lUsername for 'https://github.com': Navee-nTA
Password for 'https://Navee-nTA@github.com': 
remote: Permission to tonychacon/blink.git denied to Navee-nTA.
fatal: unable to access 'https://github.com/tonychacon/blink/': The requested URL returned error: 403
[?2004h]0;naveen@MSI: ~/blink[01;32mnaveen@MSI[00m:[01;34m~/blink[00m$ exit
[?2004lexit

Script done on 2024-06-27 23:09:18+05:30 [COMMAND_EXIT_CODE="128"]
